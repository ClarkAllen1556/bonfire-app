searchNodes=[{"doc":"","ref":"Bonfire.Application.html","title":"Bonfire.Application","type":"module"},{"doc":"","ref":"Bonfire.Application.html#applications/1","title":"Bonfire.Application.applications/1","type":"function"},{"doc":"Callback implementation for Application.config_change/3 .","ref":"Bonfire.Application.html#config_change/3","title":"Bonfire.Application.config_change/3","type":"function"},{"doc":"","ref":"Bonfire.Application.html#deps/0","title":"Bonfire.Application.deps/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#name/0","title":"Bonfire.Application.name/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#named_version/0","title":"Bonfire.Application.named_version/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#repository/0","title":"Bonfire.Application.repository/0","type":"function"},{"doc":"Callback implementation for Application.start/2 .","ref":"Bonfire.Application.html#start/2","title":"Bonfire.Application.start/2","type":"function"},{"doc":"","ref":"Bonfire.Application.html#version/0","title":"Bonfire.Application.version/0","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Boundaries.ChannelCase.html","title":"Bonfire.Boundaries.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Boundaries.ConnCase.html","title":"Bonfire.Boundaries.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Boundaries.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Boundaries.DataCase.html","title":"Bonfire.Boundaries.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Boundaries.DataCase.html#errors_on/1","title":"Bonfire.Boundaries.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.DataHelpers.html","title":"Bonfire.Boundaries.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html","title":"Bonfire.Boundaries.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Boundaries.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Boundaries.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Boundaries.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Boundaries.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Boundaries.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#conn/0","title":"Bonfire.Boundaries.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#conn/1","title":"Bonfire.Boundaries.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#conn/2","title":"Bonfire.Boundaries.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Boundaries.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Boundaries.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Boundaries.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Boundaries.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Test.FakeHelpers.html","title":"Bonfire.Boundaries.Test.FakeHelpers","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Breadpub.ChannelCase.html","title":"Bonfire.Breadpub.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Breadpub.ConnCase.html","title":"Bonfire.Breadpub.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Breadpub.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Breadpub.DataCase.html","title":"Bonfire.Breadpub.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Breadpub.DataCase.html#errors_on/1","title":"Bonfire.Breadpub.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.DataHelpers.html","title":"Bonfire.Breadpub.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html","title":"Bonfire.Breadpub.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Breadpub.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Breadpub.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Breadpub.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Breadpub.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Breadpub.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#conn/0","title":"Bonfire.Breadpub.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#conn/1","title":"Bonfire.Breadpub.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#conn/2","title":"Bonfire.Breadpub.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Breadpub.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Breadpub.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Breadpub.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Breadpub.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.FakeHelpers.html","title":"Bonfire.Breadpub.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Test.FakeHelpers.html#fake_account!/1","title":"Bonfire.Breadpub.Test.FakeHelpers.fake_account!/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Test.FakeHelpers.html#fake_user!/2","title":"Bonfire.Breadpub.Test.FakeHelpers.fake_user!/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ChannelCase.html","title":"Bonfire.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.ChannelCase.html","title":"Bonfire.Classify.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.ConnCase.html","title":"Bonfire.Classify.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Classify.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.DataCase.html","title":"Bonfire.Classify.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Classify.DataCase.html#errors_on/1","title":"Bonfire.Classify.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.DataHelpers.html","title":"Bonfire.Classify.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html","title":"Bonfire.Classify.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Classify.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Classify.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Classify.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Classify.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Classify.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#conn/0","title":"Bonfire.Classify.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#conn/1","title":"Bonfire.Classify.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#conn/2","title":"Bonfire.Classify.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Classify.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Classify.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Classify.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Classify.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Classify.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Classify.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Classify.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Classify.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Classify.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ConnCase.html","title":"Bonfire.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.DataCase.html","title":"Bonfire.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.DataCase.html#errors_on/1","title":"Bonfire.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.DataHelpers.html","title":"Bonfire.DataHelpers","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.ChannelCase.html","title":"Bonfire.Editor.Ck.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.ConnCase.html","title":"Bonfire.Editor.Ck.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Editor.Ck.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.DataCase.html","title":"Bonfire.Editor.Ck.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Editor.Ck.DataCase.html#errors_on/1","title":"Bonfire.Editor.Ck.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.DataHelpers.html","title":"Bonfire.Editor.Ck.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html","title":"Bonfire.Editor.Ck.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Editor.Ck.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Editor.Ck.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#conn/0","title":"Bonfire.Editor.Ck.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#conn/1","title":"Bonfire.Editor.Ck.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#conn/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Editor.Ck.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Editor.Ck.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Editor.Ck.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.ChannelCase.html","title":"Bonfire.Federate.ActivityPub.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.ConnCase.html","title":"Bonfire.Federate.ActivityPub.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Federate.ActivityPub.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.DataCase.html","title":"Bonfire.Federate.ActivityPub.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Federate.ActivityPub.DataCase.html#errors_on/1","title":"Bonfire.Federate.ActivityPub.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html","title":"Bonfire.Federate.ActivityPub.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.ChannelCase.html","title":"Bonfire.Geolocate.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.ConnCase.html","title":"Bonfire.Geolocate.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Geolocate.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.DataCase.html","title":"Bonfire.Geolocate.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Geolocate.DataCase.html#errors_on/1","title":"Bonfire.Geolocate.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.DataHelpers.html","title":"Bonfire.Geolocate.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html","title":"Bonfire.Geolocate.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Geolocate.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post/4","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_200/3","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_data/3","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_errors/2","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_data/5","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_errors/4","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_key/6","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Geolocate.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Geolocate.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Geolocate.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"Root GraphQL Schema. Only active if the Bonfire.GraphQL extension is present.","ref":"Bonfire.GraphQL.Schema.html","title":"Bonfire.GraphQL.Schema","type":"module"},{"doc":"Define dataloaders see https://hexdocs.pm/absinthe/1.4.6/ecto.html#dataloader","ref":"Bonfire.GraphQL.Schema.html#context/1","title":"Bonfire.GraphQL.Schema.context/1","type":"function"},{"doc":"hydrate SDL schema with resolvers","ref":"Bonfire.GraphQL.Schema.html#hydrate/2","title":"Bonfire.GraphQL.Schema.hydrate/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Schema.html#schema_to_api_type/2","title":"Bonfire.GraphQL.Schema.schema_to_api_type/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html","title":"Bonfire.GraphQL.Test.GraphQLFields","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#activity_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.activity_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#auth_payload_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.auth_payload_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collection_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collection_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collection_follows_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collection_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collection_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collection_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collection_spread/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collection_spread/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collection_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collection_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collections_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collections_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#collections_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.collections_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#comment_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.comment_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#comments_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.comments_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#communities_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.communities_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#communities_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.communities_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#community_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.community_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#community_follows_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.community_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#community_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.community_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#community_spread/1","title":"Bonfire.GraphQL.Test.GraphQLFields.community_spread/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#community_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.community_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#confirm_email_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.confirm_email_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#confirm_email_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.confirm_email_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#copy_resource_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.copy_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#copy_resource_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.copy_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_collection_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_collection_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_collection_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_collection_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_community_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_community_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_community_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_community_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_flag_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_flag_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_flag_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_flag_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_follow_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_follow_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_follow_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_follow_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_like_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_like_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_like_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_like_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_resource_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_resource_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_session_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_session_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_session_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_session_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_user_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_user_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#create_user_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.create_user_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#deactivation_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.deactivation_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#deactivation_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.deactivation_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#delete_self_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.delete_self_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#delete_self_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.delete_self_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#delete_session_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.delete_session_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#feature_basics/0","title":"Bonfire.GraphQL.Test.GraphQLFields.feature_basics/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#feature_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.feature_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#feature_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.feature_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#feature_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.feature_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#features_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.features_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#features_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.features_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#flag_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.flag_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#flag_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.flag_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#flag_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.flag_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#flags_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.flags_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#flags_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.flags_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follow_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follow_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follow_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follow_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follow_remote_actor_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follow_remote_actor_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follow_remote_actor_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follow_remote_actor_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follow_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follow_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#followed_collection_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.followed_collection_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#followed_community_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.followed_community_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#followers_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.followers_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#follows_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_mutation/3","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_mutation/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_mutation/4","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_mutation/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_query/2","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_query/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_query/3","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_query/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_submutation/4","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_submutation/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_submutation/5","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_submutation/5","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_subquery/3","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_subquery/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#gen_subquery/4","title":"Bonfire.GraphQL.Test.GraphQLFields.gen_subquery/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#invite_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.invite_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#invite_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.invite_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#invite_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.invite_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#like_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.like_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#like_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.like_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#like_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.like_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#likers_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.likers_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#likes_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.likes_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#me_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.me_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#me_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.me_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#page_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.page_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#page_info_fields/0","title":"Bonfire.GraphQL.Test.GraphQLFields.page_info_fields/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#page_subquery/3","title":"Bonfire.GraphQL.Test.GraphQLFields.page_subquery/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#page_subquery/4","title":"Bonfire.GraphQL.Test.GraphQLFields.page_subquery/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#reset_password_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.reset_password_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#reset_password_request_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.reset_password_request_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#reset_password_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.reset_password_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resource_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resource_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resource_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resource_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resource_spread/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resource_spread/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resource_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resource_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resources_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resources_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#resources_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.resources_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#thread_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.thread_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#threads_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.threads_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_collection_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_collection_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_collection_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_collection_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_community_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_community_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_community_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_community_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_flag_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_flag_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_flag_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_flag_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_profile_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_profile_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_profile_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_profile_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_resource_mutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#update_resource_submutation/1","title":"Bonfire.GraphQL.Test.GraphQLFields.update_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#user_fields/1","title":"Bonfire.GraphQL.Test.GraphQLFields.user_fields/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#user_follows_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.user_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#user_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.user_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#user_spread/1","title":"Bonfire.GraphQL.Test.GraphQLFields.user_spread/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#user_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.user_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#username_available_query/0","title":"Bonfire.GraphQL.Test.GraphQLFields.username_available_query/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#users_query/1","title":"Bonfire.GraphQL.Test.GraphQLFields.users_query/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLFields.html#users_subquery/1","title":"Bonfire.GraphQL.Test.GraphQLFields.users_subquery/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.ChannelCase.html","title":"Bonfire.Me.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.ConnCase.html","title":"Bonfire.Me.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Me.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.DataCase.html","title":"Bonfire.Me.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Me.DataCase.html#errors_on/1","title":"Bonfire.Me.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Me.DataHelpers.html","title":"Bonfire.Me.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html","title":"Bonfire.Me.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Me.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Me.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Me.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Me.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Me.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#conn/0","title":"Bonfire.Me.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#conn/1","title":"Bonfire.Me.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#conn/2","title":"Bonfire.Me.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Me.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Me.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Me.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Me.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Me.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Me.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Me.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Me.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Me.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.FakeHelpers.html","title":"Bonfire.Me.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.ObanLogger.html","title":"Bonfire.ObanLogger","type":"module"},{"doc":"","ref":"Bonfire.ObanLogger.html#handle_event/4","title":"Bonfire.ObanLogger.handle_event/4","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.ChannelCase.html","title":"Bonfire.Quantify.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.ConnCase.html","title":"Bonfire.Quantify.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Quantify.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.DataCase.html","title":"Bonfire.Quantify.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Quantify.DataCase.html#errors_on/1","title":"Bonfire.Quantify.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.DataHelpers.html","title":"Bonfire.Quantify.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html","title":"Bonfire.Quantify.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Quantify.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post/4","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_200/3","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_data/3","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_errors/2","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_data/5","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_errors/4","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_key/6","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Quantify.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Quantify.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Quantify.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.ChannelCase.html","title":"Bonfire.Search.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.ConnCase.html","title":"Bonfire.Search.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Search.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.DataCase.html","title":"Bonfire.Search.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Search.DataCase.html#errors_on/1","title":"Bonfire.Search.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Search.DataHelpers.html","title":"Bonfire.Search.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html","title":"Bonfire.Search.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Search.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Search.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Search.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Search.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Search.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#conn/0","title":"Bonfire.Search.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#conn/1","title":"Bonfire.Search.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#conn/2","title":"Bonfire.Search.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Search.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Search.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Search.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Search.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Search.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Search.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Search.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Search.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Search.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"A way to have data seeds that work similarly to migrations. To generate a new seed: mix phil_columns.gen.seed my_seed_name will create a new module in priv/repo/seeds To actually insert the seeds into your app, if that's not configured to be done automatically in your mix aliases, run mix phil_columns.seed To roll-back: mix phil_columns.rollback","ref":"Bonfire.Seeder.html","title":"Bonfire.Seeder","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.ChannelCase.html","title":"Bonfire.Social.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.ConnCase.html","title":"Bonfire.Social.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Social.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.DataCase.html","title":"Bonfire.Social.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Social.DataCase.html#errors_on/1","title":"Bonfire.Social.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Social.DataHelpers.html","title":"Bonfire.Social.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html","title":"Bonfire.Social.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Social.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Social.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Social.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Social.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Social.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#conn/0","title":"Bonfire.Social.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#conn/1","title":"Bonfire.Social.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#conn/2","title":"Bonfire.Social.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Social.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Social.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Social.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#floki_click/3","title":"Bonfire.Social.Test.ConnHelpers.floki_click/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Social.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Social.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#floki_submit/4","title":"Bonfire.Social.Test.ConnHelpers.floki_submit/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Social.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.FakeHelpers.html","title":"Bonfire.Social.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Test.FakeHelpers.html#post_attrs/2","title":"Bonfire.Social.Test.FakeHelpers.post_attrs/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.ChannelCase.html","title":"Bonfire.Tag.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.ConnCase.html","title":"Bonfire.Tag.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Tag.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.DataCase.html","title":"Bonfire.Tag.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Tag.DataCase.html#errors_on/1","title":"Bonfire.Tag.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.DataHelpers.html","title":"Bonfire.Tag.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html","title":"Bonfire.Tag.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Tag.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Tag.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Tag.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Tag.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Tag.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#conn/0","title":"Bonfire.Tag.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#conn/1","title":"Bonfire.Tag.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#conn/2","title":"Bonfire.Tag.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Tag.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Tag.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Tag.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Tag.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Tag.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Tag.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Tag.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Tag.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Tag.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html","title":"Bonfire.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#conn/0","title":"Bonfire.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#conn/1","title":"Bonfire.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#conn/2","title":"Bonfire.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Test.FakeHelpers.html","title":"Bonfire.Test.FakeHelpers","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Coordination.ChannelCase.html","title":"Bonfire.UI.Coordination.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Coordination.ConnCase.html","title":"Bonfire.UI.Coordination.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.Coordination.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Coordination.DataCase.html","title":"Bonfire.UI.Coordination.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.Coordination.DataCase.html#errors_on/1","title":"Bonfire.UI.Coordination.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.DataHelpers.html","title":"Bonfire.UI.Coordination.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html","title":"Bonfire.UI.Coordination.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.UI.Coordination.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.UI.Coordination.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#conn/0","title":"Bonfire.UI.Coordination.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#conn/1","title":"Bonfire.UI.Coordination.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#conn/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.UI.Coordination.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.UI.Coordination.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.UI.Coordination.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.FakeHelpers.html","title":"Bonfire.UI.Coordination.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.FakeHelpers.html#fake_account!/1","title":"Bonfire.UI.Coordination.Test.FakeHelpers.fake_account!/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Test.FakeHelpers.html#fake_user!/2","title":"Bonfire.UI.Coordination.Test.FakeHelpers.fake_user!/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Kanban.ChannelCase.html","title":"Bonfire.UI.Kanban.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Kanban.ConnCase.html","title":"Bonfire.UI.Kanban.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.Kanban.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Kanban.DataCase.html","title":"Bonfire.UI.Kanban.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.Kanban.DataCase.html#errors_on/1","title":"Bonfire.UI.Kanban.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.DataHelpers.html","title":"Bonfire.UI.Kanban.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html","title":"Bonfire.UI.Kanban.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.UI.Kanban.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.UI.Kanban.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#conn/0","title":"Bonfire.UI.Kanban.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#conn/1","title":"Bonfire.UI.Kanban.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#conn/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.UI.Kanban.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.UI.Kanban.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.UI.Kanban.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.FakeHelpers.html","title":"Bonfire.UI.Kanban.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.FakeHelpers.html#fake_account!/1","title":"Bonfire.UI.Kanban.Test.FakeHelpers.fake_account!/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Test.FakeHelpers.html#fake_user!/2","title":"Bonfire.UI.Kanban.Test.FakeHelpers.fake_user!/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.ChannelCase.html","title":"Bonfire.UI.Social.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.ConnCase.html","title":"Bonfire.UI.Social.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.Social.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.DataCase.html","title":"Bonfire.UI.Social.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.Social.DataCase.html#errors_on/1","title":"Bonfire.UI.Social.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DataHelpers.html","title":"Bonfire.UI.Social.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html","title":"Bonfire.UI.Social.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.UI.Social.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.UI.Social.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.UI.Social.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.UI.Social.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.UI.Social.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#conn/0","title":"Bonfire.UI.Social.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#conn/1","title":"Bonfire.UI.Social.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#conn/2","title":"Bonfire.UI.Social.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.UI.Social.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.UI.Social.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.UI.Social.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#render_surface/3","title":"Bonfire.UI.Social.Test.ConnHelpers.render_surface/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.UI.Social.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.FakeHelpers.html","title":"Bonfire.UI.Social.Test.FakeHelpers","type":"module"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.ValueFlows.ChannelCase.html","title":"Bonfire.UI.ValueFlows.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.ValueFlows.ConnCase.html","title":"Bonfire.UI.ValueFlows.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.ValueFlows.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.ValueFlows.DataCase.html","title":"Bonfire.UI.ValueFlows.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.ValueFlows.DataCase.html#errors_on/1","title":"Bonfire.UI.ValueFlows.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.DataHelpers.html","title":"Bonfire.UI.ValueFlows.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#conn/0","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#conn/1","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#conn/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.UI.ValueFlows.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.FakeHelpers.html","title":"Bonfire.UI.ValueFlows.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.FakeHelpers.html#fake_account!/1","title":"Bonfire.UI.ValueFlows.Test.FakeHelpers.fake_account!/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Test.FakeHelpers.html#fake_user!/2","title":"Bonfire.UI.ValueFlows.Test.FakeHelpers.fake_user!/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ValueFlows.ChannelCase.html","title":"Bonfire.ValueFlows.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ValueFlows.ConnCase.html","title":"Bonfire.ValueFlows.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.ValueFlows.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ValueFlows.DataCase.html","title":"Bonfire.ValueFlows.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.ValueFlows.DataCase.html#errors_on/1","title":"Bonfire.ValueFlows.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.DataHelpers.html","title":"Bonfire.ValueFlows.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html","title":"Bonfire.ValueFlows.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#conn/0","title":"Bonfire.ValueFlows.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.ValueFlows.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#gql_post/4","title":"Bonfire.ValueFlows.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#gql_post_200/3","title":"Bonfire.ValueFlows.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#gql_post_data/3","title":"Bonfire.ValueFlows.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#gql_post_errors/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#grumble_post_data/5","title":"Bonfire.ValueFlows.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#grumble_post_errors/4","title":"Bonfire.ValueFlows.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#grumble_post_key/6","title":"Bonfire.ValueFlows.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.ValueFlows.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.ValueFlows.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#plugged/1","title":"Bonfire.ValueFlows.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_method/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_params/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.ValueFlows.Test.ConnHelpers.html#with_user/2","title":"Bonfire.ValueFlows.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Endpoint.html","title":"Bonfire.Web.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"Bonfire.Web.Endpoint.html#broadcast/3","title":"Bonfire.Web.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"Bonfire.Web.Endpoint.html#broadcast!/3","title":"Bonfire.Web.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"Bonfire.Web.Endpoint.html#broadcast_from/4","title":"Bonfire.Web.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"Bonfire.Web.Endpoint.html#broadcast_from!/4","title":"Bonfire.Web.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"Bonfire.Web.Endpoint.html#call/2","title":"Bonfire.Web.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"Bonfire.Web.Endpoint.html#child_spec/1","title":"Bonfire.Web.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"Bonfire.Web.Endpoint.html#config/2","title":"Bonfire.Web.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.Endpoint.html#config_change/2","title":"Bonfire.Web.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.Endpoint.html#host/0","title":"Bonfire.Web.Endpoint.host/0","type":"function"},{"doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/1","title":"Bonfire.Web.Endpoint.include_assets/1","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"Bonfire.Web.Endpoint.html#init/1","title":"Bonfire.Web.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"Bonfire.Web.Endpoint.html#local_broadcast/3","title":"Bonfire.Web.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"Bonfire.Web.Endpoint.html#local_broadcast_from/4","title":"Bonfire.Web.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.node_name/0 .","ref":"Bonfire.Web.Endpoint.html#node_name/0","title":"Bonfire.Web.Endpoint.node_name/0","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.Endpoint.html#path/1","title":"Bonfire.Web.Endpoint.path/1","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_mutation/3 .","ref":"Bonfire.Web.Endpoint.html#publish_mutation/3","title":"Bonfire.Web.Endpoint.publish_mutation/3","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_subscription/2 .","ref":"Bonfire.Web.Endpoint.html#publish_subscription/2","title":"Bonfire.Web.Endpoint.publish_subscription/2","type":"function"},{"doc":"Generates the script name.","ref":"Bonfire.Web.Endpoint.html#script_name/0","title":"Bonfire.Web.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"Bonfire.Web.Endpoint.html#start_link/1","title":"Bonfire.Web.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.Endpoint.html#static_integrity/1","title":"Bonfire.Web.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"Bonfire.Web.Endpoint.html#static_lookup/1","title":"Bonfire.Web.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"Bonfire.Web.Endpoint.html#static_path/1","title":"Bonfire.Web.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"Bonfire.Web.Endpoint.html#static_url/0","title":"Bonfire.Web.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"Bonfire.Web.Endpoint.html#struct_url/0","title":"Bonfire.Web.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"Bonfire.Web.Endpoint.html#subscribe/2","title":"Bonfire.Web.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"Bonfire.Web.Endpoint.html#unsubscribe/1","title":"Bonfire.Web.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"Bonfire.Web.Endpoint.html#url/0","title":"Bonfire.Web.Endpoint.url/0","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Web.HomeLive.html","title":"Bonfire.Web.HomeLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Web.HomeLive.html#handle_event/3","title":"Bonfire.Web.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Web.HomeLive.html#handle_info/2","title":"Bonfire.Web.HomeLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Web.HomeLive.html#handle_params/3","title":"Bonfire.Web.HomeLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Web.HomeLive.html#mount/3","title":"Bonfire.Web.HomeLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Web.HomeLive.html#render/1","title":"Bonfire.Web.HomeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html","title":"Bonfire.Web.Router","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.html#absinthe_before_send/2","title":"Bonfire.Web.Router.absinthe_before_send/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#account_required/2","title":"Bonfire.Web.Router.account_required/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#activity_pub/2","title":"Bonfire.Web.Router.activity_pub/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#admin_required/2","title":"Bonfire.Web.Router.admin_required/2","type":"function"},{"doc":"Used to serve the GraphiQL API browser","ref":"Bonfire.Web.Router.html#api_browser/2","title":"Bonfire.Web.Router.api_browser/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#basic/2","title":"Bonfire.Web.Router.basic/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#browser/2","title":"Bonfire.Web.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"Bonfire.Web.Router.html#call/2","title":"Bonfire.Web.Router.call/2","type":"function"},{"doc":"Used to serve GraphQL API queries","ref":"Bonfire.Web.Router.html#graphql/2","title":"Bonfire.Web.Router.graphql/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#guest_only/2","title":"Bonfire.Web.Router.guest_only/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"Bonfire.Web.Router.html#init/1","title":"Bonfire.Web.Router.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#signed_activity_pub/2","title":"Bonfire.Web.Router.signed_activity_pub/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#user_required/2","title":"Bonfire.Web.Router.user_required/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#well_known/2","title":"Bonfire.Web.Router.well_known/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#well_known_nodeinfo/2","title":"Bonfire.Web.Router.well_known_nodeinfo/2","type":"function"},{"doc":"Module with named helpers generated from Bonfire.Web.Router.","ref":"Bonfire.Web.Router.Helpers.html","title":"Bonfire.Web.Router.Helpers","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.PostContent_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.PostContent_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.PostContent_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.PostContent_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.PostContent_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.PostContent_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.PostContent_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.PostContent_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Planning.Intent_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Planning.Intent_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Planning.Intent_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Planning.Intent_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Planning.Intent_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Planning.Intent_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Planning.Intent_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Planning.Intent_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Process_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Process_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Process_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Process_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Process_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Process_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.ValueFlows.Process_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.ValueFlows.Process_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/2","title":"Bonfire.Web.Router.Helpers.activity_pub_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/3","title":"Bonfire.Web.Router.Helpers.activity_pub_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/4","title":"Bonfire.Web.Router.Helpers.activity_pub_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/2","title":"Bonfire.Web.Router.Helpers.activity_pub_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/3","title":"Bonfire.Web.Router.Helpers.activity_pub_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/4","title":"Bonfire.Web.Router.Helpers.activity_pub_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/4","title":"Bonfire.Web.Router.Helpers.autocomplete_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/5","title":"Bonfire.Web.Router.Helpers.autocomplete_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/6","title":"Bonfire.Web.Router.Helpers.autocomplete_path/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/4","title":"Bonfire.Web.Router.Helpers.autocomplete_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/5","title":"Bonfire.Web.Router.Helpers.autocomplete_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/6","title":"Bonfire.Web.Router.Helpers.autocomplete_url/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_path/2","title":"Bonfire.Web.Router.Helpers.change_password_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_path/3","title":"Bonfire.Web.Router.Helpers.change_password_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_url/2","title":"Bonfire.Web.Router.Helpers.change_password_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_url/3","title":"Bonfire.Web.Router.Helpers.change_password_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/2","title":"Bonfire.Web.Router.Helpers.confirm_email_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/3","title":"Bonfire.Web.Router.Helpers.confirm_email_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/4","title":"Bonfire.Web.Router.Helpers.confirm_email_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/2","title":"Bonfire.Web.Router.Helpers.confirm_email_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/3","title":"Bonfire.Web.Router.Helpers.confirm_email_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/4","title":"Bonfire.Web.Router.Helpers.confirm_email_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_path/2","title":"Bonfire.Web.Router.Helpers.create_user_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_path/3","title":"Bonfire.Web.Router.Helpers.create_user_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_url/2","title":"Bonfire.Web.Router.Helpers.create_user_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_url/3","title":"Bonfire.Web.Router.Helpers.create_user_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_path/2","title":"Bonfire.Web.Router.Helpers.dev_tools_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_path/3","title":"Bonfire.Web.Router.Helpers.dev_tools_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_url/2","title":"Bonfire.Web.Router.Helpers.dev_tools_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_url/3","title":"Bonfire.Web.Router.Helpers.dev_tools_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#favourited_path/2","title":"Bonfire.Web.Router.Helpers.favourited_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#favourited_path/3","title":"Bonfire.Web.Router.Helpers.favourited_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#favourited_url/2","title":"Bonfire.Web.Router.Helpers.favourited_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#favourited_url/3","title":"Bonfire.Web.Router.Helpers.favourited_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_path/2","title":"Bonfire.Web.Router.Helpers.federation_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_path/3","title":"Bonfire.Web.Router.Helpers.federation_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_url/2","title":"Bonfire.Web.Router.Helpers.federation_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_url/3","title":"Bonfire.Web.Router.Helpers.federation_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/2","title":"Bonfire.Web.Router.Helpers.forgot_password_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/3","title":"Bonfire.Web.Router.Helpers.forgot_password_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/4","title":"Bonfire.Web.Router.Helpers.forgot_password_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/2","title":"Bonfire.Web.Router.Helpers.forgot_password_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/3","title":"Bonfire.Web.Router.Helpers.forgot_password_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/4","title":"Bonfire.Web.Router.Helpers.forgot_password_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_path/2","title":"Bonfire.Web.Router.Helpers.graphi_ql_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_path/3","title":"Bonfire.Web.Router.Helpers.graphi_ql_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_url/2","title":"Bonfire.Web.Router.Helpers.graphi_ql_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_url/3","title":"Bonfire.Web.Router.Helpers.graphi_ql_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_path/2","title":"Bonfire.Web.Router.Helpers.home_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_path/3","title":"Bonfire.Web.Router.Helpers.home_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_url/2","title":"Bonfire.Web.Router.Helpers.home_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_url/3","title":"Bonfire.Web.Router.Helpers.home_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/2","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/3","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/4","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/5","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/2","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/3","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/4","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/5","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/2","title":"Bonfire.Web.Router.Helpers.live_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/3","title":"Bonfire.Web.Router.Helpers.live_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/4","title":"Bonfire.Web.Router.Helpers.live_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/5","title":"Bonfire.Web.Router.Helpers.live_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/2","title":"Bonfire.Web.Router.Helpers.live_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/3","title":"Bonfire.Web.Router.Helpers.live_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/4","title":"Bonfire.Web.Router.Helpers.live_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/5","title":"Bonfire.Web.Router.Helpers.live_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_path/2","title":"Bonfire.Web.Router.Helpers.local_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_path/3","title":"Bonfire.Web.Router.Helpers.local_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_url/2","title":"Bonfire.Web.Router.Helpers.local_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_url/3","title":"Bonfire.Web.Router.Helpers.local_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/2","title":"Bonfire.Web.Router.Helpers.login_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/3","title":"Bonfire.Web.Router.Helpers.login_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/4","title":"Bonfire.Web.Router.Helpers.login_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/2","title":"Bonfire.Web.Router.Helpers.login_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/3","title":"Bonfire.Web.Router.Helpers.login_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/4","title":"Bonfire.Web.Router.Helpers.login_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_path/2","title":"Bonfire.Web.Router.Helpers.logout_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_path/3","title":"Bonfire.Web.Router.Helpers.logout_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_url/2","title":"Bonfire.Web.Router.Helpers.logout_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_url/3","title":"Bonfire.Web.Router.Helpers.logout_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/2","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/3","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/4","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/2","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/3","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/4","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_path/2","title":"Bonfire.Web.Router.Helpers.notifications_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_path/3","title":"Bonfire.Web.Router.Helpers.notifications_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_url/2","title":"Bonfire.Web.Router.Helpers.notifications_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_url/3","title":"Bonfire.Web.Router.Helpers.notifications_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"Bonfire.Web.Router.Helpers.html#path/2","title":"Bonfire.Web.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_path/2","title":"Bonfire.Web.Router.Helpers.redirect_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_path/3","title":"Bonfire.Web.Router.Helpers.redirect_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_url/2","title":"Bonfire.Web.Router.Helpers.redirect_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_url/3","title":"Bonfire.Web.Router.Helpers.redirect_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_path/2","title":"Bonfire.Web.Router.Helpers.settings_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_path/3","title":"Bonfire.Web.Router.Helpers.settings_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_path/4","title":"Bonfire.Web.Router.Helpers.settings_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_url/2","title":"Bonfire.Web.Router.Helpers.settings_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_url/3","title":"Bonfire.Web.Router.Helpers.settings_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_url/4","title":"Bonfire.Web.Router.Helpers.settings_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_path/2","title":"Bonfire.Web.Router.Helpers.signup_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_path/3","title":"Bonfire.Web.Router.Helpers.signup_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_path/4","title":"Bonfire.Web.Router.Helpers.signup_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_url/2","title":"Bonfire.Web.Router.Helpers.signup_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_url/3","title":"Bonfire.Web.Router.Helpers.signup_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_url/4","title":"Bonfire.Web.Router.Helpers.signup_url/4","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_integrity/2","title":"Bonfire.Web.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_path/2","title":"Bonfire.Web.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_url/2","title":"Bonfire.Web.Router.Helpers.static_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/2","title":"Bonfire.Web.Router.Helpers.switch_user_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/3","title":"Bonfire.Web.Router.Helpers.switch_user_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/4","title":"Bonfire.Web.Router.Helpers.switch_user_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/2","title":"Bonfire.Web.Router.Helpers.switch_user_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/3","title":"Bonfire.Web.Router.Helpers.switch_user_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/4","title":"Bonfire.Web.Router.Helpers.switch_user_url/4","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"Bonfire.Web.Router.Helpers.html#url/1","title":"Bonfire.Web.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_private_path/2","title":"Bonfire.Web.Router.Helpers.user_private_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_private_path/3","title":"Bonfire.Web.Router.Helpers.user_private_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_private_url/2","title":"Bonfire.Web.Router.Helpers.user_private_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_private_url/3","title":"Bonfire.Web.Router.Helpers.user_private_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/2","title":"Bonfire.Web.Router.Helpers.user_profile_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/3","title":"Bonfire.Web.Router.Helpers.user_profile_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/2","title":"Bonfire.Web.Router.Helpers.user_profile_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/3","title":"Bonfire.Web.Router.Helpers.user_profile_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_path/2","title":"Bonfire.Web.Router.Helpers.web_finger_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_path/3","title":"Bonfire.Web.Router.Helpers.web_finger_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_url/2","title":"Bonfire.Web.Router.Helpers.web_finger_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_url/3","title":"Bonfire.Web.Router.Helpers.web_finger_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html","title":"Bonfire.Web.Router.Reverse","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/2","title":"Bonfire.Web.Router.Reverse.path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/3","title":"Bonfire.Web.Router.Reverse.path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/4","title":"Bonfire.Web.Router.Reverse.path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/5","title":"Bonfire.Web.Router.Reverse.path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/6","title":"Bonfire.Web.Router.Reverse.path/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/7","title":"Bonfire.Web.Router.Reverse.path/7","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html","title":"Bonfire.Web.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Web.Telemetry.html#child_spec/1","title":"Bonfire.Web.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html#metrics/0","title":"Bonfire.Web.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html#start_link/1","title":"Bonfire.Web.Telemetry.start_link/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Website.ChannelCase.html","title":"Bonfire.Website.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Website.ConnCase.html","title":"Bonfire.Website.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Website.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Website.DataCase.html","title":"Bonfire.Website.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Website.DataCase.html#errors_on/1","title":"Bonfire.Website.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Website.DataHelpers.html","title":"Bonfire.Website.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html","title":"Bonfire.Website.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#assert_field_error/3","title":"Bonfire.Website.Test.ConnHelpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#assert_field_good/2","title":"Bonfire.Website.Test.ConnHelpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#assert_flash/3","title":"Bonfire.Website.Test.ConnHelpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#assert_flash_kind/2","title":"Bonfire.Website.Test.ConnHelpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#assert_flash_message/2","title":"Bonfire.Website.Test.ConnHelpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#conn/0","title":"Bonfire.Website.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#conn/1","title":"Bonfire.Website.Test.ConnHelpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#conn/2","title":"Bonfire.Website.Test.ConnHelpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#find_flash/1","title":"Bonfire.Website.Test.ConnHelpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#find_form_error/2","title":"Bonfire.Website.Test.ConnHelpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_attr/2","title":"Bonfire.Website.Test.ConnHelpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_click/2","title":"Bonfire.Website.Test.ConnHelpers.floki_click/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_live/1","title":"Bonfire.Website.Test.ConnHelpers.floki_live/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_live/2","title":"Bonfire.Website.Test.ConnHelpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_response/2","title":"Bonfire.Website.Test.ConnHelpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#floki_submit/3","title":"Bonfire.Website.Test.ConnHelpers.floki_submit/3","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.ConnHelpers.html#session_conn/1","title":"Bonfire.Website.Test.ConnHelpers.session_conn/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Test.FakeHelpers.html","title":"Bonfire.Website.Test.FakeHelpers","type":"module"},{"doc":"Compiles dependencies. By default, compile all dependencies. A list of dependencies can be given compile multiple dependencies in order. This task attempts to detect if the project contains one of the following files and act accordingly: mix.exs - invokes mix compile otherwise skip If a list of dependencies is given, Mix will attempt to compile them as is. For example, if project a depends on b , calling mix deps.compile a will compile a even if b is out of date. This is to allow parts of the dependency tree to be recompiled without propagating those changes upstream. To ensure b is included in the compilation step, pass --include-children .","ref":"Mix.Tasks.Bonfire.Dep.Compile.html","title":"Mix.Tasks.Bonfire.Dep.Compile","type":"task"},{"doc":"Receives a list of dependency names and returns loaded Mix.Dep s. Logs a message if the dependency could not be found. Exceptions This function raises an exception if any of the dependencies provided in the project are in the wrong format.","ref":"Mix.Tasks.Bonfire.Dep.Compile.html#loaded_by_name/3","title":"Mix.Tasks.Bonfire.Dep.Compile.loaded_by_name/3","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Bonfire.Dep.Compile.html#run/1","title":"Mix.Tasks.Bonfire.Dep.Compile.run/1","type":"function"},{"doc":"Extracts translations by recompiling the Elixir source code. mix gettext . extract [ OPTIONS ] Translations are extracted into POT (Portable Object Template) files (with a .pot extension). The location of these files is determined by the :otp_app and :priv options given by Gettext modules when they call use Gettext . One POT file is generated for each translation domain. It is possible to give the --merge option to perform merging for every Gettext backend updated during merge: mix gettext . extract -- merge All other options passed to gettext.extract are forwarded to the gettext.merge task ( Mix.Tasks.Gettext.Merge ), which is called internally by this task. For example: mix gettext . extract -- merge -- no - fuzzy","ref":"Mix.Tasks.Bonfire.Localise.Extract.html","title":"Mix.Tasks.Bonfire.Localise.Extract","type":"task"},{"doc":"","ref":"Mix.Tasks.Bonfire.Localise.Extract.html#run/2","title":"Mix.Tasks.Bonfire.Localise.Extract.run/2","type":"function"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html","title":"Mix.Tasks.Bonfire.Release","type":"task"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html#main/1","title":"Mix.Tasks.Bonfire.Release.main/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html#run/1","title":"Mix.Tasks.Bonfire.Release.run/1","type":"function"},{"doc":"Generates secrets and prints to the terminal. mix secrets [ length ] By default, it generates keys 64 characters long. The minimum value for length is 32.","ref":"Mix.Tasks.Bonfire.Secrets.html","title":"Mix.Tasks.Bonfire.Secrets","type":"task"},{"doc":"","ref":"Mix.Tasks.Bonfire.Secrets.html#main/1","title":"Mix.Tasks.Bonfire.Secrets.main/1","type":"function"},{"doc":"","ref":"Paginator.Address.html","title":"Paginator.Address","type":"module"},{"doc":"","ref":"Paginator.Customer.html","title":"Paginator.Customer","type":"module"},{"doc":"","ref":"Paginator.Customer.html#active/1","title":"Paginator.Customer.active/1","type":"function"},{"doc":"","ref":"Paginator.DataCase.html","title":"Paginator.DataCase","type":"module"},{"doc":"","ref":"Paginator.Factory.html","title":"Paginator.Factory","type":"module"},{"doc":"","ref":"Paginator.Factory.html#address_factory/0","title":"Paginator.Factory.address_factory/0","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build/2","title":"Paginator.Factory.build/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build_list/3","title":"Paginator.Factory.build_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build_pair/2","title":"Paginator.Factory.build_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create/1","title":"Paginator.Factory.create/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create/2","title":"Paginator.Factory.create/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create_list/3","title":"Paginator.Factory.create_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create_pair/2","title":"Paginator.Factory.create_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#customer_factory/0","title":"Paginator.Factory.customer_factory/0","type":"function"},{"doc":"Raises a helpful error if no factory is defined.","ref":"Paginator.Factory.html#factory/1","title":"Paginator.Factory.factory/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/1","title":"Paginator.Factory.insert/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/2","title":"Paginator.Factory.insert/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/3","title":"Paginator.Factory.insert/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_list/3","title":"Paginator.Factory.insert_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_list/4","title":"Paginator.Factory.insert_list/4","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_pair/2","title":"Paginator.Factory.insert_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_pair/3","title":"Paginator.Factory.insert_pair/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#params_for/2","title":"Paginator.Factory.params_for/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#params_with_assocs/2","title":"Paginator.Factory.params_with_assocs/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#payment_factory/0","title":"Paginator.Factory.payment_factory/0","type":"function"},{"doc":"","ref":"Paginator.Factory.html#string_params_for/2","title":"Paginator.Factory.string_params_for/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#string_params_with_assocs/2","title":"Paginator.Factory.string_params_with_assocs/2","type":"function"},{"doc":"","ref":"Paginator.Payment.html","title":"Paginator.Payment","type":"module"},{"doc":"","ref":"Paginator.Payment.html#failed/1","title":"Paginator.Payment.failed/1","type":"function"},{"doc":"","ref":"Paginator.Payment.html#successful/1","title":"Paginator.Payment.successful/1","type":"function"},{"doc":"","ref":"Paginator.Repo.html","title":"Paginator.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Paginator.Repo.html#aggregate/3","title":"Paginator.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Paginator.Repo.html#aggregate/4","title":"Paginator.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Paginator.Repo.html#all/2","title":"Paginator.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Paginator.Repo.html#checked_out?/0","title":"Paginator.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Paginator.Repo.html#checkout/2","title":"Paginator.Repo.checkout/2","type":"function"},{"doc":"","ref":"Paginator.Repo.html#child_spec/1","title":"Paginator.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Paginator.Repo.html#config/0","title":"Paginator.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Paginator.Repo.html#default_options/1","title":"Paginator.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Paginator.Repo.html#delete/2","title":"Paginator.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Paginator.Repo.html#delete!/2","title":"Paginator.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Paginator.Repo.html#delete_all/2","title":"Paginator.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Paginator.Repo.html#exists?/2","title":"Paginator.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Paginator.Repo.html#explain/3","title":"Paginator.Repo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Paginator.Repo.html#get/3","title":"Paginator.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Paginator.Repo.html#get!/3","title":"Paginator.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Paginator.Repo.html#get_by/3","title":"Paginator.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Paginator.Repo.html#get_by!/3","title":"Paginator.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Paginator.Repo.html#get_dynamic_repo/0","title":"Paginator.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Paginator.Repo.html#in_transaction?/0","title":"Paginator.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Paginator.Repo.html#insert/2","title":"Paginator.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Paginator.Repo.html#insert!/2","title":"Paginator.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Paginator.Repo.html#insert_all/3","title":"Paginator.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Paginator.Repo.html#insert_or_update/2","title":"Paginator.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Paginator.Repo.html#insert_or_update!/2","title":"Paginator.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Paginator.Repo.html#load/2","title":"Paginator.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Paginator.Repo.html#one/2","title":"Paginator.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Paginator.Repo.html#one!/2","title":"Paginator.Repo.one!/2","type":"function"},{"doc":"","ref":"Paginator.Repo.html#paginate/3","title":"Paginator.Repo.paginate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Paginator.Repo.html#preload/3","title":"Paginator.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Paginator.Repo.html#prepare_query/3","title":"Paginator.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Paginator.Repo.html#put_dynamic_repo/1","title":"Paginator.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Paginator.Repo.html#query/3","title":"Paginator.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Paginator.Repo.html#query!/3","title":"Paginator.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Paginator.Repo.html#reload/2","title":"Paginator.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Paginator.Repo.html#reload!/2","title":"Paginator.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Paginator.Repo.html#rollback/1","title":"Paginator.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Paginator.Repo.html#start_link/1","title":"Paginator.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Paginator.Repo.html#stop/1","title":"Paginator.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Paginator.Repo.html#stream/2","title":"Paginator.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Paginator.Repo.html#to_sql/2","title":"Paginator.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Paginator.Repo.html#transaction/2","title":"Paginator.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Paginator.Repo.html#update/2","title":"Paginator.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Paginator.Repo.html#update!/2","title":"Paginator.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Paginator.Repo.html#update_all/3","title":"Paginator.Repo.update_all/3","type":"function"},{"doc":"","ref":"Paginator.TestMigration.html","title":"Paginator.TestMigration","type":"module"},{"doc":"","ref":"Paginator.TestMigration.html#change/0","title":"Paginator.TestMigration.change/0","type":"function"},{"doc":"","ref":"Releaser.Git.html","title":"Releaser.Git","type":"module"},{"doc":"This module contains some git-specific functionality","ref":"Releaser.Git.html#add_commit_and_tag/1","title":"Releaser.Git.add_commit_and_tag/1","type":"function"},{"doc":"","ref":"Releaser.Publish.html","title":"Releaser.Publish","type":"module"},{"doc":"","ref":"Releaser.Publish.html#publish!/0","title":"Releaser.Publish.publish!/0","type":"function"},{"doc":"","ref":"Releaser.Tests.html","title":"Releaser.Tests","type":"module"},{"doc":"","ref":"Releaser.Tests.html#run_tests!/0","title":"Releaser.Tests.run_tests!/0","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html","title":"Releaser.VersionUtils","type":"module"},{"doc":"Some utilities to get and set version numbers in the mix.exs file and to programatically transform version numbers. Maybe the bump_* functions should be in the standard library? This script doesn't support pre-release versions or versions with build information.","ref":"Releaser.VersionUtils.html#bump_major/1","title":"Releaser.VersionUtils.bump_major/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_minor/1","title":"Releaser.VersionUtils.bump_minor/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_patch/1","title":"Releaser.VersionUtils.bump_patch/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_pre/2","title":"Releaser.VersionUtils.bump_pre/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#get_version/1","title":"Releaser.VersionUtils.get_version/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#set_version/2","title":"Releaser.VersionUtils.set_version/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#update_version/2","title":"Releaser.VersionUtils.update_version/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#version_to_string/1","title":"Releaser.VersionUtils.version_to_string/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"ValueFlows.Observe.ChannelCase.html","title":"ValueFlows.Observe.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"ValueFlows.Observe.ConnCase.html","title":"ValueFlows.Observe.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use ValueFlows.Observe.DataCase, async: true , although this option is not recommended for other databases.","ref":"ValueFlows.Observe.DataCase.html","title":"ValueFlows.Observe.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"ValueFlows.Observe.DataCase.html#errors_on/1","title":"ValueFlows.Observe.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.DataHelpers.html","title":"ValueFlows.Observe.DataHelpers","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html","title":"ValueFlows.Observe.Test.ConnHelpers","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#conn/0","title":"ValueFlows.Observe.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#extract_files/1","title":"ValueFlows.Observe.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#gql_post/4","title":"ValueFlows.Observe.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#gql_post_200/3","title":"ValueFlows.Observe.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#gql_post_data/3","title":"ValueFlows.Observe.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#gql_post_errors/2","title":"ValueFlows.Observe.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#grumble_post_data/5","title":"ValueFlows.Observe.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#grumble_post_errors/4","title":"ValueFlows.Observe.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#grumble_post_key/6","title":"ValueFlows.Observe.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#html_conn/0","title":"ValueFlows.Observe.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#json_conn/0","title":"ValueFlows.Observe.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#plugged/1","title":"ValueFlows.Observe.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#token_conn/2","title":"ValueFlows.Observe.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#user_conn/2","title":"ValueFlows.Observe.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_accept_html/1","title":"ValueFlows.Observe.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_accept_json/1","title":"ValueFlows.Observe.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_authorization/2","title":"ValueFlows.Observe.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_method/2","title":"ValueFlows.Observe.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_params/2","title":"ValueFlows.Observe.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_request_json/1","title":"ValueFlows.Observe.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Test.ConnHelpers.html#with_user/2","title":"ValueFlows.Observe.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html","title":"ValueFlows.Test.Faking","type":"module"},{"doc":"","ref":"ValueFlows.Test.Faking.html#action_fields/1","title":"ValueFlows.Test.Faking.action_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#action_query/1","title":"ValueFlows.Test.Faking.action_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#action_subquery/1","title":"ValueFlows.Test.Faking.action_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#actions_query/1","title":"ValueFlows.Test.Faking.actions_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#actions_subquery/1","title":"ValueFlows.Test.Faking.actions_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_action/1","title":"ValueFlows.Test.Faking.assert_action/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_agent/1","title":"ValueFlows.Test.Faking.assert_agent/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_claim/1","title":"ValueFlows.Test.Faking.assert_claim/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_economic_event/1","title":"ValueFlows.Test.Faking.assert_economic_event/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_economic_resource/1","title":"ValueFlows.Test.Faking.assert_economic_resource/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_intent/1","title":"ValueFlows.Test.Faking.assert_intent/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_intent/2","title":"ValueFlows.Test.Faking.assert_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_intents_eq/2","title":"ValueFlows.Test.Faking.assert_intents_eq/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_process/1","title":"ValueFlows.Test.Faking.assert_process/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_process_specification/1","title":"ValueFlows.Test.Faking.assert_process_specification/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposal/1","title":"ValueFlows.Test.Faking.assert_proposal/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposal/2","title":"ValueFlows.Test.Faking.assert_proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposal_full/1","title":"ValueFlows.Test.Faking.assert_proposal_full/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposal_full/2","title":"ValueFlows.Test.Faking.assert_proposal_full/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposals_eq/2","title":"ValueFlows.Test.Faking.assert_proposals_eq/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposed_intent/1","title":"ValueFlows.Test.Faking.assert_proposed_intent/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_proposed_to/1","title":"ValueFlows.Test.Faking.assert_proposed_to/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_resource_specification/1","title":"ValueFlows.Test.Faking.assert_resource_specification/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#assert_value_calculation/1","title":"ValueFlows.Test.Faking.assert_value_calculation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claim_fields/1","title":"ValueFlows.Test.Faking.claim_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claim_query/1","title":"ValueFlows.Test.Faking.claim_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claim_response_fields/1","title":"ValueFlows.Test.Faking.claim_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claim_subquery/1","title":"ValueFlows.Test.Faking.claim_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claims_query/1","title":"ValueFlows.Test.Faking.claims_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#claims_subquery/1","title":"ValueFlows.Test.Faking.claims_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_claim_mutation/1","title":"ValueFlows.Test.Faking.create_claim_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_claim_submutation/1","title":"ValueFlows.Test.Faking.create_claim_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_mutation/1","title":"ValueFlows.Test.Faking.create_economic_event_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_mutation/2","title":"ValueFlows.Test.Faking.create_economic_event_mutation/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_mutation_without_new_inventoried_resource/2","title":"ValueFlows.Test.Faking.create_economic_event_mutation_without_new_inventoried_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_submutation/1","title":"ValueFlows.Test.Faking.create_economic_event_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_submutation/2","title":"ValueFlows.Test.Faking.create_economic_event_submutation/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_economic_event_submutation_without_new_inventoried_resource/2","title":"ValueFlows.Test.Faking.create_economic_event_submutation_without_new_inventoried_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_intent_mutation/1","title":"ValueFlows.Test.Faking.create_intent_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_intent_submutation/1","title":"ValueFlows.Test.Faking.create_intent_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_need_mutation/1","title":"ValueFlows.Test.Faking.create_need_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_need_submutation/1","title":"ValueFlows.Test.Faking.create_need_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_offer_mutation/1","title":"ValueFlows.Test.Faking.create_offer_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_offer_submutation/1","title":"ValueFlows.Test.Faking.create_offer_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_process_mutation/1","title":"ValueFlows.Test.Faking.create_process_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_process_specification_mutation/1","title":"ValueFlows.Test.Faking.create_process_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_process_specification_submutation/1","title":"ValueFlows.Test.Faking.create_process_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_process_submutation/1","title":"ValueFlows.Test.Faking.create_process_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_proposal_mutation/1","title":"ValueFlows.Test.Faking.create_proposal_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_proposal_submutation/1","title":"ValueFlows.Test.Faking.create_proposal_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_resource_specification_mutation/1","title":"ValueFlows.Test.Faking.create_resource_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_resource_specification_submutation/1","title":"ValueFlows.Test.Faking.create_resource_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_value_calculation_mutation/1","title":"ValueFlows.Test.Faking.create_value_calculation_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#create_value_calculation_submutation/1","title":"ValueFlows.Test.Faking.create_value_calculation_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_claim_mutation/1","title":"ValueFlows.Test.Faking.delete_claim_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_claim_submutation/1","title":"ValueFlows.Test.Faking.delete_claim_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_economic_event_mutation/1","title":"ValueFlows.Test.Faking.delete_economic_event_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_economic_event_submutation/1","title":"ValueFlows.Test.Faking.delete_economic_event_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_intent_mutation/1","title":"ValueFlows.Test.Faking.delete_intent_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_intent_submutation/1","title":"ValueFlows.Test.Faking.delete_intent_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_process_mutation/1","title":"ValueFlows.Test.Faking.delete_process_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_process_specification_mutation/1","title":"ValueFlows.Test.Faking.delete_process_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_process_specification_submutation/1","title":"ValueFlows.Test.Faking.delete_process_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_process_submutation/1","title":"ValueFlows.Test.Faking.delete_process_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposal_mutation/1","title":"ValueFlows.Test.Faking.delete_proposal_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposal_submutation/1","title":"ValueFlows.Test.Faking.delete_proposal_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposed_intent_mutation/1","title":"ValueFlows.Test.Faking.delete_proposed_intent_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposed_intent_submutation/1","title":"ValueFlows.Test.Faking.delete_proposed_intent_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposed_to_mutation/1","title":"ValueFlows.Test.Faking.delete_proposed_to_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_proposed_to_submutation/1","title":"ValueFlows.Test.Faking.delete_proposed_to_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_resource_specification_mutation/1","title":"ValueFlows.Test.Faking.delete_resource_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_resource_specification_submutation/1","title":"ValueFlows.Test.Faking.delete_resource_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_value_calculation_mutation/1","title":"ValueFlows.Test.Faking.delete_value_calculation_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#delete_value_calculation_submutation/1","title":"ValueFlows.Test.Faking.delete_value_calculation_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_event_fields/1","title":"ValueFlows.Test.Faking.economic_event_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_event_query/1","title":"ValueFlows.Test.Faking.economic_event_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_event_response_fields/1","title":"ValueFlows.Test.Faking.economic_event_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_event_response_fields/2","title":"ValueFlows.Test.Faking.economic_event_response_fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_event_subquery/1","title":"ValueFlows.Test.Faking.economic_event_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_events_pages_query/1","title":"ValueFlows.Test.Faking.economic_events_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_events_pages_subquery/1","title":"ValueFlows.Test.Faking.economic_events_pages_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_events_query/1","title":"ValueFlows.Test.Faking.economic_events_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_events_subquery/1","title":"ValueFlows.Test.Faking.economic_events_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resource_fields/1","title":"ValueFlows.Test.Faking.economic_resource_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resource_query/1","title":"ValueFlows.Test.Faking.economic_resource_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resource_response_fields/1","title":"ValueFlows.Test.Faking.economic_resource_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resource_subquery/1","title":"ValueFlows.Test.Faking.economic_resource_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resources_pages_query/1","title":"ValueFlows.Test.Faking.economic_resources_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resources_pages_subquery/1","title":"ValueFlows.Test.Faking.economic_resources_pages_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resources_query/1","title":"ValueFlows.Test.Faking.economic_resources_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#economic_resources_subquery/1","title":"ValueFlows.Test.Faking.economic_resources_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intent_fields/1","title":"ValueFlows.Test.Faking.intent_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intent_query/1","title":"ValueFlows.Test.Faking.intent_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intent_response_fields/1","title":"ValueFlows.Test.Faking.intent_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intent_subquery/1","title":"ValueFlows.Test.Faking.intent_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intents_pages_query/1","title":"ValueFlows.Test.Faking.intents_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intents_pages_subquery/1","title":"ValueFlows.Test.Faking.intents_pages_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intents_query/1","title":"ValueFlows.Test.Faking.intents_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#intents_subquery/1","title":"ValueFlows.Test.Faking.intents_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#people_query/1","title":"ValueFlows.Test.Faking.people_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#people_subquery/1","title":"ValueFlows.Test.Faking.people_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#person_fields/1","title":"ValueFlows.Test.Faking.person_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#person_query/1","title":"ValueFlows.Test.Faking.person_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#person_subquery/1","title":"ValueFlows.Test.Faking.person_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_fields/1","title":"ValueFlows.Test.Faking.process_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_inputs_query/1","title":"ValueFlows.Test.Faking.process_inputs_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_outputs_query/1","title":"ValueFlows.Test.Faking.process_outputs_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_query/1","title":"ValueFlows.Test.Faking.process_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_response_fields/1","title":"ValueFlows.Test.Faking.process_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_specification_fields/1","title":"ValueFlows.Test.Faking.process_specification_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_specification_query/1","title":"ValueFlows.Test.Faking.process_specification_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_specification_response_fields/1","title":"ValueFlows.Test.Faking.process_specification_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_specification_subquery/1","title":"ValueFlows.Test.Faking.process_specification_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#process_subquery/1","title":"ValueFlows.Test.Faking.process_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#processes_pages_query/1","title":"ValueFlows.Test.Faking.processes_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#processes_pages_subquery/1","title":"ValueFlows.Test.Faking.processes_pages_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#processes_query/1","title":"ValueFlows.Test.Faking.processes_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#processes_subquery/1","title":"ValueFlows.Test.Faking.processes_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposal_query/1","title":"ValueFlows.Test.Faking.proposal_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposal_response_fields/1","title":"ValueFlows.Test.Faking.proposal_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposal_subquery/1","title":"ValueFlows.Test.Faking.proposal_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposals_pages_query/1","title":"ValueFlows.Test.Faking.proposals_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposals_pages_subquery/1","title":"ValueFlows.Test.Faking.proposals_pages_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#propose_intent_mutation/1","title":"ValueFlows.Test.Faking.propose_intent_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#propose_intent_submutation/1","title":"ValueFlows.Test.Faking.propose_intent_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#propose_to_mutation/1","title":"ValueFlows.Test.Faking.propose_to_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#propose_to_submutation/1","title":"ValueFlows.Test.Faking.propose_to_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposed_intent_fields/1","title":"ValueFlows.Test.Faking.proposed_intent_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposed_intent_response_fields/1","title":"ValueFlows.Test.Faking.proposed_intent_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposed_to_fields/1","title":"ValueFlows.Test.Faking.proposed_to_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#proposed_to_response_fields/1","title":"ValueFlows.Test.Faking.proposed_to_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#resource_specification_fields/1","title":"ValueFlows.Test.Faking.resource_specification_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#resource_specification_query/1","title":"ValueFlows.Test.Faking.resource_specification_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#resource_specification_response_fields/1","title":"ValueFlows.Test.Faking.resource_specification_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#resource_specification_subquery/1","title":"ValueFlows.Test.Faking.resource_specification_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_claim_mutation/1","title":"ValueFlows.Test.Faking.update_claim_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_claim_submutation/1","title":"ValueFlows.Test.Faking.update_claim_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_economic_event_mutation/1","title":"ValueFlows.Test.Faking.update_economic_event_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_economic_event_submutation/1","title":"ValueFlows.Test.Faking.update_economic_event_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_intent_mutation/1","title":"ValueFlows.Test.Faking.update_intent_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_intent_submutation/1","title":"ValueFlows.Test.Faking.update_intent_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_process_mutation/1","title":"ValueFlows.Test.Faking.update_process_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_process_specification_mutation/1","title":"ValueFlows.Test.Faking.update_process_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_process_specification_submutation/1","title":"ValueFlows.Test.Faking.update_process_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_process_submutation/1","title":"ValueFlows.Test.Faking.update_process_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_proposal_mutation/1","title":"ValueFlows.Test.Faking.update_proposal_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_proposal_submutation/1","title":"ValueFlows.Test.Faking.update_proposal_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_resource_specification_mutation/1","title":"ValueFlows.Test.Faking.update_resource_specification_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_resource_specification_submutation/1","title":"ValueFlows.Test.Faking.update_resource_specification_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_value_calculation_mutation/1","title":"ValueFlows.Test.Faking.update_value_calculation_mutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#update_value_calculation_submutation/1","title":"ValueFlows.Test.Faking.update_value_calculation_submutation/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculation_fields/1","title":"ValueFlows.Test.Faking.value_calculation_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculation_query/1","title":"ValueFlows.Test.Faking.value_calculation_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculation_response_fields/1","title":"ValueFlows.Test.Faking.value_calculation_response_fields/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculation_subquery/1","title":"ValueFlows.Test.Faking.value_calculation_subquery/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculations_pages_query/1","title":"ValueFlows.Test.Faking.value_calculations_pages_query/1","type":"function"},{"doc":"","ref":"ValueFlows.Test.Faking.html#value_calculations_pages_subquery/1","title":"ValueFlows.Test.Faking.value_calculations_pages_subquery/1","type":"function"},{"doc":"ActivityPub API In general, the functions in this module take object-like formatted struct as the input for actor parameters. Use the functions in the ActivityPub.Actor module ( ActivityPub.Actor.get_by_ap_id/1 for example) to retrieve those.","ref":"ActivityPub.html","title":"ActivityPub","type":"module"},{"doc":"Generates and federates an Accept activity via the data passed through params .","ref":"ActivityPub.html#accept/1","title":"ActivityPub.accept/1","type":"function"},{"doc":"","ref":"ActivityPub.html#announce/6","title":"ActivityPub.announce/6","type":"function"},{"doc":"","ref":"ActivityPub.html#block/4","title":"ActivityPub.block/4","type":"function"},{"doc":"Generates and federates a Create activity via the data passed through params .","ref":"ActivityPub.html#create/2","title":"ActivityPub.create/2","type":"function"},{"doc":"","ref":"ActivityPub.html#delete/3","title":"ActivityPub.delete/3","type":"function"},{"doc":"","ref":"ActivityPub.html#flag/2","title":"ActivityPub.flag/2","type":"function"},{"doc":"Generates and federates a Follow activity. Note: the follow should be reflected on the host database side only after receiving an Accept activity in response!","ref":"ActivityPub.html#follow/4","title":"ActivityPub.follow/4","type":"function"},{"doc":"","ref":"ActivityPub.html#like/4","title":"ActivityPub.like/4","type":"function"},{"doc":"","ref":"ActivityPub.html#maybe_forward_activity/1","title":"ActivityPub.maybe_forward_activity/1","type":"function"},{"doc":"Generates and federates a Reject activity via the data passed through params .","ref":"ActivityPub.html#reject/1","title":"ActivityPub.reject/1","type":"function"},{"doc":"","ref":"ActivityPub.html#unannounce/4","title":"ActivityPub.unannounce/4","type":"function"},{"doc":"","ref":"ActivityPub.html#unblock/4","title":"ActivityPub.unblock/4","type":"function"},{"doc":"Generates and federates an Unfollow activity.","ref":"ActivityPub.html#unfollow/4","title":"ActivityPub.unfollow/4","type":"function"},{"doc":"","ref":"ActivityPub.html#unlike/4","title":"ActivityPub.unlike/4","type":"function"},{"doc":"","ref":"ActivityPub.html#update/1","title":"ActivityPub.update/1","type":"function"},{"doc":"Functions for dealing with ActivityPub actors.","ref":"ActivityPub.Actor.html","title":"ActivityPub.Actor","type":"module"},{"doc":"","ref":"ActivityPub.Actor.html#deactivate/1","title":"ActivityPub.Actor.deactivate/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#delete/1","title":"ActivityPub.Actor.delete/1","type":"function"},{"doc":"Checks if an actor struct has a non-nil keys field and generates a PEM if it doesn't.","ref":"ActivityPub.Actor.html#ensure_keys_present/1","title":"ActivityPub.Actor.ensure_keys_present/1","type":"function"},{"doc":"Fetches a remote actor by username in username@domain.tld format","ref":"ActivityPub.Actor.html#fetch_by_username/1","title":"ActivityPub.Actor.fetch_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#format_remote_actor/1","title":"ActivityPub.Actor.format_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_actor_from_follow/1","title":"ActivityPub.Actor.get_actor_from_follow/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_and_format_collections_for_actor/1","title":"ActivityPub.Actor.get_and_format_collections_for_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_and_format_resources_for_actor/1","title":"ActivityPub.Actor.get_and_format_resources_for_actor/1","type":"function"},{"doc":"Fetches an actor given its AP ID. Remote actors are first checked if they exist in database and are fetched remotely if they don't. Remote actors are also automatically updated every 24 hours.","ref":"ActivityPub.Actor.html#get_by_ap_id/1","title":"ActivityPub.Actor.get_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_ap_id!/1","title":"ActivityPub.Actor.get_by_ap_id!/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_local_id/1","title":"ActivityPub.Actor.get_by_local_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_local_id!/1","title":"ActivityPub.Actor.get_by_local_id!/1","type":"function"},{"doc":"Fetches a local actor given its preferred username.","ref":"ActivityPub.Actor.html#get_by_username/1","title":"ActivityPub.Actor.get_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_ap_id/1","title":"ActivityPub.Actor.get_cached_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_ap_id!/1","title":"ActivityPub.Actor.get_cached_by_ap_id!/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_local_id/1","title":"ActivityPub.Actor.get_cached_by_local_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_username/1","title":"ActivityPub.Actor.get_cached_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_community_ap_id/1","title":"ActivityPub.Actor.get_community_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_creator_ap_id/1","title":"ActivityPub.Actor.get_creator_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_external_followers/1","title":"ActivityPub.Actor.get_external_followers/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_followers/1","title":"ActivityPub.Actor.get_followers/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_followings/1","title":"ActivityPub.Actor.get_followings/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_or_fetch_by_ap_id/1","title":"ActivityPub.Actor.get_or_fetch_by_ap_id/1","type":"function"},{"doc":"Tries to get a local actor by username or tries to fetch it remotely if username is provided in username@domain.tld format.","ref":"ActivityPub.Actor.html#get_or_fetch_by_username/1","title":"ActivityPub.Actor.get_or_fetch_by_username/1","type":"function"},{"doc":"Fetches the public key for given actor AP ID.","ref":"ActivityPub.Actor.html#get_public_key_for_ap_id/1","title":"ActivityPub.Actor.get_public_key_for_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#invalidate_cache/1","title":"ActivityPub.Actor.invalidate_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#maybe_create_actor_from_object/1","title":"ActivityPub.Actor.maybe_create_actor_from_object/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#reactivate/1","title":"ActivityPub.Actor.reactivate/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#remote_users/2","title":"ActivityPub.Actor.remote_users/2","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#set_cache/1","title":"ActivityPub.Actor.set_cache/1","type":"function"},{"doc":"Updates an existing actor struct by its AP ID.","ref":"ActivityPub.Actor.html#update_actor/1","title":"ActivityPub.Actor.update_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#update_actor_data_by_ap_id/2","title":"ActivityPub.Actor.update_actor_data_by_ap_id/2","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#t:t/0","title":"ActivityPub.Actor.t/0","type":"type"},{"doc":"Contract for ActivityPub module adapters","ref":"ActivityPub.Adapter.html","title":"ActivityPub.Adapter","type":"behaviour"},{"doc":"","ref":"ActivityPub.Adapter.html#base_url/0","title":"ActivityPub.Adapter.base_url/0","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:base_url/0","title":"ActivityPub.Adapter.base_url/0","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_actor_by_id/1","title":"ActivityPub.Adapter.get_actor_by_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_actor_by_id/1","title":"ActivityPub.Adapter.get_actor_by_id/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_actor_by_username/1","title":"ActivityPub.Adapter.get_actor_by_username/1","type":"function"},{"doc":"Fetch an actor given its preferred username","ref":"ActivityPub.Adapter.html#c:get_actor_by_username/1","title":"ActivityPub.Adapter.get_actor_by_username/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_follower_local_ids/1","title":"ActivityPub.Adapter.get_follower_local_ids/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_follower_local_ids/1","title":"ActivityPub.Adapter.get_follower_local_ids/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_following_local_ids/1","title":"ActivityPub.Adapter.get_following_local_ids/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_following_local_ids/1","title":"ActivityPub.Adapter.get_following_local_ids/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_redirect_url/1","title":"ActivityPub.Adapter.get_redirect_url/1","type":"function"},{"doc":"Gets local url of an AP object to redirect in browser. Can take pointer id or an actor username.","ref":"ActivityPub.Adapter.html#c:get_redirect_url/1","title":"ActivityPub.Adapter.get_redirect_url/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#handle_activity/1","title":"ActivityPub.Adapter.handle_activity/1","type":"function"},{"doc":"Passes data to be handled by the host application","ref":"ActivityPub.Adapter.html#c:handle_activity/1","title":"ActivityPub.Adapter.handle_activity/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#maybe_create_remote_actor/1","title":"ActivityPub.Adapter.maybe_create_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:maybe_create_remote_actor/1","title":"ActivityPub.Adapter.maybe_create_remote_actor/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#maybe_handle_activity/1","title":"ActivityPub.Adapter.maybe_handle_activity/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#update_local_actor/2","title":"ActivityPub.Adapter.update_local_actor/2","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:update_local_actor/2","title":"ActivityPub.Adapter.update_local_actor/2","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#update_remote_actor/1","title":"ActivityPub.Adapter.update_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:update_remote_actor/1","title":"ActivityPub.Adapter.update_remote_actor/1","type":"callback"},{"doc":"","ref":"ActivityPub.Common.html","title":"ActivityPub.Common","type":"module"},{"doc":"","ref":"ActivityPub.Common.html#adapter_fallback/0","title":"ActivityPub.Common.adapter_fallback/0","type":"function"},{"doc":"","ref":"ActivityPub.Common.html#repo/0","title":"ActivityPub.Common.repo/0","type":"function"},{"doc":"","ref":"ActivityPub.Config.html","title":"ActivityPub.Config","type":"module"},{"doc":"","ref":"ActivityPub.Config.html#delete/1","title":"ActivityPub.Config.delete/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get/1","title":"ActivityPub.Config.get/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get/2","title":"ActivityPub.Config.get/2","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get!/1","title":"ActivityPub.Config.get!/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#put/2","title":"ActivityPub.Config.put/2","type":"function"},{"doc":"Handles fetching AS2 objects from remote instances.","ref":"ActivityPub.Fetcher.html","title":"ActivityPub.Fetcher","type":"module"},{"doc":"Checks if an object exists in the database and fetches it if it doesn't.","ref":"ActivityPub.Fetcher.html#fetch_object_from_id/1","title":"ActivityPub.Fetcher.fetch_object_from_id/1","type":"function"},{"doc":"Fetches an AS2 object from remote AP ID.","ref":"ActivityPub.Fetcher.html#fetch_remote_object_from_id/1","title":"ActivityPub.Fetcher.fetch_remote_object_from_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Fetcher.html#get_actor/1","title":"ActivityPub.Fetcher.get_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Fetcher.html#get_or_fetch_and_create/1","title":"ActivityPub.Fetcher.get_or_fetch_and_create/1","type":"function"},{"doc":"Module for building and performing HTTP requests.","ref":"ActivityPub.HTTP.html","title":"ActivityPub.HTTP","type":"module"},{"doc":"Makes a DELETE request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#delete/4","title":"ActivityPub.HTTP.delete/4","type":"function"},{"doc":"Makes a GET request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#get/3","title":"ActivityPub.HTTP.get/3","type":"function"},{"doc":"Makes a POST request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#post/4","title":"ActivityPub.HTTP.post/4","type":"function"},{"doc":"Makes a PUT request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#put/4","title":"ActivityPub.HTTP.put/4","type":"function"},{"doc":"Builds and perform http request. Arguments: method - :get, :post, :put, :delete url body headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] options - custom, per-request middleware or adapter options Returns: {:ok, %Tesla.Env{}} or {:error, error}","ref":"ActivityPub.HTTP.html#request/5","title":"ActivityPub.HTTP.request/5","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.html#t:t/0","title":"ActivityPub.HTTP.t/0","type":"type"},{"doc":"Specifies connection options for HTTP requests","ref":"ActivityPub.HTTP.Connection.html","title":"ActivityPub.HTTP.Connection","type":"module"},{"doc":"","ref":"ActivityPub.HTTP.Connection.html#hackney_options/1","title":"ActivityPub.HTTP.Connection.hackney_options/1","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.Connection.html#new/1","title":"ActivityPub.HTTP.Connection.new/1","type":"function"},{"doc":"Helper functions for building HTTP requests","ref":"ActivityPub.HTTP.RequestBuilder.html","title":"ActivityPub.HTTP.RequestBuilder","type":"module"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#add_param/4","title":"ActivityPub.HTTP.RequestBuilder.add_param/4","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#headers/2","title":"ActivityPub.HTTP.RequestBuilder.headers/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#method/2","title":"ActivityPub.HTTP.RequestBuilder.method/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#opts/2","title":"ActivityPub.HTTP.RequestBuilder.opts/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#url/2","title":"ActivityPub.HTTP.RequestBuilder.url/2","type":"function"},{"doc":"Instances context.","ref":"ActivityPub.Instances.html","title":"ActivityPub.Instances","type":"module"},{"doc":"See ActivityPub.Instances.Instance.filter_reachable/1 .","ref":"ActivityPub.Instances.html#filter_reachable/1","title":"ActivityPub.Instances.filter_reachable/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#host/1","title":"ActivityPub.Instances.host/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#reachability_datetime_threshold/0","title":"ActivityPub.Instances.reachability_datetime_threshold/0","type":"function"},{"doc":"See ActivityPub.Instances.Instance.reachable?/1 .","ref":"ActivityPub.Instances.html#reachable?/1","title":"ActivityPub.Instances.reachable?/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#set_consistently_unreachable/1","title":"ActivityPub.Instances.set_consistently_unreachable/1","type":"function"},{"doc":"See ActivityPub.Instances.Instance.set_reachable/1 .","ref":"ActivityPub.Instances.html#set_reachable/1","title":"ActivityPub.Instances.set_reachable/1","type":"function"},{"doc":"See ActivityPub.Instances.Instance.set_unreachable/2 .","ref":"ActivityPub.Instances.html#set_unreachable/2","title":"ActivityPub.Instances.set_unreachable/2","type":"function"},{"doc":"Instance.","ref":"ActivityPub.Instances.Instance.html","title":"ActivityPub.Instances.Instance","type":"module"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#changeset/2","title":"ActivityPub.Instances.Instance.changeset/2","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#filter_reachable/1","title":"ActivityPub.Instances.Instance.filter_reachable/1","type":"function"},{"doc":"See ActivityPub.Instances.host/1 .","ref":"ActivityPub.Instances.Instance.html#host/1","title":"ActivityPub.Instances.Instance.host/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#reachable?/1","title":"ActivityPub.Instances.Instance.reachable?/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#set_reachable/1","title":"ActivityPub.Instances.Instance.set_reachable/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#set_unreachable/2","title":"ActivityPub.Instances.Instance.set_unreachable/2","type":"function"},{"doc":"Generates RSA keys for HTTP message signatures","ref":"ActivityPub.Keys.html","title":"ActivityPub.Keys","type":"module"},{"doc":"","ref":"ActivityPub.Keys.html#generate_rsa_pem/0","title":"ActivityPub.Keys.generate_rsa_pem/0","type":"function"},{"doc":"","ref":"ActivityPub.Keys.html#keys_from_pem/1","title":"ActivityPub.Keys.keys_from_pem/1","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html","title":"ActivityPub.MRF","type":"behaviour"},{"doc":"","ref":"ActivityPub.MRF.html#filter/1","title":"ActivityPub.MRF.filter/1","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#c:filter/1","title":"ActivityPub.MRF.filter/1","type":"callback"},{"doc":"","ref":"ActivityPub.MRF.html#filter/2","title":"ActivityPub.MRF.filter/2","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#get_policies/0","title":"ActivityPub.MRF.get_policies/0","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#subdomain_match?/2","title":"ActivityPub.MRF.subdomain_match?/2","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#subdomains_regex/1","title":"ActivityPub.MRF.subdomains_regex/1","type":"function"},{"doc":"Filter activities depending on their origin instance","ref":"ActivityPub.MRF.SimplePolicy.html","title":"ActivityPub.MRF.SimplePolicy","type":"module"},{"doc":"","ref":"ActivityPub.Migrations.html","title":"ActivityPub.Migrations","type":"module"},{"doc":"","ref":"ActivityPub.Migrations.html#down/0","title":"ActivityPub.Migrations.down/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#up/0","title":"ActivityPub.Migrations.up/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#upgrade/0","title":"ActivityPub.Migrations.upgrade/0","type":"function"},{"doc":"","ref":"ActivityPub.Object.html","title":"ActivityPub.Object","type":"module"},{"doc":"","ref":"ActivityPub.Object.html#changeset/1","title":"ActivityPub.Object.changeset/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#changeset/2","title":"ActivityPub.Object.changeset/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#delete/1","title":"ActivityPub.Object.delete/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_ap_id/1","title":"ActivityPub.Object.get_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_id/1","title":"ActivityPub.Object.get_by_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_pointer_id/1","title":"ActivityPub.Object.get_by_pointer_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_cached_by_ap_id/1","title":"ActivityPub.Object.get_cached_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_cached_by_pointer_id/1","title":"ActivityPub.Object.get_cached_by_pointer_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_outbox_for_actor/1","title":"ActivityPub.Object.get_outbox_for_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_outbox_fox_actor/2","title":"ActivityPub.Object.get_outbox_fox_actor/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#insert/1","title":"ActivityPub.Object.insert/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#invalidate_cache/1","title":"ActivityPub.Object.invalidate_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#make_tombstone/2","title":"ActivityPub.Object.make_tombstone/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#normalize/2","title":"ActivityPub.Object.normalize/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#set_cache/1","title":"ActivityPub.Object.set_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#swap_object_with_tombstone/1","title":"ActivityPub.Object.swap_object_with_tombstone/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#update/2","title":"ActivityPub.Object.update/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#update_and_set_cache/1","title":"ActivityPub.Object.update_and_set_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#t:t/0","title":"ActivityPub.Object.t/0","type":"type"},{"doc":"","ref":"ActivityPub.Signature.html","title":"ActivityPub.Signature","type":"module"},{"doc":"Callback implementation for HTTPSignatures.Adapter.fetch_public_key/1 .","ref":"ActivityPub.Signature.html#fetch_public_key/1","title":"ActivityPub.Signature.fetch_public_key/1","type":"function"},{"doc":"","ref":"ActivityPub.Signature.html#key_id_to_actor_id/1","title":"ActivityPub.Signature.key_id_to_actor_id/1","type":"function"},{"doc":"Callback implementation for HTTPSignatures.Adapter.refetch_public_key/1 .","ref":"ActivityPub.Signature.html#refetch_public_key/1","title":"ActivityPub.Signature.refetch_public_key/1","type":"function"},{"doc":"","ref":"ActivityPub.Signature.html#sign/2","title":"ActivityPub.Signature.sign/2","type":"function"},{"doc":"Misc functions used for federation","ref":"ActivityPub.Utils.html","title":"ActivityPub.Utils","type":"module"},{"doc":"","ref":"ActivityPub.Utils.html#actor?/1","title":"ActivityPub.Utils.actor?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#actor_url/1","title":"ActivityPub.Utils.actor_url/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#create_context/1","title":"ActivityPub.Utils.create_context/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#fetch_latest_block/2","title":"ActivityPub.Utils.fetch_latest_block/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#fetch_latest_follow/2","title":"ActivityPub.Utils.fetch_latest_follow/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_context_id/0","title":"ActivityPub.Utils.generate_context_id/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_id/1","title":"ActivityPub.Utils.generate_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_object_id/0","title":"ActivityPub.Utils.generate_object_id/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#get_ap_id/1","title":"ActivityPub.Utils.get_ap_id/1","type":"function"},{"doc":"Retruns an existing announce activity if the notice has already been announced","ref":"ActivityPub.Utils.html#get_existing_announce/2","title":"ActivityPub.Utils.get_existing_announce/2","type":"function"},{"doc":"Returns an existing like if a user already liked an object","ref":"ActivityPub.Utils.html#get_existing_like/2","title":"ActivityPub.Utils.get_existing_like/2","type":"function"},{"doc":"Inserts a full object if it is contained in an activity.","ref":"ActivityPub.Utils.html#insert_full_object/3","title":"ActivityPub.Utils.insert_full_object/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#is_ulid?/1","title":"ActivityPub.Utils.is_ulid?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#lazy_put_activity_defaults/1","title":"ActivityPub.Utils.lazy_put_activity_defaults/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#lazy_put_object_defaults/2","title":"ActivityPub.Utils.lazy_put_object_defaults/2","type":"function"},{"doc":"Make announce activity data for the given actor and object","ref":"ActivityPub.Utils.html#make_announce_data/5","title":"ActivityPub.Utils.make_announce_data/5","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_block_data/3","title":"ActivityPub.Utils.make_block_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_create_data/2","title":"ActivityPub.Utils.make_create_data/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_flag_data/2","title":"ActivityPub.Utils.make_flag_data/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_follow_data/3","title":"ActivityPub.Utils.make_follow_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_json_ld_header/0","title":"ActivityPub.Utils.make_json_ld_header/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_like_data/3","title":"ActivityPub.Utils.make_like_data/3","type":"function"},{"doc":"Make unannounce activity data for the given actor and object","ref":"ActivityPub.Utils.html#make_unannounce_data/3","title":"ActivityPub.Utils.make_unannounce_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unblock_data/4","title":"ActivityPub.Utils.make_unblock_data/4","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unfollow_data/4","title":"ActivityPub.Utils.make_unfollow_data/4","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unlike_data/3","title":"ActivityPub.Utils.make_unlike_data/3","type":"function"},{"doc":"Enqueues an activity for federation if it's local","ref":"ActivityPub.Utils.html#maybe_federate/1","title":"ActivityPub.Utils.maybe_federate/1","type":"function"},{"doc":"Some implementations send the actor URI as the actor field, others send the entire actor object, this function figures out what the actor's URI is based on what we have.","ref":"ActivityPub.Utils.html#normalize_params/1","title":"ActivityPub.Utils.normalize_params/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#object_url/1","title":"ActivityPub.Utils.object_url/1","type":"function"},{"doc":"Prepares a struct to be inserted into the objects table","ref":"ActivityPub.Utils.html#prepare_data/3","title":"ActivityPub.Utils.prepare_data/3","type":"function"},{"doc":"Determines if an object or an activity is public.","ref":"ActivityPub.Utils.html#public?/1","title":"ActivityPub.Utils.public?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#supported_actor_types/0","title":"ActivityPub.Utils.supported_actor_types/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#supported_object_types/0","title":"ActivityPub.Utils.supported_object_types/0","type":"function"},{"doc":"Serves and fetches data (mainly actor URI) necessary for federation when only the username and host is known.","ref":"ActivityPub.WebFinger.html","title":"ActivityPub.WebFinger","type":"module"},{"doc":"Fetches webfinger data for an account given in &quot;@username@domain.tld&quot; format.","ref":"ActivityPub.WebFinger.html#finger/1","title":"ActivityPub.WebFinger.finger/1","type":"function"},{"doc":"Formats gathered data into a JRD format.","ref":"ActivityPub.WebFinger.html#represent_user/1","title":"ActivityPub.WebFinger.represent_user/1","type":"function"},{"doc":"Serves a webfinger response for the requested username.","ref":"ActivityPub.WebFinger.html#webfinger/1","title":"ActivityPub.WebFinger.webfinger/1","type":"function"},{"doc":"","ref":"ActivityPub.Workers.PublisherWorker.html","title":"ActivityPub.Workers.PublisherWorker","type":"module"},{"doc":"","ref":"ActivityPub.Workers.PublisherWorker.html#enqueue/3","title":"ActivityPub.Workers.PublisherWorker.enqueue/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.ReceiverWorker.html","title":"ActivityPub.Workers.ReceiverWorker","type":"module"},{"doc":"","ref":"ActivityPub.Workers.ReceiverWorker.html#enqueue/3","title":"ActivityPub.Workers.ReceiverWorker.enqueue/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.WorkerHelper.html","title":"ActivityPub.Workers.WorkerHelper","type":"module"},{"doc":"","ref":"ActivityPub.Workers.WorkerHelper.html#worker_args/1","title":"ActivityPub.Workers.WorkerHelper.worker_args/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use ActivityPubWeb , :controller use ActivityPubWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"ActivityPubWeb.html","title":"ActivityPubWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"ActivityPubWeb.html#__using__/1","title":"ActivityPubWeb.__using__/1","type":"macro"},{"doc":"","ref":"ActivityPubWeb.html#base_url/0","title":"ActivityPubWeb.base_url/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#channel/0","title":"ActivityPubWeb.channel/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#controller/0","title":"ActivityPubWeb.controller/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#router/0","title":"ActivityPubWeb.router/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#view/0","title":"ActivityPubWeb.view/0","type":"function"},{"doc":"Endpoints for serving objects and collections, so the ActivityPub API can be used to read information from the server. Even though we store the data in AS format, some changes need to be applied to the entity before serving it in the AP REST response. This is done in ActivityPubWeb.ActivityPubView .","ref":"ActivityPubWeb.ActivityPubController.html","title":"ActivityPubWeb.ActivityPubController","type":"module"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#actor/2","title":"ActivityPubWeb.ActivityPubController.actor/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#ap_route_helper/1","title":"ActivityPubWeb.ActivityPubController.ap_route_helper/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#followers/2","title":"ActivityPubWeb.ActivityPubController.followers/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#following/2","title":"ActivityPubWeb.ActivityPubController.following/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#inbox/2","title":"ActivityPubWeb.ActivityPubController.inbox/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#noop/2","title":"ActivityPubWeb.ActivityPubController.noop/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#object/2","title":"ActivityPubWeb.ActivityPubController.object/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#outbox/2","title":"ActivityPubWeb.ActivityPubController.outbox/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActorView.html","title":"ActivityPubWeb.ActorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ActorView.html#__resource__/0","title":"ActivityPubWeb.ActorView.__resource__/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActorView.html#collection/4","title":"ActivityPubWeb.ActorView.collection/4","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ActorView.html#render/2","title":"ActivityPubWeb.ActorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ActivityPubWeb.ActorView.html#template_not_found/2","title":"ActivityPubWeb.ActorView.template_not_found/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Endpoint.html","title":"ActivityPubWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"ActivityPubWeb.Endpoint.html#broadcast/3","title":"ActivityPubWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"ActivityPubWeb.Endpoint.html#broadcast!/3","title":"ActivityPubWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"ActivityPubWeb.Endpoint.html#broadcast_from/4","title":"ActivityPubWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"ActivityPubWeb.Endpoint.html#broadcast_from!/4","title":"ActivityPubWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"ActivityPubWeb.Endpoint.html#call/2","title":"ActivityPubWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"ActivityPubWeb.Endpoint.html#child_spec/1","title":"ActivityPubWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"ActivityPubWeb.Endpoint.html#config/2","title":"ActivityPubWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"ActivityPubWeb.Endpoint.html#config_change/2","title":"ActivityPubWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"ActivityPubWeb.Endpoint.html#host/0","title":"ActivityPubWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"ActivityPubWeb.Endpoint.html#init/1","title":"ActivityPubWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"ActivityPubWeb.Endpoint.html#local_broadcast/3","title":"ActivityPubWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"ActivityPubWeb.Endpoint.html#local_broadcast_from/4","title":"ActivityPubWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"ActivityPubWeb.Endpoint.html#path/1","title":"ActivityPubWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"ActivityPubWeb.Endpoint.html#script_name/0","title":"ActivityPubWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"ActivityPubWeb.Endpoint.html#start_link/1","title":"ActivityPubWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"ActivityPubWeb.Endpoint.html#static_integrity/1","title":"ActivityPubWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"ActivityPubWeb.Endpoint.html#static_lookup/1","title":"ActivityPubWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"ActivityPubWeb.Endpoint.html#static_path/1","title":"ActivityPubWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"ActivityPubWeb.Endpoint.html#static_url/0","title":"ActivityPubWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"ActivityPubWeb.Endpoint.html#struct_url/0","title":"ActivityPubWeb.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"ActivityPubWeb.Endpoint.html#subscribe/2","title":"ActivityPubWeb.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"ActivityPubWeb.Endpoint.html#unsubscribe/1","title":"ActivityPubWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"ActivityPubWeb.Endpoint.html#url/0","title":"ActivityPubWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"ActivityPubWeb.ErrorHelpers.html","title":"ActivityPubWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"ActivityPubWeb.ErrorHelpers.html#error_tag/2","title":"ActivityPubWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"ActivityPubWeb.ErrorHelpers.html#translate_error/1","title":"ActivityPubWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"Standard error view","ref":"ActivityPubWeb.ErrorView.html","title":"ActivityPubWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ErrorView.html#__resource__/0","title":"ActivityPubWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ErrorView.html#render/2","title":"ActivityPubWeb.ErrorView.render/2","type":"function"},{"doc":"By default, Phoenix returns the status message from the template name. For example, &quot;404.html&quot; becomes &quot;Not Found&quot;.","ref":"ActivityPubWeb.ErrorView.html#template_not_found/2","title":"ActivityPubWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html","title":"ActivityPubWeb.Federator","type":"module"},{"doc":"","ref":"ActivityPubWeb.Federator.html#incoming_ap_doc/1","title":"ActivityPubWeb.Federator.incoming_ap_doc/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#perform/2","title":"ActivityPubWeb.Federator.perform/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#perform/3","title":"ActivityPubWeb.Federator.perform/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#publish/1","title":"ActivityPubWeb.Federator.publish/1","type":"function"},{"doc":"Defines the contract used by federation implementations to publish messages to their peers.","ref":"ActivityPubWeb.Federator.Publisher.html","title":"ActivityPubWeb.Federator.Publisher","type":"behaviour"},{"doc":"Enqueue publishing a single activity.","ref":"ActivityPubWeb.Federator.Publisher.html#enqueue_one/2","title":"ActivityPubWeb.Federator.Publisher.enqueue_one/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.Publisher.html#gather_webfinger_links/1","title":"ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1","type":"function"},{"doc":"Gathers links used by an outgoing federation module for WebFinger output.","ref":"ActivityPubWeb.Federator.Publisher.html#c:gather_webfinger_links/1","title":"ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1","type":"callback"},{"doc":"Determine whether an activity can be relayed using the federation module.","ref":"ActivityPubWeb.Federator.Publisher.html#c:is_representable?/1","title":"ActivityPubWeb.Federator.Publisher.is_representable?/1","type":"callback"},{"doc":"","ref":"ActivityPubWeb.Federator.Publisher.html#publish/2","title":"ActivityPubWeb.Federator.Publisher.publish/2","type":"function"},{"doc":"Relays an activity to all specified peers.","ref":"ActivityPubWeb.Federator.Publisher.html#c:publish/2","title":"ActivityPubWeb.Federator.Publisher.publish/2","type":"callback"},{"doc":"Relays an activity to a specified peer, determined by the parameters. The parameters used are controlled by the federation module.","ref":"ActivityPubWeb.Federator.Publisher.html#c:publish_one/1","title":"ActivityPubWeb.Federator.Publisher.publish_one/1","type":"callback"},{"doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import ActivityPubWeb.Gettext # Simple translation gettext ( &quot;Here is the string to translate&quot; ) # Plural translation ngettext ( &quot;Here is the string to translate&quot; , &quot;Here are the strings to translate&quot; , 3 ) # Domain-based translation dgettext ( &quot;errors&quot; , &quot;Here is the error message to translate&quot; ) See the Gettext Docs for detailed usage.","ref":"ActivityPubWeb.Gettext.html","title":"ActivityPubWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"ActivityPubWeb.Gettext.html#dgettext/3","title":"ActivityPubWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"ActivityPubWeb.Gettext.html#dgettext_noop/2","title":"ActivityPubWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"ActivityPubWeb.Gettext.html#dngettext/5","title":"ActivityPubWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"ActivityPubWeb.Gettext.html#dngettext_noop/3","title":"ActivityPubWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"ActivityPubWeb.Gettext.html#dpgettext/4","title":"ActivityPubWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#dpgettext_noop/3","title":"ActivityPubWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"ActivityPubWeb.Gettext.html#dpngettext/6","title":"ActivityPubWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#dpngettext_noop/4","title":"ActivityPubWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"ActivityPubWeb.Gettext.html#gettext/2","title":"ActivityPubWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"ActivityPubWeb.Gettext.html#gettext_comment/1","title":"ActivityPubWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"ActivityPubWeb.Gettext.html#gettext_noop/1","title":"ActivityPubWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"ActivityPubWeb.Gettext.html#handle_missing_bindings/2","title":"ActivityPubWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6 .","ref":"ActivityPubWeb.Gettext.html#handle_missing_plural_translation/6","title":"ActivityPubWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4 .","ref":"ActivityPubWeb.Gettext.html#handle_missing_translation/4","title":"ActivityPubWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#lgettext/5","title":"ActivityPubWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#lngettext/7","title":"ActivityPubWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"ActivityPubWeb.Gettext.html#ngettext/4","title":"ActivityPubWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"ActivityPubWeb.Gettext.html#ngettext_noop/2","title":"ActivityPubWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"ActivityPubWeb.Gettext.html#pgettext/3","title":"ActivityPubWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#pgettext_noop/2","title":"ActivityPubWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"ActivityPubWeb.Gettext.html#pngettext/5","title":"ActivityPubWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"ActivityPubWeb.Gettext.html#pngettext_noop/3","title":"ActivityPubWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"ActivityPubWeb.ObjectView.html","title":"ActivityPubWeb.ObjectView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ObjectView.html#__resource__/0","title":"ActivityPubWeb.ObjectView.__resource__/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.ObjectView.html#collection/4","title":"ActivityPubWeb.ObjectView.collection/4","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ObjectView.html#render/2","title":"ActivityPubWeb.ObjectView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ActivityPubWeb.ObjectView.html#template_not_found/2","title":"ActivityPubWeb.ObjectView.template_not_found/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug","type":"module"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html#call/2","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug.call/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html#init/1","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug.init/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Publisher.html","title":"ActivityPubWeb.Publisher","type":"module"},{"doc":"Determine a user inbox to use based on heuristics. These heuristics are based on an approximation of the sharedInbox rules in the ActivityPub specification . Please do not edit this function (or its children) without reading the spec, as editing the code is likely to introduce some breakage without some familiarity.","ref":"ActivityPubWeb.Publisher.html#determine_inbox/2","title":"ActivityPubWeb.Publisher.determine_inbox/2","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1 .","ref":"ActivityPubWeb.Publisher.html#gather_webfinger_links/1","title":"ActivityPubWeb.Publisher.gather_webfinger_links/1","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.is_representable?/1 .","ref":"ActivityPubWeb.Publisher.html#is_representable?/1","title":"ActivityPubWeb.Publisher.is_representable?/1","type":"function"},{"doc":"If you put the URL of the shared inbox of an ActivityPub instance in the following env variable, all public content will be pushed there via AP federation for search indexing purposes: PUSH_PULIC_CONTENT_TO_SEARCH_INDEX_INSTANCE #TODO: move to adapter","ref":"ActivityPubWeb.Publisher.html#maybe_federate_to_search_index/2","title":"ActivityPubWeb.Publisher.maybe_federate_to_search_index/2","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.publish/2 .","ref":"ActivityPubWeb.Publisher.html#publish/2","title":"ActivityPubWeb.Publisher.publish/2","type":"function"},{"doc":"Publish a single message to a peer. Takes a struct with the following parameters set: inbox : the inbox to publish to json : the JSON message body representing the ActivityPub message actor : the actor which is signing the message id : the ActivityStreams URI of the message","ref":"ActivityPubWeb.Publisher.html#publish_one/1","title":"ActivityPubWeb.Publisher.publish_one/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html","title":"ActivityPubWeb.RedirectController","type":"module"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html#actor/2","title":"ActivityPubWeb.RedirectController.actor/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html#object/2","title":"ActivityPubWeb.RedirectController.object/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Router.html","title":"ActivityPubWeb.Router","type":"module"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html","title":"ActivityPubWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"ActivityPubWeb.Telemetry.html#child_spec/1","title":"ActivityPubWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html#metrics/0","title":"ActivityPubWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html#start_link/1","title":"ActivityPubWeb.Telemetry.start_link/1","type":"function"},{"doc":"This module normalises outgoing data to conform with AS2/AP specs and handles incoming objects and activities","ref":"ActivityPubWeb.Transmogrifier.html","title":"ActivityPubWeb.Transmogrifier","type":"module"},{"doc":"","ref":"ActivityPubWeb.Transmogrifier.html#fix_actor/1","title":"ActivityPubWeb.Transmogrifier.fix_actor/1","type":"function"},{"doc":"Modifies an incoming AP object (mastodon format) to our internal format.","ref":"ActivityPubWeb.Transmogrifier.html#fix_object/1","title":"ActivityPubWeb.Transmogrifier.fix_object/1","type":"function"},{"doc":"Handles incoming data, inserts it into the database and triggers side effects if the data is a supported activity type.","ref":"ActivityPubWeb.Transmogrifier.html#handle_incoming/1","title":"ActivityPubWeb.Transmogrifier.handle_incoming/1","type":"function"},{"doc":"Normalises and inserts an incoming AS2 object. Returns Object.","ref":"ActivityPubWeb.Transmogrifier.html#handle_object/1","title":"ActivityPubWeb.Transmogrifier.handle_object/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Transmogrifier.html#prepare_object/1","title":"ActivityPubWeb.Transmogrifier.prepare_object/1","type":"function"},{"doc":"Translates MN Entity to an AP compatible format","ref":"ActivityPubWeb.Transmogrifier.html#prepare_outgoing/1","title":"ActivityPubWeb.Transmogrifier.prepare_outgoing/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.UserSocket.html","title":"ActivityPubWeb.UserSocket","type":"module"},{"doc":"","ref":"ActivityPubWeb.WebFingerController.html","title":"ActivityPubWeb.WebFingerController","type":"module"},{"doc":"","ref":"ActivityPubWeb.WebFingerController.html#webfinger/2","title":"ActivityPubWeb.WebFingerController.webfinger/2","type":"function"},{"doc":"","ref":"ActivityPub.Config.Error.html","title":"ActivityPub.Config.Error","type":"exception"},{"doc":"A library of common utils and helpers used across Bonfire extensions Refer to the README","ref":"Bonfire.Common.html","title":"Bonfire.Common","type":"module"},{"doc":"","ref":"Bonfire.Common.Changesets.html","title":"Bonfire.Common.Changesets","type":"module"},{"doc":"","ref":"Bonfire.Common.Changesets.html#error/2","title":"Bonfire.Common.Changesets.error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html","title":"Bonfire.Common.Config","type":"module"},{"doc":"","ref":"Bonfire.Common.Config.html#compilation_error/1","title":"Bonfire.Common.Config.compilation_error/1","type":"macro"},{"doc":"","ref":"Bonfire.Common.Config.html#delete/2","title":"Bonfire.Common.Config.delete/2","type":"function"},{"doc":"Get config value for a config key (optionally from a specific OTP app or Bonfire extension)","ref":"Bonfire.Common.Config.html#get/3","title":"Bonfire.Common.Config.get/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#get!/2","title":"Bonfire.Common.Config.get!/2","type":"function"},{"doc":"Get all config keys/values for a Bonfire extension or OTP app","ref":"Bonfire.Common.Config.html#get_ext/1","title":"Bonfire.Common.Config.get_ext/1","type":"function"},{"doc":"Get config value for a Bonfire extension or OTP app config key","ref":"Bonfire.Common.Config.html#get_ext/3","title":"Bonfire.Common.Config.get_ext/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#get_ext!/2","title":"Bonfire.Common.Config.get_ext!/2","type":"function"},{"doc":"See Bonfire.Common.Extend.module_enabled?/1 .","ref":"Bonfire.Common.Config.html#module_enabled?/1","title":"Bonfire.Common.Config.module_enabled?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#put/3","title":"Bonfire.Common.Config.put/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#repo/0","title":"Bonfire.Common.Config.repo/0","type":"function"},{"doc":"Stop if an Elixir module or extension / OTP app doesn't have configuration keys set up","ref":"Bonfire.Common.Config.html#require_extension_config!/1","title":"Bonfire.Common.Config.require_extension_config!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#top_level_otp_app/0","title":"Bonfire.Common.Config.top_level_otp_app/0","type":"function"},{"doc":"A Global cache of known context modules to be queried by associated schema, or vice versa. Use of the ContextModules Service requires: Exporting context_module/0 in relevant modules (in schemas pointing to context modules and/or in context modules pointing to schemas), returning a Module atom To populate :pointers, :search_path in config the list of OTP applications where context_modules are declared. Start the Bonfire.Common.ContextModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Common.ContextModules.html","title":"Bonfire.Common.ContextModules","type":"module"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#apply_error/3","title":"Bonfire.Common.ContextModules.apply_error/3","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.ContextModules.html#child_spec/1","title":"Bonfire.Common.ContextModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#context_function_error/3","title":"Bonfire.Common.ContextModules.context_function_error/3","type":"function"},{"doc":"Get a context identified by schema","ref":"Bonfire.Common.ContextModules.html#context_module/1","title":"Bonfire.Common.ContextModules.context_module/1","type":"function"},{"doc":"Look up a context, throw :not_found if not found.","ref":"Bonfire.Common.ContextModules.html#context_module!/1","title":"Bonfire.Common.ContextModules.context_module!/1","type":"function"},{"doc":"Look up many contexts at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.ContextModules.html#context_modules/1","title":"Bonfire.Common.ContextModules.context_modules/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#data/0","title":"Bonfire.Common.ContextModules.data/0","type":"function"},{"doc":"Given an object or schema module name, run a function on the associated context module.","ref":"Bonfire.Common.ContextModules.html#maybe_apply/4","title":"Bonfire.Common.ContextModules.maybe_apply/4","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#maybe_context_module/1","title":"Bonfire.Common.ContextModules.maybe_context_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#populate/0","title":"Bonfire.Common.ContextModules.populate/0","type":"function"},{"doc":"Populates the global cache with context_module data via introspection.","ref":"Bonfire.Common.ContextModules.html#start_link/1","title":"Bonfire.Common.ContextModules.start_link/1","type":"function"},{"doc":"A query is either a context_module name atom or (Pointer) id binary","ref":"Bonfire.Common.ContextModules.html#t:query/0","title":"Bonfire.Common.ContextModules.query/0","type":"type"},{"doc":"","ref":"Bonfire.Common.DateTimes.html","title":"Bonfire.Common.DateTimes","type":"module"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#future?/1","title":"Bonfire.Common.DateTimes.future?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#now/0","title":"Bonfire.Common.DateTimes.now/0","type":"function"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#past?/1","title":"Bonfire.Common.DateTimes.past?/1","type":"function"},{"doc":"Missing functions from Enum","ref":"Bonfire.Common.Enums.html","title":"Bonfire.Common.Enums","type":"module"},{"doc":"","ref":"Bonfire.Common.Enums.html#count_where/2","title":"Bonfire.Common.Enums.count_where/2","type":"function"},{"doc":"Like group_by, except children are required to be unique (will throw otherwise!) and the resulting map does not wrap each item in a list","ref":"Bonfire.Common.Enums.html#group/2","title":"Bonfire.Common.Enums.group/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Enums.html#group_map/2","title":"Bonfire.Common.Enums.group_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html","title":"Bonfire.Common.Extend","type":"module"},{"doc":"Whether an Elixir module or extension / OTP app is present AND not part of a disabled Bonfire extension (by having in config something like config :bonfire_common, disabled: true )","ref":"Bonfire.Common.Extend.html#extension_enabled?/1","title":"Bonfire.Common.Extend.extension_enabled?/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app is present","ref":"Bonfire.Common.Extend.html#extension_loaded?/1","title":"Bonfire.Common.Extend.extension_loaded?/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app has configuration keys set up","ref":"Bonfire.Common.Extend.html#has_extension_config?/1","title":"Bonfire.Common.Extend.has_extension_config?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#import_if_enabled/2","title":"Bonfire.Common.Extend.import_if_enabled/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Extend.html#loaded_deps/0","title":"Bonfire.Common.Extend.loaded_deps/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_extension_loaded/1","title":"Bonfire.Common.Extend.maybe_extension_loaded/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_module_loaded/1","title":"Bonfire.Common.Extend.maybe_module_loaded/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_schema_or_pointer/1","title":"Bonfire.Common.Extend.maybe_schema_or_pointer/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app is present AND not part of a disabled Bonfire extension (by having in config something like config :bonfire_common, disabled: true ) TODO: also make it possible to disable individual modules in config","ref":"Bonfire.Common.Extend.html#module_enabled?/1","title":"Bonfire.Common.Extend.module_enabled?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#module_exists?/1","title":"Bonfire.Common.Extend.module_exists?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#module_exists_or/2","title":"Bonfire.Common.Extend.module_exists_or/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#quoted_import_if_enabled/2","title":"Bonfire.Common.Extend.quoted_import_if_enabled/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#quoted_use_if_enabled/2","title":"Bonfire.Common.Extend.quoted_use_if_enabled/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#use_if_enabled/2","title":"Bonfire.Common.Extend.use_if_enabled/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Extensions.html","title":"Bonfire.Common.Extensions","type":"module"},{"doc":"","ref":"Bonfire.Common.Extensions.html#data/0","title":"Bonfire.Common.Extensions.data/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_branch/1","title":"Bonfire.Common.Extensions.get_branch/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_link/1","title":"Bonfire.Common.Extensions.get_link/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_version/1","title":"Bonfire.Common.Extensions.get_version/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_version_link/1","title":"Bonfire.Common.Extensions.get_version_link/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html","title":"Bonfire.Common.Extensions.Diff","type":"module"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#analyse_repo_latest_diff_stream/1","title":"Bonfire.Common.Extensions.Diff.analyse_repo_latest_diff_stream/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#generate_diff/2","title":"Bonfire.Common.Extensions.Diff.generate_diff/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git!/3","title":"Bonfire.Common.Extensions.Diff.git!/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_add_all/1","title":"Bonfire.Common.Extensions.Diff.git_add_all/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_config/1","title":"Bonfire.Common.Extensions.Diff.git_config/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_diff/3","title":"Bonfire.Common.Extensions.Diff.git_diff/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_fetch/1","title":"Bonfire.Common.Extensions.Diff.git_fetch/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#parse_repo_latest_diff/1","title":"Bonfire.Common.Extensions.Diff.parse_repo_latest_diff/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#render_diff/1","title":"Bonfire.Common.Extensions.Diff.render_diff/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#render_diff_stream/3","title":"Bonfire.Common.Extensions.Diff.render_diff_stream/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#repo_latest_diff/2","title":"Bonfire.Common.Extensions.Diff.repo_latest_diff/2","type":"function"},{"doc":"usage examples: phx-submit=&quot;Bonfire.Social.Posts:post&quot; will be routed to Bonfire.Social.Posts.LiveHandler.handle_event(&quot;post&quot;, ... Bonfire.Common.Utils.pubsub_broadcast(feed_id, {{Bonfire.Social.Feeds, :new_activity}, activity}) will be routed to Bonfire.Social.Feeds.LiveHandler.handle_info({:new_activity, activity}, ... href=&quot;?Bonfire.Social.Feeds[after]=&lt;%= e(@page_info, :end_cursor, nil) %&gt;&quot; will be routed to Bonfire.Social.Feeds.LiveHandler.handle_params(%{&quot;after&quot; =&gt; cursor_after} ...","ref":"Bonfire.Common.LiveHandlers.html","title":"Bonfire.Common.LiveHandlers","type":"module"},{"doc":"","ref":"Bonfire.Common.LiveHandlers.html#handle_event/4","title":"Bonfire.Common.LiveHandlers.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.Common.LiveHandlers.html#handle_info/3","title":"Bonfire.Common.LiveHandlers.handle_info/3","type":"function"},{"doc":"","ref":"Bonfire.Common.LiveHandlers.html#handle_params/4","title":"Bonfire.Common.LiveHandlers.handle_params/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html","title":"Bonfire.Common.Pointers","type":"module"},{"doc":"Batch loading of associations for GraphQL API","ref":"Bonfire.Common.Pointers.html#dataloader/1","title":"Bonfire.Common.Pointers.dataloader/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#filters/3","title":"Bonfire.Common.Pointers.filters/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#follow!/2","title":"Bonfire.Common.Pointers.follow!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#follow_function_error/3","title":"Bonfire.Common.Pointers.follow_function_error/3","type":"function"},{"doc":"Forge a pointer from a structure that participates in the meta abstraction. Does not hit the database. Is safe so long as the provided struct participates in the meta abstraction.","ref":"Bonfire.Common.Pointers.html#forge!/1","title":"Bonfire.Common.Pointers.forge!/1","type":"function"},{"doc":"Forges a pointer to a participating meta entity. Does not hit the database, is safe so long as the entry we wish to synthesise a pointer for represents a legitimate entry in the database.","ref":"Bonfire.Common.Pointers.html#forge!/2","title":"Bonfire.Common.Pointers.forge!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#get/2","title":"Bonfire.Common.Pointers.get/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#get!/2","title":"Bonfire.Common.Pointers.get!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#id_binary/1","title":"Bonfire.Common.Pointers.id_binary/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#id_filter/2","title":"Bonfire.Common.Pointers.id_filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#list!/1","title":"Bonfire.Common.Pointers.list!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#list_ids/0","title":"Bonfire.Common.Pointers.list_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#many/2","title":"Bonfire.Common.Pointers.many/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#many!/2","title":"Bonfire.Common.Pointers.many!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#maybe_forge!/1","title":"Bonfire.Common.Pointers.maybe_forge!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#one/2","title":"Bonfire.Common.Pointers.one/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#one!/2","title":"Bonfire.Common.Pointers.one!/2","type":"function"},{"doc":"Follows one or more pointers and adds the pointed records to the pointed attrs","ref":"Bonfire.Common.Pointers.html#preload!/2","title":"Bonfire.Common.Pointers.preload!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#query/3","title":"Bonfire.Common.Pointers.query/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html","title":"Bonfire.Common.Pointers.Preload","type":"module"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_nested_pointers/3","title":"Bonfire.Common.Pointers.Preload.maybe_preload_nested_pointers/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_pointer/2","title":"Bonfire.Common.Pointers.Preload.maybe_preload_pointer/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_pointers/2","title":"Bonfire.Common.Pointers.Preload.maybe_preload_pointers/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html","title":"Bonfire.Common.Pointers.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Pointers.Queries.html#filter/2","title":"Bonfire.Common.Pointers.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#queries_module/0","title":"Bonfire.Common.Pointers.Queries.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#query/1","title":"Bonfire.Common.Pointers.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#query/2","title":"Bonfire.Common.Pointers.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html","title":"Bonfire.Common.Pointers.Tables","type":"module"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_ids/0","title":"Bonfire.Common.Pointers.Tables.list_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_schemas/0","title":"Bonfire.Common.Pointers.Tables.list_schemas/0","type":"function"},{"doc":"Lists all Pointable Tables","ref":"Bonfire.Common.Pointers.Tables.html#list_tables/1","title":"Bonfire.Common.Pointers.Tables.list_tables/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_tables_debug/0","title":"Bonfire.Common.Pointers.Tables.list_tables_debug/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#many/1","title":"Bonfire.Common.Pointers.Tables.many/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#one/1","title":"Bonfire.Common.Pointers.Tables.one/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#one!/1","title":"Bonfire.Common.Pointers.Tables.one!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#schema_or_table!/1","title":"Bonfire.Common.Pointers.Tables.schema_or_table!/1","type":"function"},{"doc":"Retrieves the Table that a pointer points to Note: Throws an error if the table cannot be found","ref":"Bonfire.Common.Pointers.Tables.html#table!/1","title":"Bonfire.Common.Pointers.Tables.table!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#table_fields/1","title":"Bonfire.Common.Pointers.Tables.table_fields/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html","title":"Bonfire.Common.Pointers.Tables.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Pointers.Tables.Queries.html#filter/2","title":"Bonfire.Common.Pointers.Tables.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html#query/1","title":"Bonfire.Common.Pointers.Tables.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html#query/2","title":"Bonfire.Common.Pointers.Tables.Queries.query/2","type":"function"},{"doc":"Properly query some data using the appropriate module depending on its schema. Back by a global cache of known query_modules to be queried by their schema, or vice versa. Use of the QueryModules Service requires: Exporting queries_module/0 in relevant modules (in schemas pointing to query modules and/or in query modules pointing to schemas), returning a Module atom To populate :pointers, :search_path in config the list of OTP applications where query_modules are declared. Start the Bonfire.Common.QueryModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Common.QueryModules.html","title":"Bonfire.Common.QueryModules","type":"module"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#apply_error/3","title":"Bonfire.Common.QueryModules.apply_error/3","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.QueryModules.html#child_spec/1","title":"Bonfire.Common.QueryModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#data/0","title":"Bonfire.Common.QueryModules.data/0","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#maybe_query/3","title":"Bonfire.Common.QueryModules.maybe_query/3","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#maybe_query_module/1","title":"Bonfire.Common.QueryModules.maybe_query_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#populate/0","title":"Bonfire.Common.QueryModules.populate/0","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#query_function_error/3","title":"Bonfire.Common.QueryModules.query_function_error/3","type":"function"},{"doc":"Get a Queryable identified by name or id.","ref":"Bonfire.Common.QueryModules.html#query_module/1","title":"Bonfire.Common.QueryModules.query_module/1","type":"function"},{"doc":"Look up a Queryable by name or id, throw :not_found if not found.","ref":"Bonfire.Common.QueryModules.html#query_module!/1","title":"Bonfire.Common.QueryModules.query_module!/1","type":"function"},{"doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.QueryModules.html#query_modules/1","title":"Bonfire.Common.QueryModules.query_modules/1","type":"function"},{"doc":"Populates the global cache with query_module data via introspection.","ref":"Bonfire.Common.QueryModules.html#start_link/1","title":"Bonfire.Common.QueryModules.start_link/1","type":"function"},{"doc":"A query is either a query_module name atom or (Pointer) id binary","ref":"Bonfire.Common.QueryModules.html#t:query/0","title":"Bonfire.Common.QueryModules.query/0","type":"type"},{"doc":"","ref":"Bonfire.Common.Simulation.html","title":"Bonfire.Common.Simulation","type":"module"},{"doc":"Picks a unique random url for an ap endpoint","ref":"Bonfire.Common.Simulation.html#ap_url_base/0","title":"Bonfire.Common.Simulation.ap_url_base/0","type":"function"},{"doc":"Generates random base64 text","ref":"Bonfire.Common.Simulation.html#base64/0","title":"Bonfire.Common.Simulation.base64/0","type":"function"},{"doc":"Generates a random boolean","ref":"Bonfire.Common.Simulation.html#bool/0","title":"Bonfire.Common.Simulation.bool/0","type":"function"},{"doc":"Picks a random canonical url and makes it unique","ref":"Bonfire.Common.Simulation.html#canonical_url/0","title":"Bonfire.Common.Simulation.canonical_url/0","type":"function"},{"doc":"Generate a random content type","ref":"Bonfire.Common.Simulation.html#content_type/0","title":"Bonfire.Common.Simulation.content_type/0","type":"function"},{"doc":"Picks a remote url from a set of available ones.","ref":"Bonfire.Common.Simulation.html#content_url/0","title":"Bonfire.Common.Simulation.content_url/0","type":"function"},{"doc":"Generates a random date of birth based on an age range of 18-99","ref":"Bonfire.Common.Simulation.html#date_of_birth/0","title":"Bonfire.Common.Simulation.date_of_birth/0","type":"function"},{"doc":"Generates a random domain name","ref":"Bonfire.Common.Simulation.html#domain/0","title":"Bonfire.Common.Simulation.domain/0","type":"function"},{"doc":"Generates a random unique email","ref":"Bonfire.Common.Simulation.html#email/0","title":"Bonfire.Common.Simulation.email/0","type":"function"},{"doc":"Generates the first half of an email address","ref":"Bonfire.Common.Simulation.html#email_user/0","title":"Bonfire.Common.Simulation.email_user/0","type":"function"},{"doc":"Returns false","ref":"Bonfire.Common.Simulation.html#falsehood/0","title":"Bonfire.Common.Simulation.falsehood/0","type":"function"},{"doc":"Generate a random floating point number","ref":"Bonfire.Common.Simulation.html#float/0","title":"Bonfire.Common.Simulation.float/0","type":"function"},{"doc":"Picks a date up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_date/0","title":"Bonfire.Common.Simulation.future_date/0","type":"function"},{"doc":"Picks a datetime up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_datetime/0","title":"Bonfire.Common.Simulation.future_datetime/0","type":"function"},{"doc":"Same as future_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#future_datetime_iso/0","title":"Bonfire.Common.Simulation.future_datetime_iso/0","type":"function"},{"doc":"Picks an icon url","ref":"Bonfire.Common.Simulation.html#icon/0","title":"Bonfire.Common.Simulation.icon/0","type":"function"},{"doc":"Picks an image url","ref":"Bonfire.Common.Simulation.html#image/0","title":"Bonfire.Common.Simulation.image/0","type":"function"},{"doc":"Generate a random signed integer","ref":"Bonfire.Common.Simulation.html#integer/0","title":"Bonfire.Common.Simulation.integer/0","type":"function"},{"doc":"A random license for content","ref":"Bonfire.Common.Simulation.html#license/0","title":"Bonfire.Common.Simulation.license/0","type":"function"},{"doc":"Returns a city and country","ref":"Bonfire.Common.Simulation.html#location/0","title":"Bonfire.Common.Simulation.location/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#long_count/0","title":"Bonfire.Common.Simulation.long_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#long_list/1","title":"Bonfire.Common.Simulation.long_list/1","type":"function"},{"doc":"Generate a random boolean that can also be nil","ref":"Bonfire.Common.Simulation.html#maybe_bool/0","title":"Bonfire.Common.Simulation.maybe_bool/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#maybe_one_of/1","title":"Bonfire.Common.Simulation.maybe_one_of/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#med_count/0","title":"Bonfire.Common.Simulation.med_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#med_list/1","title":"Bonfire.Common.Simulation.med_list/1","type":"function"},{"doc":"Picks a name","ref":"Bonfire.Common.Simulation.html#name/0","title":"Bonfire.Common.Simulation.name/0","type":"function"},{"doc":"Generate a random negative integer","ref":"Bonfire.Common.Simulation.html#neg_integer/0","title":"Bonfire.Common.Simulation.neg_integer/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#one_of/1","title":"Bonfire.Common.Simulation.one_of/1","type":"function"},{"doc":"Generates a random paragraph","ref":"Bonfire.Common.Simulation.html#paragraph/0","title":"Bonfire.Common.Simulation.paragraph/0","type":"function"},{"doc":"Generates a random password string","ref":"Bonfire.Common.Simulation.html#password/0","title":"Bonfire.Common.Simulation.password/0","type":"function"},{"doc":"Picks a date up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_date/0","title":"Bonfire.Common.Simulation.past_date/0","type":"function"},{"doc":"Picks a datetime up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_datetime/0","title":"Bonfire.Common.Simulation.past_datetime/0","type":"function"},{"doc":"Same as past_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#past_datetime_iso/0","title":"Bonfire.Common.Simulation.past_datetime_iso/0","type":"function"},{"doc":"Picks a path from a set of available files.","ref":"Bonfire.Common.Simulation.html#path/0","title":"Bonfire.Common.Simulation.path/0","type":"function"},{"doc":"Generate a random positive integer","ref":"Bonfire.Common.Simulation.html#pos_integer/0","title":"Bonfire.Common.Simulation.pos_integer/0","type":"function"},{"doc":"Picks a unique preferred_username","ref":"Bonfire.Common.Simulation.html#preferred_username/0","title":"Bonfire.Common.Simulation.preferred_username/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#short_count/0","title":"Bonfire.Common.Simulation.short_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#short_list/1","title":"Bonfire.Common.Simulation.short_list/1","type":"function"},{"doc":"Picks a fake signing key","ref":"Bonfire.Common.Simulation.html#signing_key/0","title":"Bonfire.Common.Simulation.signing_key/0","type":"function"},{"doc":"Repeats a function count times if count_or_range is a positive integer. If count_or_range is a positive range, a random number from this range is selected and that value used as a count","ref":"Bonfire.Common.Simulation.html#some/2","title":"Bonfire.Common.Simulation.some/2","type":"function"},{"doc":"Picks a summary text paragraph","ref":"Bonfire.Common.Simulation.html#summary/0","title":"Bonfire.Common.Simulation.summary/0","type":"function"},{"doc":"Returns true","ref":"Bonfire.Common.Simulation.html#truth/0","title":"Bonfire.Common.Simulation.truth/0","type":"function"},{"doc":"Generates a random unique ulid","ref":"Bonfire.Common.Simulation.html#ulid/0","title":"Bonfire.Common.Simulation.ulid/0","type":"function"},{"doc":"Generates a random url","ref":"Bonfire.Common.Simulation.html#url/0","title":"Bonfire.Common.Simulation.url/0","type":"function"},{"doc":"Generates a random username","ref":"Bonfire.Common.Simulation.html#username/0","title":"Bonfire.Common.Simulation.username/0","type":"function"},{"doc":"Generates a random unique uuid","ref":"Bonfire.Common.Simulation.html#uuid/0","title":"Bonfire.Common.Simulation.uuid/0","type":"function"},{"doc":"A verb to be used for an activity.","ref":"Bonfire.Common.Simulation.html#verb/0","title":"Bonfire.Common.Simulation.verb/0","type":"function"},{"doc":"A website address","ref":"Bonfire.Common.Simulation.html#website/0","title":"Bonfire.Common.Simulation.website/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html","title":"Bonfire.Common.Text","type":"module"},{"doc":"","ref":"Bonfire.Common.Text.html#blank?/1","title":"Bonfire.Common.Text.blank?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#camelise/1","title":"Bonfire.Common.Text.camelise/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_checkboxes/1","title":"Bonfire.Common.Text.list_checkboxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_checked_boxes/1","title":"Bonfire.Common.Text.list_checked_boxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_unchecked_boxes/1","title":"Bonfire.Common.Text.list_unchecked_boxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#markdown_checkboxes/1","title":"Bonfire.Common.Text.markdown_checkboxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#markdown_to_html/1","title":"Bonfire.Common.Text.markdown_to_html/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#regex_list/2","title":"Bonfire.Common.Text.regex_list/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#sentence_truncate/2","title":"Bonfire.Common.Text.sentence_truncate/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#truncate/3","title":"Bonfire.Common.Text.truncate/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#underscore_truncate/2","title":"Bonfire.Common.Text.underscore_truncate/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#upcase_first/1","title":"Bonfire.Common.Text.upcase_first/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Types.html","title":"Bonfire.Common.Types","type":"module"},{"doc":"","ref":"Bonfire.Common.Types.html#object_type/1","title":"Bonfire.Common.Types.object_type/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html","title":"Bonfire.Common.URIs","type":"module"},{"doc":"","ref":"Bonfire.Common.URIs.html#base_url/1","title":"Bonfire.Common.URIs.base_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#canonical_url/1","title":"Bonfire.Common.URIs.canonical_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#copy_go/1","title":"Bonfire.Common.URIs.copy_go/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#fallback/2","title":"Bonfire.Common.URIs.fallback/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#go_query/1","title":"Bonfire.Common.URIs.go_query/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#go_where?/3","title":"Bonfire.Common.URIs.go_where?/3","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#path/2","title":"Bonfire.Common.URIs.path/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#path_by_id/3","title":"Bonfire.Common.URIs.path_by_id/3","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#url/2","title":"Bonfire.Common.URIs.url/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#valid_go_path?/1","title":"Bonfire.Common.URIs.valid_go_path?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html","title":"Bonfire.Common.Utils","type":"module"},{"doc":"","ref":"Bonfire.Common.Utils.html#apply_error/3","title":"Bonfire.Common.Utils.apply_error/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assign_global/2","title":"Bonfire.Common.Utils.assign_global/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assign_global/3","title":"Bonfire.Common.Utils.assign_global/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assigns_clean/1","title":"Bonfire.Common.Utils.assigns_clean/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assigns_merge/2","title":"Bonfire.Common.Utils.assigns_merge/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assigns_merge/3","title":"Bonfire.Common.Utils.assigns_merge/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assigns_minimal/1","title":"Bonfire.Common.Utils.assigns_minimal/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#assigns_subscribe/2","title":"Bonfire.Common.Utils.assigns_subscribe/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#attr_get_id/2","title":"Bonfire.Common.Utils.attr_get_id/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#avatar_url/1","title":"Bonfire.Common.Utils.avatar_url/1","type":"function"},{"doc":"Warning: this will set assigns for any/all users who subscribe to them. You want to cast_self/2 instead if dealing with user-specific actions or private data.","ref":"Bonfire.Common.Utils.html#cast_public/2","title":"Bonfire.Common.Utils.cast_public/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#cast_self/2","title":"Bonfire.Common.Utils.cast_self/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_account/1","title":"Bonfire.Common.Utils.current_account/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_account_and_or_user_ids/1","title":"Bonfire.Common.Utils.current_account_and_or_user_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_user/1","title":"Bonfire.Common.Utils.current_user/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#date_from_now/1","title":"Bonfire.Common.Utils.date_from_now/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#date_from_pointer/1","title":"Bonfire.Common.Utils.date_from_pointer/1","type":"function"},{"doc":"recursively merge maps or lists","ref":"Bonfire.Common.Utils.html#deep_merge/2","title":"Bonfire.Common.Utils.deep_merge/2","type":"function"},{"doc":"Returns a value, or a fallback if nil/false","ref":"Bonfire.Common.Utils.html#e/2","title":"Bonfire.Common.Utils.e/2","type":"function"},{"doc":"Returns a value from a map, or a fallback if not present","ref":"Bonfire.Common.Utils.html#e/3","title":"Bonfire.Common.Utils.e/3","type":"function"},{"doc":"Returns a value from a nested map, or a fallback if not present","ref":"Bonfire.Common.Utils.html#e/4","title":"Bonfire.Common.Utils.e/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/5","title":"Bonfire.Common.Utils.e/5","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/6","title":"Bonfire.Common.Utils.e/6","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#error_msg/1","title":"Bonfire.Common.Utils.error_msg/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#external_links/1","title":"Bonfire.Common.Utils.external_links/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#filter_empty/2","title":"Bonfire.Common.Utils.filter_empty/2","type":"function"},{"doc":"Flattens a list by recursively flattening the head and tail of the list","ref":"Bonfire.Common.Utils.html#flatter/1","title":"Bonfire.Common.Utils.flatter/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#image_url/1","title":"Bonfire.Common.Utils.image_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#input_to_atoms/1","title":"Bonfire.Common.Utils.input_to_atoms/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#is_html?/1","title":"Bonfire.Common.Utils.is_html?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#is_numeric/1","title":"Bonfire.Common.Utils.is_numeric/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#is_ulid?/1","title":"Bonfire.Common.Utils.is_ulid?/1","type":"function"},{"doc":"Special LiveView helper function which allows loading LiveComponents in regular Phoenix views: live_render_component(@conn, MyLiveComponent)","ref":"Bonfire.Common.Utils.html#live_render_component/2","title":"Bonfire.Common.Utils.live_render_component/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#live_render_with_conn/2","title":"Bonfire.Common.Utils.live_render_with_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#macro_inspect/1","title":"Bonfire.Common.Utils.macro_inspect/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#magic_filter_empty/4","title":"Bonfire.Common.Utils.magic_filter_empty/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_error/2","title":"Bonfire.Common.Utils.map_error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_filter_empty/1","title":"Bonfire.Common.Utils.map_filter_empty/1","type":"function"},{"doc":"Attempt geting a value out of a map by atom key, or try with string key, or return a fallback","ref":"Bonfire.Common.Utils.html#map_get/3","title":"Bonfire.Common.Utils.map_get/3","type":"function"},{"doc":"Rename a key in a map","ref":"Bonfire.Common.Utils.html#map_key_replace/4","title":"Bonfire.Common.Utils.map_key_replace/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_key_replace_existing/4","title":"Bonfire.Common.Utils.map_key_replace_existing/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#markdown/1","title":"Bonfire.Common.Utils.markdown/1","type":"function"},{"doc":"Applies change_fn if the first parameter is not nil.","ref":"Bonfire.Common.Utils.html#maybe/2","title":"Bonfire.Common.Utils.maybe/2","type":"function"},{"doc":"Append an item to a list if it is not nil","ref":"Bonfire.Common.Utils.html#maybe_append/2","title":"Bonfire.Common.Utils.maybe_append/2","type":"function"},{"doc":"Helpers for calling hypothetical functions in other modules","ref":"Bonfire.Common.Utils.html#maybe_apply/4","title":"Bonfire.Common.Utils.maybe_apply/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_convert_ulids/1","title":"Bonfire.Common.Utils.maybe_convert_ulids/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_flatten/1","title":"Bonfire.Common.Utils.maybe_flatten/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_from_struct/1","title":"Bonfire.Common.Utils.maybe_from_struct/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_get/3","title":"Bonfire.Common.Utils.maybe_get/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_get_id/1","title":"Bonfire.Common.Utils.maybe_get_id/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_list/2","title":"Bonfire.Common.Utils.maybe_list/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_merge_to_struct/2","title":"Bonfire.Common.Utils.maybe_merge_to_struct/2","type":"function"},{"doc":"Applies change_fn if the first parameter is an {:ok, val} tuple, else returns the value","ref":"Bonfire.Common.Utils.html#maybe_ok_error/2","title":"Bonfire.Common.Utils.maybe_ok_error/2","type":"function"},{"doc":"conditionally update a map","ref":"Bonfire.Common.Utils.html#maybe_put/3","title":"Bonfire.Common.Utils.maybe_put/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_str_to_atom/1","title":"Bonfire.Common.Utils.maybe_str_to_atom/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_str_to_atom!/1","title":"Bonfire.Common.Utils.maybe_str_to_atom!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_str_to_module/1","title":"Bonfire.Common.Utils.maybe_str_to_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_map/2","title":"Bonfire.Common.Utils.maybe_to_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_snake/1","title":"Bonfire.Common.Utils.maybe_to_snake/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_snake_atom/1","title":"Bonfire.Common.Utils.maybe_to_snake_atom/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_string/1","title":"Bonfire.Common.Utils.maybe_to_string/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_struct/2","title":"Bonfire.Common.Utils.maybe_to_struct/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_structs/1","title":"Bonfire.Common.Utils.maybe_to_structs/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#md/1","title":"Bonfire.Common.Utils.md/1","type":"function"},{"doc":"See Bonfire.Common.Extend.module_enabled?/1 .","ref":"Bonfire.Common.Utils.html#module_enabled?/1","title":"Bonfire.Common.Utils.module_enabled?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#nested_structs_to_maps/1","title":"Bonfire.Common.Utils.nested_structs_to_maps/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ok/2","title":"Bonfire.Common.Utils.ok/2","type":"function"},{"doc":"Broadcast some data for realtime updates, for example to a feed or thread","ref":"Bonfire.Common.Utils.html#pubsub_broadcast/2","title":"Bonfire.Common.Utils.pubsub_broadcast/2","type":"function"},{"doc":"Subscribe to something for realtime updates, like a feed or thread","ref":"Bonfire.Common.Utils.html#pubsub_subscribe/2","title":"Bonfire.Common.Utils.pubsub_subscribe/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#put_new_in/3","title":"Bonfire.Common.Utils.put_new_in/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#r/1","title":"Bonfire.Common.Utils.r/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#random_string/1","title":"Bonfire.Common.Utils.random_string/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#replace_error/2","title":"Bonfire.Common.Utils.replace_error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#replace_nil/2","title":"Bonfire.Common.Utils.replace_nil/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#rich/1","title":"Bonfire.Common.Utils.rich/1","type":"function"},{"doc":"Subscribe to assigns targeted at the current account/user","ref":"Bonfire.Common.Utils.html#self_subscribe/2","title":"Bonfire.Common.Utils.self_subscribe/2","type":"function"},{"doc":"Convert map atom keys to strings","ref":"Bonfire.Common.Utils.html#stringify_keys/2","title":"Bonfire.Common.Utils.stringify_keys/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#strlen/1","title":"Bonfire.Common.Utils.strlen/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#struct_from_map/2","title":"Bonfire.Common.Utils.struct_from_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#struct_to_map/1","title":"Bonfire.Common.Utils.struct_to_map/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#text_only/1","title":"Bonfire.Common.Utils.text_only/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#to_number/1","title":"Bonfire.Common.Utils.to_number/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ulid/1","title":"Bonfire.Common.Utils.ulid/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#undead/3","title":"Bonfire.Common.Utils.undead/3","type":"function"},{"doc":"Run a function and expects tuple. If anything else is returned, like an error, a flash message is shown to the user.","ref":"Bonfire.Common.Utils.html#undead_mount/2","title":"Bonfire.Common.Utils.undead_mount/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#undead_params/2","title":"Bonfire.Common.Utils.undead_params/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ComponentID.html","title":"Bonfire.Common.Web.ComponentID","type":"module"},{"doc":"","ref":"Bonfire.Common.Web.ComponentID.html#ids/2","title":"Bonfire.Common.Web.ComponentID.ids/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ComponentID.html#new/2","title":"Bonfire.Common.Web.ComponentID.new/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ComponentID.html#send_assigns/4","title":"Bonfire.Common.Web.ComponentID.send_assigns/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ComponentID.html#send_updates/3","title":"Bonfire.Common.Web.ComponentID.send_updates/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ContentAreas.html","title":"Bonfire.Common.Web.ContentAreas","type":"module"},{"doc":"Returns HTML-safe string if type is :html or just a string if :text . These are basic fallbacks in case Publisher:Thesis extension is not present. In future, this can also be extended for content localisation. see https://github.com/infinitered/thesis-phoenix/blob/master/lib/thesis/view.ex#L32 Examples &lt; % = content ( @conn , &quot;Title&quot; , :text , do : &quot;Default Title&quot; ) % &gt; &lt; % = content ( @conn , &quot;Description&quot; , :html ) do % &gt; &lt; p &gt; Default description &lt; / p &gt; &lt; p &gt; Another paragraph &lt; / p &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Description&quot; , :html , classes : &quot;more classes&quot; ) do % &gt; &lt; p &gt; Default description &lt; / p &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Section identifier&quot; , :raw_html ) do % &gt; &lt; iframe width = &quot;560&quot; height = &quot;315&quot; src = &quot;https://www.youtube.com/embed/5SVLs_NN_uY&quot; frameborder = &quot;0&quot; allowfullscreen &gt; &lt; / iframe &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Image identifier&quot; , :image , alt : &quot;My alt tag&quot; , do : &quot;http://placekitten.com/200/300&quot; ) % &gt;","ref":"Bonfire.Common.Web.ContentAreas.html#content/4","title":"Bonfire.Common.Web.ContentAreas.content/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ContentAreas.html#content/5","title":"Bonfire.Common.Web.ContentAreas.content/5","type":"function"},{"doc":"Returns a keyword list of meta attributes from the serialized data. Doctests: iex&gt; m = % Thesis.PageContent { meta : ~S({&quot;test&quot;:&quot;Thing&quot;, &quot;test2&quot;:&quot;123&quot;}) } iex&gt; Thesis.PageContent . meta_attributes ( m ) %{ test : &quot;Thing&quot; , test2 : &quot;123&quot; }","ref":"Bonfire.Common.Web.ContentAreas.html#meta_attributes/1","title":"Bonfire.Common.Web.ContentAreas.meta_attributes/1","type":"function"},{"doc":"Returns a serialized string, given a map, for storage in the meta field. Doctests: iex&gt; m = %{ test : &quot;Thing&quot; , test2 : &quot;123&quot; } iex&gt; Thesis.PageContent . meta_serialize ( m ) ~S({&quot;test2&quot;:&quot;123&quot;,&quot;test&quot;:&quot;Thing&quot;})","ref":"Bonfire.Common.Web.ContentAreas.html#meta_serialize/1","title":"Bonfire.Common.Web.ContentAreas.meta_serialize/1","type":"function"},{"doc":"Renders editable page content, based on the content_type. Available content types: html: WYSIWYG editor, standard HTML output (sanitized) raw_html: Edit the HTML directly, not sanitized -- use carefully text: Raw text, all HTML is escaped, basic contenteditable image: Displays an image, can edit the URL and alt tag background_image: Displays an image as a background image on a div, can edit the URL","ref":"Bonfire.Common.Web.ContentAreas.Render.html","title":"Bonfire.Common.Web.ContentAreas.Render","type":"module"},{"doc":"","ref":"Bonfire.Common.Web.ContentAreas.Render.html#escape_entities/1","title":"Bonfire.Common.Web.ContentAreas.Render.escape_entities/1","type":"function"},{"doc":"Removes special characters, keeps dashes and underscores, and replaces spaces with dashes. Also downcases the entire string. iex&gt; import Thesis.Utilities iex&gt; parameterize ( &quot;Jamon is so cool!&quot; ) &quot;jamon-is-so-cool&quot; iex&gt; parameterize ( &quot;%#d50SDF dfsJ FDS lkdsf f dfka a&quot; ) &quot;d50sdf-dfsj-fds--lkdsf-f-dfka---a&quot; iex&gt; parameterize ( :this_is_a_test ) &quot;this-is-a-test&quot;","ref":"Bonfire.Common.Web.ContentAreas.Render.html#parameterize/1","title":"Bonfire.Common.Web.ContentAreas.Render.parameterize/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.DiffRenderView.html","title":"Bonfire.Common.Web.DiffRenderView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.Common.Web.DiffRenderView.html#__resource__/0","title":"Bonfire.Common.Web.DiffRenderView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.Common.Web.DiffRenderView.html#render/2","title":"Bonfire.Common.Web.DiffRenderView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.Common.Web.DiffRenderView.html#template_not_found/2","title":"Bonfire.Common.Web.DiffRenderView.template_not_found/2","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"Bonfire.Common.Web.ErrorHelpers.html","title":"Bonfire.Common.Web.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"Bonfire.Common.Web.ErrorHelpers.html#error_tag/2","title":"Bonfire.Common.Web.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"Bonfire.Common.Web.ErrorHelpers.html#translate_error/1","title":"Bonfire.Common.Web.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ErrorLive.html","title":"Bonfire.Common.Web.ErrorLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Common.Web.ErrorLive.html#handle_event/3","title":"Bonfire.Common.Web.ErrorLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Common.Web.ErrorLive.html#handle_info/2","title":"Bonfire.Common.Web.ErrorLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Common.Web.ErrorLive.html#handle_params/3","title":"Bonfire.Common.Web.ErrorLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Common.Web.ErrorLive.html#mount/3","title":"Bonfire.Common.Web.ErrorLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Common.Web.ErrorLive.html#render/1","title":"Bonfire.Common.Web.ErrorLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Web.ExtensionDiffLive.html","title":"Bonfire.Common.Web.ExtensionDiffLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Common.Web.ExtensionDiffLive.html#mount/3","title":"Bonfire.Common.Web.ExtensionDiffLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Common.Web.ExtensionDiffLive.html#render/1","title":"Bonfire.Common.Web.ExtensionDiffLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any notification :any","ref":"Bonfire.Common.Web.NotificationLive.html","title":"Bonfire.Common.Web.NotificationLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Common.Web.NotificationLive.html#mount/1","title":"Bonfire.Common.Web.NotificationLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Common.Web.NotificationLive.html#render/1","title":"Bonfire.Common.Web.NotificationLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Notifications.html","title":"Bonfire.Notifications","type":"module"},{"doc":"","ref":"Bonfire.Notifications.html#do_notify/2","title":"Bonfire.Notifications.do_notify/2","type":"function"},{"doc":"","ref":"Bonfire.Notifications.html#notify/3","title":"Bonfire.Notifications.notify/3","type":"function"},{"doc":"","ref":"Bonfire.Notifications.html#notify_users/3","title":"Bonfire.Notifications.notify_users/3","type":"function"},{"doc":"","ref":"Bonfire.Notifications.html#process_state/1","title":"Bonfire.Notifications.process_state/1","type":"function"},{"doc":"","ref":"Bonfire.Notifications.LiveHandler.html","title":"Bonfire.Notifications.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Notifications.LiveHandler.html#handle_event/3","title":"Bonfire.Notifications.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Notifications.LiveHandler.html#handle_info/2","title":"Bonfire.Notifications.LiveHandler.handle_info/2","type":"function"},{"doc":"Ecto Repo and related common functions","ref":"Bonfire.Repo.html","title":"Bonfire.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Bonfire.Repo.html#aggregate/3","title":"Bonfire.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Bonfire.Repo.html#aggregate/4","title":"Bonfire.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Bonfire.Repo.html#all/2","title":"Bonfire.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Bonfire.Repo.html#checked_out?/0","title":"Bonfire.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Bonfire.Repo.html#checkout/2","title":"Bonfire.Repo.checkout/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#child_spec/1","title":"Bonfire.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Bonfire.Repo.html#config/0","title":"Bonfire.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Bonfire.Repo.html#default_options/1","title":"Bonfire.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Bonfire.Repo.html#delete/2","title":"Bonfire.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Bonfire.Repo.html#delete!/2","title":"Bonfire.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Bonfire.Repo.html#delete_all/2","title":"Bonfire.Repo.delete_all/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#delete_many/1","title":"Bonfire.Repo.delete_many/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Bonfire.Repo.html#exists?/2","title":"Bonfire.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Bonfire.Repo.html#explain/3","title":"Bonfire.Repo.explain/3","type":"function"},{"doc":"Like Repo.get, but returns an ok/error tuple","ref":"Bonfire.Repo.html#fetch/2","title":"Bonfire.Repo.fetch/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#fetch_all/2","title":"Bonfire.Repo.fetch_all/2","type":"function"},{"doc":"Like Repo.get_by, but returns an ok/error tuple","ref":"Bonfire.Repo.html#fetch_by/2","title":"Bonfire.Repo.fetch_by/2","type":"function"},{"doc":"Like Repo.single, except on failure, adds an error to the changeset","ref":"Bonfire.Repo.html#find/3","title":"Bonfire.Repo.find/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Bonfire.Repo.html#get/3","title":"Bonfire.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Bonfire.Repo.html#get!/3","title":"Bonfire.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Bonfire.Repo.html#get_by/3","title":"Bonfire.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Bonfire.Repo.html#get_by!/3","title":"Bonfire.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Bonfire.Repo.html#get_dynamic_repo/0","title":"Bonfire.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Bonfire.Repo.html#in_transaction?/0","title":"Bonfire.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Bonfire.Repo.html#insert/2","title":"Bonfire.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Bonfire.Repo.html#insert!/2","title":"Bonfire.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Bonfire.Repo.html#insert_all/3","title":"Bonfire.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Bonfire.Repo.html#insert_or_update/2","title":"Bonfire.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Bonfire.Repo.html#insert_or_update!/2","title":"Bonfire.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Bonfire.Repo.html#load/2","title":"Bonfire.Repo.load/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#many/2","title":"Bonfire.Repo.many/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#many_paginated/3","title":"Bonfire.Repo.many_paginated/3","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#maybe_preload/3","title":"Bonfire.Repo.maybe_preload/3","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#maybe_preloads_per_nested_schema/4","title":"Bonfire.Repo.maybe_preloads_per_nested_schema/4","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#maybe_preloads_per_schema/3","title":"Bonfire.Repo.maybe_preloads_per_schema/3","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#maybe_preloads_per_schema/4","title":"Bonfire.Repo.maybe_preloads_per_schema/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Bonfire.Repo.html#one/2","title":"Bonfire.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Bonfire.Repo.html#one!/2","title":"Bonfire.Repo.one!/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#paginate/3","title":"Bonfire.Repo.paginate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Bonfire.Repo.html#preload/3","title":"Bonfire.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Bonfire.Repo.html#prepare_query/3","title":"Bonfire.Repo.prepare_query/3","type":"function"},{"doc":"Like insert/1 , but understands remapping changeset errors to attr names from config (and only config, no overrides at present!)","ref":"Bonfire.Repo.html#put/1","title":"Bonfire.Repo.put/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Bonfire.Repo.html#put_dynamic_repo/1","title":"Bonfire.Repo.put_dynamic_repo/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#put_many/1","title":"Bonfire.Repo.put_many/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Bonfire.Repo.html#query/3","title":"Bonfire.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Bonfire.Repo.html#query!/3","title":"Bonfire.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Bonfire.Repo.html#reload/2","title":"Bonfire.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Bonfire.Repo.html#reload!/2","title":"Bonfire.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Bonfire.Repo.html#rollback/1","title":"Bonfire.Repo.rollback/1","type":"function"},{"doc":"Like Repo.one, but returns an ok/error tuple.","ref":"Bonfire.Repo.html#single/1","title":"Bonfire.Repo.single/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Bonfire.Repo.html#start_link/1","title":"Bonfire.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Bonfire.Repo.html#stop/1","title":"Bonfire.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Bonfire.Repo.html#stream/2","title":"Bonfire.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Bonfire.Repo.html#to_sql/2","title":"Bonfire.Repo.to_sql/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#transact_many/1","title":"Bonfire.Repo.transact_many/1","type":"function"},{"doc":"Run a transaction, similar to Repo.transaction/1 , but it expects an ok or error tuple. If an error tuple is returned, the transaction is aborted.","ref":"Bonfire.Repo.html#transact_with/1","title":"Bonfire.Repo.transact_with/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Bonfire.Repo.html#transaction/2","title":"Bonfire.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Bonfire.Repo.html#update/2","title":"Bonfire.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Bonfire.Repo.html#update!/2","title":"Bonfire.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Bonfire.Repo.html#update_all/3","title":"Bonfire.Repo.update_all/3","type":"function"},{"doc":"","ref":"Bonfire.Repo.html#upsert/1","title":"Bonfire.Repo.upsert/1","type":"function"},{"doc":"Helper functions for changesets","ref":"Bonfire.Repo.Changeset.html","title":"Bonfire.Repo.Changeset","type":"module"},{"doc":"Keeps disabled_at in accord with is_disabled","ref":"Bonfire.Repo.Changeset.html#change_disabled/1","title":"Bonfire.Repo.Changeset.change_disabled/1","type":"function"},{"doc":"Keeps muted_at in accord with is_muted","ref":"Bonfire.Repo.Changeset.html#change_muted/1","title":"Bonfire.Repo.Changeset.change_muted/1","type":"function"},{"doc":"Keeps published_at in accord with is_public","ref":"Bonfire.Repo.Changeset.html#change_public/1","title":"Bonfire.Repo.Changeset.change_public/1","type":"function"},{"doc":"If a changeset includes a change to bool_field , we ensure that the timestamp field is updated if required. In the case of true, this means setting it to now if it is null and in the case of false, this means setting it to null if it is not null.","ref":"Bonfire.Repo.Changeset.html#change_synced_timestamp/3","title":"Bonfire.Repo.Changeset.change_synced_timestamp/3","type":"function"},{"doc":"If a changeset includes a change to bool_field , we change two timestamps columns (representing activated and deactivated) so that only one is set to a non-null value at a time.","ref":"Bonfire.Repo.Changeset.html#change_synced_timestamps/5","title":"Bonfire.Repo.Changeset.change_synced_timestamps/5","type":"function"},{"doc":"Creates a changeset for claiming an entity","ref":"Bonfire.Repo.Changeset.html#claim_changeset/3","title":"Bonfire.Repo.Changeset.claim_changeset/3","type":"function"},{"doc":"Creates a changeset for deleting an entity","ref":"Bonfire.Repo.Changeset.html#soft_delete_changeset/3","title":"Bonfire.Repo.Changeset.soft_delete_changeset/3","type":"function"},{"doc":"Validates an email for correctness","ref":"Bonfire.Repo.Changeset.html#validate_email/2","title":"Bonfire.Repo.Changeset.validate_email/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.Changeset.html#validate_email_domain/2","title":"Bonfire.Repo.Changeset.validate_email_domain/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.Changeset.html#validate_exactly_one/3","title":"Bonfire.Repo.Changeset.validate_exactly_one/3","type":"function"},{"doc":"Validates that a URL uses HTTP(S) and has a correct format.","ref":"Bonfire.Repo.Changeset.html#validate_http_url/2","title":"Bonfire.Repo.Changeset.validate_http_url/2","type":"function"},{"doc":"Validates that the entity has not expired","ref":"Bonfire.Repo.Changeset.html#validate_not_expired/4","title":"Bonfire.Repo.Changeset.validate_not_expired/4","type":"function"},{"doc":"","ref":"Bonfire.Repo.ChangesetErrors.html","title":"Bonfire.Repo.ChangesetErrors","type":"module"},{"doc":"","ref":"Bonfire.Repo.ChangesetErrors.html#changeset_errors_string/2","title":"Bonfire.Repo.ChangesetErrors.changeset_errors_string/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.ChangesetErrors.html#cs_to_string/1","title":"Bonfire.Repo.ChangesetErrors.cs_to_string/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.ChangesetErrors.html#errors_map_string/2","title":"Bonfire.Repo.ChangesetErrors.errors_map_string/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.Delete.html","title":"Bonfire.Repo.Delete","type":"module"},{"doc":"","ref":"Bonfire.Repo.Delete.html#deletion_result/1","title":"Bonfire.Repo.Delete.deletion_result/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.Delete.html#deletion_result!/1","title":"Bonfire.Repo.Delete.deletion_result!/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.Delete.html#federation_module/0","title":"Bonfire.Repo.Delete.federation_module/0","type":"function"},{"doc":"Actually deletes an entry from the database","ref":"Bonfire.Repo.Delete.html#hard_delete/1","title":"Bonfire.Repo.Delete.hard_delete/1","type":"function"},{"doc":"Deletes an entry from the database, or throws an error","ref":"Bonfire.Repo.Delete.html#hard_delete!/1","title":"Bonfire.Repo.Delete.hard_delete!/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.Delete.html#maybe_allow_delete?/2","title":"Bonfire.Repo.Delete.maybe_allow_delete?/2","type":"function"},{"doc":"Just marks an entry as deleted in the database","ref":"Bonfire.Repo.Delete.html#soft_delete/1","title":"Bonfire.Repo.Delete.soft_delete/1","type":"function"},{"doc":"Marks an entry as deleted in the database or throws an error","ref":"Bonfire.Repo.Delete.html#soft_delete!/1","title":"Bonfire.Repo.Delete.soft_delete!/1","type":"function"},{"doc":"Log slow Ecto queries, with stacktrace to the code which called them Usage: wrap your calls to Repo functions that execute SQL you want to trace in: trace(fn -&gt; # Repo call here end)","ref":"Bonfire.Repo.LogSlow.html","title":"Bonfire.Repo.LogSlow","type":"module"},{"doc":"","ref":"Bonfire.Repo.LogSlow.html#handle_event/4","title":"Bonfire.Repo.LogSlow.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.Repo.LogSlow.html#setup/0","title":"Bonfire.Repo.LogSlow.setup/0","type":"function"},{"doc":"","ref":"Bonfire.Repo.LogSlow.html#trace/3","title":"Bonfire.Repo.LogSlow.trace/3","type":"function"},{"doc":"","ref":"Bonfire.Repo.Query.html","title":"Bonfire.Repo.Query","type":"module"},{"doc":"","ref":"Bonfire.Repo.Query.html#filter/2","title":"Bonfire.Repo.Query.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.Query.html#match_admin/0","title":"Bonfire.Repo.Query.match_admin/0","type":"macro"},{"doc":"","ref":"Bonfire.Repo.Query.html#order_by_recently_updated/1","title":"Bonfire.Repo.Query.order_by_recently_updated/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.Query.html#unroll/2","title":"Bonfire.Repo.Query.unroll/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html","title":"Bonfire.Repo.ReleaseTasks","type":"module"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#migrate/0","title":"Bonfire.Repo.ReleaseTasks.migrate/0","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#migrate/1","title":"Bonfire.Repo.ReleaseTasks.migrate/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#rollback/2","title":"Bonfire.Repo.ReleaseTasks.rollback/2","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#rollback_all/0","title":"Bonfire.Repo.ReleaseTasks.rollback_all/0","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#rollback_all/1","title":"Bonfire.Repo.ReleaseTasks.rollback_all/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#rollback_to/1","title":"Bonfire.Repo.ReleaseTasks.rollback_to/1","type":"function"},{"doc":"","ref":"Bonfire.Repo.ReleaseTasks.html#rollback_to/2","title":"Bonfire.Repo.ReleaseTasks.rollback_to/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Gettext.html","title":"Bonfire.Web.Gettext","type":"module"},{"doc":"","ref":"Bonfire.Web.Gettext.html#default_locale/0","title":"Bonfire.Web.Gettext.default_locale/0","type":"function"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"Bonfire.Web.Gettext.html#dgettext/3","title":"Bonfire.Web.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"Bonfire.Web.Gettext.html#dgettext_noop/2","title":"Bonfire.Web.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"Bonfire.Web.Gettext.html#dngettext/5","title":"Bonfire.Web.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"Bonfire.Web.Gettext.html#dngettext_noop/3","title":"Bonfire.Web.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"Bonfire.Web.Gettext.html#dpgettext/4","title":"Bonfire.Web.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"Bonfire.Web.Gettext.html#dpgettext_noop/3","title":"Bonfire.Web.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"Bonfire.Web.Gettext.html#dpngettext/6","title":"Bonfire.Web.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"Bonfire.Web.Gettext.html#dpngettext_noop/4","title":"Bonfire.Web.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"Bonfire.Web.Gettext.html#gettext/2","title":"Bonfire.Web.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"Bonfire.Web.Gettext.html#gettext_comment/1","title":"Bonfire.Web.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"Bonfire.Web.Gettext.html#gettext_noop/1","title":"Bonfire.Web.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"Bonfire.Web.Gettext.html#handle_missing_bindings/2","title":"Bonfire.Web.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6 .","ref":"Bonfire.Web.Gettext.html#handle_missing_plural_translation/6","title":"Bonfire.Web.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4 .","ref":"Bonfire.Web.Gettext.html#handle_missing_translation/4","title":"Bonfire.Web.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Gettext.html#lgettext/5","title":"Bonfire.Web.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Gettext.html#lngettext/7","title":"Bonfire.Web.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"Bonfire.Web.Gettext.html#ngettext/4","title":"Bonfire.Web.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"Bonfire.Web.Gettext.html#ngettext_noop/2","title":"Bonfire.Web.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"Bonfire.Web.Gettext.html#pgettext/3","title":"Bonfire.Web.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"Bonfire.Web.Gettext.html#pgettext_noop/2","title":"Bonfire.Web.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"Bonfire.Web.Gettext.html#pngettext/5","title":"Bonfire.Web.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"Bonfire.Web.Gettext.html#pngettext_noop/3","title":"Bonfire.Web.Gettext.pngettext_noop/3","type":"macro"},{"doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import Bonfire.Web.Gettext # Simple translation usage : &lt; % = l ( &quot;Hello&quot; ) % &gt; &lt; % = l ( &quot;Hello %{name}&quot; , name : &quot;Bookchin&quot; ) % &gt; &lt; % = l ( &quot;Hi&quot; , [ ] , &quot;test context&quot; ) % &gt; output : Hello Hello Bookchin Hi # Plural translation usage : &lt; % = lp ( &quot;Hi friend&quot; , &quot;Hi friends&quot; , 2 ) % &gt; &lt; % = lp ( &quot;Hiya %{user_or_users}&quot; , &quot;Hiyas %{user_or_users}&quot; , 1 , [ user_or_users : &quot;Bookchin&quot; ] , &quot;test context&quot; ) % &gt; output : Hi friends Hiya Bookchin See the Gettext Docs for details.","ref":"Bonfire.Web.Gettext.Helpers.html","title":"Bonfire.Web.Gettext.Helpers","type":"module"},{"doc":"","ref":"Bonfire.Web.Gettext.Helpers.html#l/4","title":"Bonfire.Web.Gettext.Helpers.l/4","type":"macro"},{"doc":"","ref":"Bonfire.Web.Gettext.Helpers.html#lp/6","title":"Bonfire.Web.Gettext.Helpers.lp/6","type":"macro"},{"doc":"Special LiveView used for a helper function which allows loading LiveComponents in regular Phoenix views: live_render_component(@conn, MyLiveComponent)","ref":"Bonfire.Web.LiveComponent.html","title":"Bonfire.Web.LiveComponent","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Web.LiveComponent.html#mount/3","title":"Bonfire.Web.LiveComponent.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Web.LiveComponent.html#render/1","title":"Bonfire.Web.LiveComponent.render/1","type":"function"},{"doc":"Like a plug, but for a liveview","ref":"Bonfire.Web.LivePlugs.html","title":"Bonfire.Web.LivePlugs","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.html#live_plug/4","title":"Bonfire.Web.LivePlugs.live_plug/4","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.Csrf.html","title":"Bonfire.Web.LivePlugs.Csrf","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.Csrf.html#mount/3","title":"Bonfire.Web.LivePlugs.Csrf.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.Locale.html","title":"Bonfire.Web.LivePlugs.Locale","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.Locale.html#mount/3","title":"Bonfire.Web.LivePlugs.Locale.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.Locale.html#put_locale/2","title":"Bonfire.Web.LivePlugs.Locale.put_locale/2","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.StaticChanged.html","title":"Bonfire.Web.LivePlugs.StaticChanged","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.StaticChanged.html#mount/3","title":"Bonfire.Web.LivePlugs.StaticChanged.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.ActivityPub.html","title":"Bonfire.Web.Plugs.ActivityPub","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.ActivityPub.html#call/2","title":"Bonfire.Web.Plugs.ActivityPub.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.ActivityPub.html#init/1","title":"Bonfire.Web.Plugs.ActivityPub.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.ActivityPub.html#with_headers/3","title":"Bonfire.Web.Plugs.ActivityPub.with_headers/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.GuestOnly.html","title":"Bonfire.Web.Plugs.GuestOnly","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.GuestOnly.html#call/2","title":"Bonfire.Web.Plugs.GuestOnly.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.GuestOnly.html#init/1","title":"Bonfire.Web.Plugs.GuestOnly.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.Locale.html","title":"Bonfire.Web.Plugs.Locale","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.Locale.html#call/2","title":"Bonfire.Web.Plugs.Locale.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.Locale.html#extract_accept_language/1","title":"Bonfire.Web.Plugs.Locale.extract_accept_language/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.Locale.html#init/1","title":"Bonfire.Web.Plugs.Locale.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.Locale.html#put_locale/2","title":"Bonfire.Web.Plugs.Locale.put_locale/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.Error.html","title":"Bonfire.Common.Config.Error","type":"exception"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.html","title":"Bonfire.Data.AccessControl.Access","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.html#changeset/2","title":"Bonfire.Data.AccessControl.Access.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html","title":"Bonfire.Data.AccessControl.Access.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#create_access_table/0","title":"Bonfire.Data.AccessControl.Access.Migration.create_access_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#create_access_table/1","title":"Bonfire.Data.AccessControl.Access.Migration.create_access_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#drop_access_table/0","title":"Bonfire.Data.AccessControl.Access.Migration.drop_access_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#migrate_access/0","title":"Bonfire.Data.AccessControl.Access.Migration.migrate_access/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#migrate_access/1","title":"Bonfire.Data.AccessControl.Access.Migration.migrate_access/1","type":"macro"},{"doc":"A Global cache of known accesses to be queried by their (Pointer) IDs or name strings. Use of the Accesses Service requires: Exporting accesses/0 in relevant modules, returning a keylist of name and (pointer) id. Start Bonfire.Data.AccessControl.Accesses before querying. To populate :bonfire_data_access_control, :search_path in config the list of OTP applications where acceses are declared. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Data.AccessControl.Accesses.html","title":"Bonfire.Data.AccessControl.Accesses","type":"module"},{"doc":"Get a Access identified by name or id.","ref":"Bonfire.Data.AccessControl.Accesses.html#access/1","title":"Bonfire.Data.AccessControl.Accesses.access/1","type":"function"},{"doc":"Look up a Access by name or id, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Accesses.html#access!/1","title":"Bonfire.Data.AccessControl.Accesses.access!/1","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Data.AccessControl.Accesses.html#child_spec/1","title":"Bonfire.Data.AccessControl.Accesses.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Accesses.html#data/0","title":"Bonfire.Data.AccessControl.Accesses.data/0","type":"function"},{"doc":"Look up a access id by id, name or schema.","ref":"Bonfire.Data.AccessControl.Accesses.html#id/1","title":"Bonfire.Data.AccessControl.Accesses.id/1","type":"function"},{"doc":"Look up a access id by id, name or schema, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Accesses.html#id!/1","title":"Bonfire.Data.AccessControl.Accesses.id!/1","type":"function"},{"doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Data.AccessControl.Accesses.html#ids!/1","title":"Bonfire.Data.AccessControl.Accesses.ids!/1","type":"function"},{"doc":"Populates the global cache with access data via introspection.","ref":"Bonfire.Data.AccessControl.Accesses.html#start_link/1","title":"Bonfire.Data.AccessControl.Accesses.start_link/1","type":"function"},{"doc":"A query is either a access name atom or (Pointer) id binary","ref":"Bonfire.Data.AccessControl.Accesses.html#t:query/0","title":"Bonfire.Data.AccessControl.Accesses.query/0","type":"type"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.html","title":"Bonfire.Data.AccessControl.Acl","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.html#changeset/2","title":"Bonfire.Data.AccessControl.Acl.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html","title":"Bonfire.Data.AccessControl.Acl.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#create_acl_table/0","title":"Bonfire.Data.AccessControl.Acl.Migration.create_acl_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#create_acl_table/1","title":"Bonfire.Data.AccessControl.Acl.Migration.create_acl_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#drop_acl_table/0","title":"Bonfire.Data.AccessControl.Acl.Migration.drop_acl_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#migrate_acl/0","title":"Bonfire.Data.AccessControl.Acl.Migration.migrate_acl/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#migrate_acl/1","title":"Bonfire.Data.AccessControl.Acl.Migration.migrate_acl/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.html","title":"Bonfire.Data.AccessControl.Controlled","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.html#changeset/2","title":"Bonfire.Data.AccessControl.Controlled.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html","title":"Bonfire.Data.AccessControl.Controlled.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_acl_index/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_acl_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_table/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_table/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#drop_controlled_acl_index/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.drop_controlled_acl_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#drop_controlled_table/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.drop_controlled_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#migrate_controlled/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.migrate_controlled/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#migrate_controlled/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.migrate_controlled/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.html","title":"Bonfire.Data.AccessControl.Grant","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.html#changeset/2","title":"Bonfire.Data.AccessControl.Grant.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html","title":"Bonfire.Data.AccessControl.Grant.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_access_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_access_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_subject_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_subject_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_table/0","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_table/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_unique_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_access_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_access_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_subject_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_subject_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_table/0","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_unique_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#migrate_grant/0","title":"Bonfire.Data.AccessControl.Grant.Migration.migrate_grant/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#migrate_grant/1","title":"Bonfire.Data.AccessControl.Grant.Migration.migrate_grant/1","type":"macro"},{"doc":"A mixin for superpowers","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html","title":"Bonfire.Data.AccessControl.InstanceAdmin","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html#changeset/3","title":"Bonfire.Data.AccessControl.InstanceAdmin.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#create_instance_admin_table/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.create_instance_admin_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#create_instance_admin_table/1","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.create_instance_admin_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#drop_instance_admin_table/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.drop_instance_admin_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#migrate_instance_admin/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.migrate_instance_admin/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#migrate_instance_admin/1","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.migrate_instance_admin/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.html","title":"Bonfire.Data.AccessControl.Interact","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.html#changeset/2","title":"Bonfire.Data.AccessControl.Interact.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html","title":"Bonfire.Data.AccessControl.Interact.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#create_interact_table/0","title":"Bonfire.Data.AccessControl.Interact.Migration.create_interact_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#create_interact_table/1","title":"Bonfire.Data.AccessControl.Interact.Migration.create_interact_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#create_interact_unique_index/1","title":"Bonfire.Data.AccessControl.Interact.Migration.create_interact_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#create_interact_verb_index/1","title":"Bonfire.Data.AccessControl.Interact.Migration.create_interact_verb_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#drop_interact_table/0","title":"Bonfire.Data.AccessControl.Interact.Migration.drop_interact_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#drop_interact_unique_index/1","title":"Bonfire.Data.AccessControl.Interact.Migration.drop_interact_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#drop_interact_verb_index/1","title":"Bonfire.Data.AccessControl.Interact.Migration.drop_interact_verb_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#migrate_interact/0","title":"Bonfire.Data.AccessControl.Interact.Migration.migrate_interact/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Interact.Migration.html#migrate_interact/1","title":"Bonfire.Data.AccessControl.Interact.Migration.migrate_interact/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.html","title":"Bonfire.Data.AccessControl.Verb","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.html#changeset/2","title":"Bonfire.Data.AccessControl.Verb.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html","title":"Bonfire.Data.AccessControl.Verb.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_table/0","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_table/1","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_verb_index/1","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_verb_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#drop_verb_table/0","title":"Bonfire.Data.AccessControl.Verb.Migration.drop_verb_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#drop_verb_verb_index/1","title":"Bonfire.Data.AccessControl.Verb.Migration.drop_verb_verb_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#migrate_verb/0","title":"Bonfire.Data.AccessControl.Verb.Migration.migrate_verb/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#migrate_verb/1","title":"Bonfire.Data.AccessControl.Verb.Migration.migrate_verb/1","type":"macro"},{"doc":"A Global cache of known verbs to be queried by their (Pointer) IDs or name strings. Use of the Verbs Service requires: Exporting declare_verbs/0 in relevant modules, returning a keylist of name and (pointer) id. To populate :bonfire_data_access_control, :search_path in config the list of OTP applications where verbs are declared. Start the Bonfire.Data.AccessControl.Verbs application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Data.AccessControl.Verbs.html","title":"Bonfire.Data.AccessControl.Verbs","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Data.AccessControl.Verbs.html#child_spec/1","title":"Bonfire.Data.AccessControl.Verbs.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verbs.html#data/0","title":"Bonfire.Data.AccessControl.Verbs.data/0","type":"function"},{"doc":"Look up a verb id by id, name or schema.","ref":"Bonfire.Data.AccessControl.Verbs.html#id/1","title":"Bonfire.Data.AccessControl.Verbs.id/1","type":"function"},{"doc":"Look up a verb id by id, name or schema, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Verbs.html#id!/1","title":"Bonfire.Data.AccessControl.Verbs.id!/1","type":"function"},{"doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Data.AccessControl.Verbs.html#ids!/1","title":"Bonfire.Data.AccessControl.Verbs.ids!/1","type":"function"},{"doc":"Populates the global cache with verb data via introspection.","ref":"Bonfire.Data.AccessControl.Verbs.html#start_link/1","title":"Bonfire.Data.AccessControl.Verbs.start_link/1","type":"function"},{"doc":"Get a Verb identified by name or id.","ref":"Bonfire.Data.AccessControl.Verbs.html#verb/1","title":"Bonfire.Data.AccessControl.Verbs.verb/1","type":"function"},{"doc":"Look up a Verb by name or id, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Verbs.html#verb!/1","title":"Bonfire.Data.AccessControl.Verbs.verb!/1","type":"function"},{"doc":"A query is either a verb name atom or (Pointer) id binary","ref":"Bonfire.Data.AccessControl.Verbs.html#t:query/0","title":"Bonfire.Data.AccessControl.Verbs.query/0","type":"type"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html","title":"Bonfire.Data.ActivityPub.Actor","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html#changeset/2","title":"Bonfire.Data.ActivityPub.Actor.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html","title":"Bonfire.Data.ActivityPub.Actor.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/1","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#drop_actor_table/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.drop_actor_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/1","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.html","title":"Bonfire.Data.ActivityPub.Peer","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.html#changeset/3","title":"Bonfire.Data.ActivityPub.Peer.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html","title":"Bonfire.Data.ActivityPub.Peer.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_ap_base_uri_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_ap_base_uri_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_display_hostname_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_display_hostname_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_table/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_table/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_ap_base_uri_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_ap_base_uri_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_display_hostname_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_display_hostname_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_table/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#migrate_peer/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.migrate_peer/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#migrate_peer/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.migrate_peer/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.html","title":"Bonfire.Data.ActivityPub.Peered","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.html#changeset/3","title":"Bonfire.Data.ActivityPub.Peered.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html","title":"Bonfire.Data.ActivityPub.Peered.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_peer_index/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_peer_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_table/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_table/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#drop_peered_peer_index/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.drop_peered_peer_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#drop_peered_table/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.drop_peered_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#migrate_peered/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.migrate_peered/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#migrate_peered/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.migrate_peered/1","type":"macro"},{"doc":"An account is an identity for authentication purposes. An account has one or more credentials with which it may identify.","ref":"Bonfire.Data.Identity.Account.html","title":"Bonfire.Data.Identity.Account","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Account.html#changeset/2","title":"Bonfire.Data.Identity.Account.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html","title":"Bonfire.Data.Identity.Account.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#create_account_table/0","title":"Bonfire.Data.Identity.Account.Migration.create_account_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#create_account_table/1","title":"Bonfire.Data.Identity.Account.Migration.create_account_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#drop_account_table/0","title":"Bonfire.Data.Identity.Account.Migration.drop_account_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#migrate_account/0","title":"Bonfire.Data.Identity.Account.Migration.migrate_account/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#migrate_account/1","title":"Bonfire.Data.Identity.Account.Migration.migrate_account/1","type":"macro"},{"doc":"A mixin for an account ID, indicating ownership Primarily used for Users.","ref":"Bonfire.Data.Identity.Accounted.html","title":"Bonfire.Data.Identity.Accounted","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.html#changeset/2","title":"Bonfire.Data.Identity.Accounted.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html","title":"Bonfire.Data.Identity.Accounted.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_account_index/1","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_account_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_table/0","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_table/1","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#drop_accounted_account_index/1","title":"Bonfire.Data.Identity.Accounted.Migration.drop_accounted_account_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#drop_accounted_table/0","title":"Bonfire.Data.Identity.Accounted.Migration.drop_accounted_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#migrate_accounted/0","title":"Bonfire.Data.Identity.Accounted.Migration.migrate_accounted/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#migrate_accounted/1","title":"Bonfire.Data.Identity.Accounted.Migration.migrate_accounted/1","type":"macro"},{"doc":"The entity responsible for something.","ref":"Bonfire.Data.Identity.Caretaker.html","title":"Bonfire.Data.Identity.Caretaker","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.html#changeset/3","title":"Bonfire.Data.Identity.Caretaker.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html","title":"Bonfire.Data.Identity.Caretaker.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_caretaker_index/1","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_caretaker_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_table/0","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_table/1","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#drop_caretaker_caretaker_index/1","title":"Bonfire.Data.Identity.Caretaker.Migration.drop_caretaker_caretaker_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#drop_caretaker_table/0","title":"Bonfire.Data.Identity.Caretaker.Migration.drop_caretaker_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#migrate_caretaker/0","title":"Bonfire.Data.Identity.Caretaker.Migration.migrate_caretaker/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#migrate_caretaker/1","title":"Bonfire.Data.Identity.Caretaker.Migration.migrate_caretaker/1","type":"macro"},{"doc":"A username mixin that denies reuse of the same or similar usernames even when the username has been deleted. FIXME: is the below still the case? Character is slightly unusual in that its primary key is actually a hashed username rather than the id, which is only subject to a unique constraint so that it can be nulled. A primary key is needed to make logical replication work smoothly.","ref":"Bonfire.Data.Identity.Character.html","title":"Bonfire.Data.Identity.Character","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#changeset/3","title":"Bonfire.Data.Identity.Character.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#hash/1","title":"Bonfire.Data.Identity.Character.hash/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#uniform/1","title":"Bonfire.Data.Identity.Character.uniform/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html","title":"Bonfire.Data.Identity.Character.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_table/0","title":"Bonfire.Data.Identity.Character.Migration.create_character_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_table/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_trigger/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_trigger/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_trigger_function/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_trigger_function/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_username_hash_index/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_username_hash_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_username_index/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_username_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_table/0","title":"Bonfire.Data.Identity.Character.Migration.drop_character_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_trigger/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_trigger/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_trigger_function/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_trigger_function/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_username_hash_index/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_username_hash_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_username_index/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_username_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#migrate_character/0","title":"Bonfire.Data.Identity.Character.Migration.migrate_character/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#migrate_character/1","title":"Bonfire.Data.Identity.Character.Migration.migrate_character/1","type":"macro"},{"doc":"A Mixin that provides a password for local login.","ref":"Bonfire.Data.Identity.Credential.html","title":"Bonfire.Data.Identity.Credential","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#changeset/2","title":"Bonfire.Data.Identity.Credential.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#check_password/2","title":"Bonfire.Data.Identity.Credential.check_password/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#dummy_check/0","title":"Bonfire.Data.Identity.Credential.dummy_check/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#hash_password/1","title":"Bonfire.Data.Identity.Credential.hash_password/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html","title":"Bonfire.Data.Identity.Credential.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/0","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/1","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#drop_credential_table/0","title":"Bonfire.Data.Identity.Credential.Migration.drop_credential_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/0","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/1","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html","title":"Bonfire.Data.Identity.Email","type":"module"},{"doc":"Options: email_regex: Regexp.t (default very minimal validation) must_confirm?: bool (default true)","ref":"Bonfire.Data.Identity.Email.html#changeset/3","title":"Bonfire.Data.Identity.Email.changeset/3","type":"function"},{"doc":"Changeset function. Marks the user's email as confirmed and removes their confirmation token.","ref":"Bonfire.Data.Identity.Email.html#confirm/1","title":"Bonfire.Data.Identity.Email.confirm/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html#may_confirm?/2","title":"Bonfire.Data.Identity.Email.may_confirm?/2","type":"function"},{"doc":"Checks whether the user should be able to request a confirm email","ref":"Bonfire.Data.Identity.Email.html#may_request_confirm_email?/2","title":"Bonfire.Data.Identity.Email.may_request_confirm_email?/2","type":"function"},{"doc":"Changeset function. Unconditionally sets the user as unconfirmed, generates a confirmation token and puts an expiry on it determined by the :confirm_duration config key (default one day).","ref":"Bonfire.Data.Identity.Email.html#put_token/1","title":"Bonfire.Data.Identity.Email.put_token/1","type":"function"},{"doc":"Checks whether the user should request a new confirmation token or refresh it","ref":"Bonfire.Data.Identity.Email.html#should_request_or_refresh?/2","title":"Bonfire.Data.Identity.Email.should_request_or_refresh?/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html#t:t/0","title":"Bonfire.Data.Identity.Email.t/0","type":"type"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html","title":"Bonfire.Data.Identity.Email.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_address_index/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_address_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_confirm_token_index/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_confirm_token_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_table/0","title":"Bonfire.Data.Identity.Email.Migration.create_email_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_table/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_address_index/1","title":"Bonfire.Data.Identity.Email.Migration.drop_email_address_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_confirm_token_index/1","title":"Bonfire.Data.Identity.Email.Migration.drop_email_confirm_token_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_table/0","title":"Bonfire.Data.Identity.Email.Migration.drop_email_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#migrate_email/0","title":"Bonfire.Data.Identity.Email.Migration.migrate_email/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#migrate_email/1","title":"Bonfire.Data.Identity.Email.Migration.migrate_email/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.html","title":"Bonfire.Data.Identity.Named","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Named.html#changeset/3","title":"Bonfire.Data.Identity.Named.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html","title":"Bonfire.Data.Identity.Named.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#create_named_table/0","title":"Bonfire.Data.Identity.Named.Migration.create_named_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#create_named_table/1","title":"Bonfire.Data.Identity.Named.Migration.create_named_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#drop_named_table/0","title":"Bonfire.Data.Identity.Named.Migration.drop_named_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#migrate_named/0","title":"Bonfire.Data.Identity.Named.Migration.migrate_named/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#migrate_named/1","title":"Bonfire.Data.Identity.Named.Migration.migrate_named/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.html","title":"Bonfire.Data.Identity.Self","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Self.html#changeset/2","title":"Bonfire.Data.Identity.Self.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html","title":"Bonfire.Data.Identity.Self.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#create_self_table/0","title":"Bonfire.Data.Identity.Self.Migration.create_self_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#create_self_table/1","title":"Bonfire.Data.Identity.Self.Migration.create_self_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#drop_self_table/0","title":"Bonfire.Data.Identity.Self.Migration.drop_self_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#migrate_self/0","title":"Bonfire.Data.Identity.Self.Migration.migrate_self/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#migrate_self/1","title":"Bonfire.Data.Identity.Self.Migration.migrate_self/1","type":"macro"},{"doc":"A persona. A person (account) may have more than one user, but this is not exposed publically (except to local instance administrators), so it is as if they are different people.","ref":"Bonfire.Data.Identity.User.html","title":"Bonfire.Data.Identity.User","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.User.html#changeset/2","title":"Bonfire.Data.Identity.User.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html","title":"Bonfire.Data.Identity.User.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#create_user_table/0","title":"Bonfire.Data.Identity.User.Migration.create_user_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#create_user_table/1","title":"Bonfire.Data.Identity.User.Migration.create_user_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#drop_user_table/0","title":"Bonfire.Data.Identity.User.Migration.drop_user_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#migrate_user/0","title":"Bonfire.Data.Identity.User.Migration.migrate_user/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#migrate_user/1","title":"Bonfire.Data.Identity.User.Migration.migrate_user/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.html","title":"Bonfire.Data.Social.APActivity","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.html#changeset/2","title":"Bonfire.Data.Social.APActivity.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html","title":"Bonfire.Data.Social.APActivity.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#create_apactivity_table/0","title":"Bonfire.Data.Social.APActivity.Migration.create_apactivity_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#create_apactivity_table/1","title":"Bonfire.Data.Social.APActivity.Migration.create_apactivity_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#drop_apactivity_table/0","title":"Bonfire.Data.Social.APActivity.Migration.drop_apactivity_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#migrate_apactivity/0","title":"Bonfire.Data.Social.APActivity.Migration.migrate_apactivity/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#migrate_post/1","title":"Bonfire.Data.Social.APActivity.Migration.migrate_post/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.html","title":"Bonfire.Data.Social.Activity","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Activity.html#changeset/2","title":"Bonfire.Data.Social.Activity.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html","title":"Bonfire.Data.Social.Activity.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_object_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_object_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_subject_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_subject_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_table/0","title":"Bonfire.Data.Social.Activity.Migration.create_activity_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_table/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_verb_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_verb_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_object_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_object_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_subject_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_subject_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_table/0","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_verb_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_verb_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#migrate_activity/0","title":"Bonfire.Data.Social.Activity.Migration.migrate_activity/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#migrate_activity/1","title":"Bonfire.Data.Social.Activity.Migration.migrate_activity/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.html","title":"Bonfire.Data.Social.Block","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Block.html#changeset/2","title":"Bonfire.Data.Social.Block.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html","title":"Bonfire.Data.Social.Block.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#create_block_blocked_index/1","title":"Bonfire.Data.Social.Block.Migration.create_block_blocked_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#create_block_table/0","title":"Bonfire.Data.Social.Block.Migration.create_block_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#create_block_table/1","title":"Bonfire.Data.Social.Block.Migration.create_block_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#create_block_unique_index/1","title":"Bonfire.Data.Social.Block.Migration.create_block_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#drop_block_blocked_index/1","title":"Bonfire.Data.Social.Block.Migration.drop_block_blocked_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#drop_block_table/0","title":"Bonfire.Data.Social.Block.Migration.drop_block_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#drop_block_unique_index/1","title":"Bonfire.Data.Social.Block.Migration.drop_block_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#migrate_block/0","title":"Bonfire.Data.Social.Block.Migration.migrate_block/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#migrate_block/1","title":"Bonfire.Data.Social.Block.Migration.migrate_block/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.html","title":"Bonfire.Data.Social.Bookmark","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.html#changeset/2","title":"Bonfire.Data.Social.Bookmark.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html","title":"Bonfire.Data.Social.Bookmark.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#create_bookmark_bookmarked_index/1","title":"Bonfire.Data.Social.Bookmark.Migration.create_bookmark_bookmarked_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#create_bookmark_bookmarker_index/1","title":"Bonfire.Data.Social.Bookmark.Migration.create_bookmark_bookmarker_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#create_bookmark_table/0","title":"Bonfire.Data.Social.Bookmark.Migration.create_bookmark_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#create_bookmark_table/1","title":"Bonfire.Data.Social.Bookmark.Migration.create_bookmark_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#drop_bookmark_bookmarked_index/1","title":"Bonfire.Data.Social.Bookmark.Migration.drop_bookmark_bookmarked_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#drop_bookmark_bookmarker_index/1","title":"Bonfire.Data.Social.Bookmark.Migration.drop_bookmark_bookmarker_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#drop_bookmark_table/0","title":"Bonfire.Data.Social.Bookmark.Migration.drop_bookmark_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#migrate_bookmark/0","title":"Bonfire.Data.Social.Bookmark.Migration.migrate_bookmark/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#migrate_bookmark/1","title":"Bonfire.Data.Social.Bookmark.Migration.migrate_bookmark/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.html","title":"Bonfire.Data.Social.Boost","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Boost.html#changeset/2","title":"Bonfire.Data.Social.Boost.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html","title":"Bonfire.Data.Social.Boost.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#create_boost_boosted_index/1","title":"Bonfire.Data.Social.Boost.Migration.create_boost_boosted_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#create_boost_table/0","title":"Bonfire.Data.Social.Boost.Migration.create_boost_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#create_boost_table/1","title":"Bonfire.Data.Social.Boost.Migration.create_boost_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#create_boost_unique_index/1","title":"Bonfire.Data.Social.Boost.Migration.create_boost_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#drop_boost_boosted_index/1","title":"Bonfire.Data.Social.Boost.Migration.drop_boost_boosted_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#drop_boost_table/0","title":"Bonfire.Data.Social.Boost.Migration.drop_boost_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#drop_boost_unique_index/1","title":"Bonfire.Data.Social.Boost.Migration.drop_boost_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#migrate_boost/0","title":"Bonfire.Data.Social.Boost.Migration.migrate_boost/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#migrate_boost/1","title":"Bonfire.Data.Social.Boost.Migration.migrate_boost/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.html","title":"Bonfire.Data.Social.BoostCount","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.html#changeset/2","title":"Bonfire.Data.Social.BoostCount.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html","title":"Bonfire.Data.Social.BoostCount.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#create_boost_count_index/1","title":"Bonfire.Data.Social.BoostCount.Migration.create_boost_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#create_boost_count_table/0","title":"Bonfire.Data.Social.BoostCount.Migration.create_boost_count_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#create_boost_count_table/1","title":"Bonfire.Data.Social.BoostCount.Migration.create_boost_count_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#create_booster_count_index/1","title":"Bonfire.Data.Social.BoostCount.Migration.create_booster_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#drop_boost_count_index/1","title":"Bonfire.Data.Social.BoostCount.Migration.drop_boost_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#drop_boost_count_table/0","title":"Bonfire.Data.Social.BoostCount.Migration.drop_boost_count_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#drop_booster_count_index/1","title":"Bonfire.Data.Social.BoostCount.Migration.drop_booster_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#migrate_boost_count/0","title":"Bonfire.Data.Social.BoostCount.Migration.migrate_boost_count/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#migrate_boost_count/1","title":"Bonfire.Data.Social.BoostCount.Migration.migrate_boost_count/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.BoostCount.Migration.html#migrate_functions/0","title":"Bonfire.Data.Social.BoostCount.Migration.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Circle.html","title":"Bonfire.Data.Social.Circle","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Circle.html#changeset/2","title":"Bonfire.Data.Social.Circle.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html","title":"Bonfire.Data.Social.Circle.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html#create_circle_table/0","title":"Bonfire.Data.Social.Circle.Migration.create_circle_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html#create_circle_table/1","title":"Bonfire.Data.Social.Circle.Migration.create_circle_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html#drop_circle_table/0","title":"Bonfire.Data.Social.Circle.Migration.drop_circle_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html#migrate_circle/0","title":"Bonfire.Data.Social.Circle.Migration.migrate_circle/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Circle.Migration.html#migrate_circle/1","title":"Bonfire.Data.Social.Circle.Migration.migrate_circle/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.html","title":"Bonfire.Data.Social.Created","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Created.html#changeset/2","title":"Bonfire.Data.Social.Created.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html","title":"Bonfire.Data.Social.Created.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#create_created_table/0","title":"Bonfire.Data.Social.Created.Migration.create_created_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#create_created_table/1","title":"Bonfire.Data.Social.Created.Migration.create_created_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#drop_created_table/0","title":"Bonfire.Data.Social.Created.Migration.drop_created_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#migrate_created/0","title":"Bonfire.Data.Social.Created.Migration.migrate_created/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#migrate_created/1","title":"Bonfire.Data.Social.Created.Migration.migrate_created/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.html","title":"Bonfire.Data.Social.Encircle","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.html#changeset/2","title":"Bonfire.Data.Social.Encircle.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html","title":"Bonfire.Data.Social.Encircle.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#create_encircle_circle_index/1","title":"Bonfire.Data.Social.Encircle.Migration.create_encircle_circle_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#create_encircle_table/0","title":"Bonfire.Data.Social.Encircle.Migration.create_encircle_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#create_encircle_table/1","title":"Bonfire.Data.Social.Encircle.Migration.create_encircle_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#create_encircle_unique_index/1","title":"Bonfire.Data.Social.Encircle.Migration.create_encircle_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#drop_encircle_circle_index/1","title":"Bonfire.Data.Social.Encircle.Migration.drop_encircle_circle_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#drop_encircle_table/0","title":"Bonfire.Data.Social.Encircle.Migration.drop_encircle_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#drop_encircle_unique_index/1","title":"Bonfire.Data.Social.Encircle.Migration.drop_encircle_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#migrate_encircle/0","title":"Bonfire.Data.Social.Encircle.Migration.migrate_encircle/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Encircle.Migration.html#migrate_encircle/1","title":"Bonfire.Data.Social.Encircle.Migration.migrate_encircle/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Feed.html","title":"Bonfire.Data.Social.Feed","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Feed.html#changeset/2","title":"Bonfire.Data.Social.Feed.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html","title":"Bonfire.Data.Social.Feed.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#create_feed_table/0","title":"Bonfire.Data.Social.Feed.Migration.create_feed_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#create_feed_table/1","title":"Bonfire.Data.Social.Feed.Migration.create_feed_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#drop_feed_table/0","title":"Bonfire.Data.Social.Feed.Migration.drop_feed_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#migrate_feed/0","title":"Bonfire.Data.Social.Feed.Migration.migrate_feed/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#migrate_feed/1","title":"Bonfire.Data.Social.Feed.Migration.migrate_feed/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.html","title":"Bonfire.Data.Social.FeedPublish","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.html#changeset/2","title":"Bonfire.Data.Social.FeedPublish.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html","title":"Bonfire.Data.Social.FeedPublish.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_activity_index/1","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_activity_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_feed_index/1","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_feed_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_table/0","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_table/1","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#drop_feed_publish_activity_index/1","title":"Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_activity_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#drop_feed_publish_feed_index/1","title":"Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_feed_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#drop_feed_publish_table/0","title":"Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#migrate_feed_publish/0","title":"Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#migrate_feed_publish/1","title":"Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.html","title":"Bonfire.Data.Social.Flag","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Flag.html#changeset/2","title":"Bonfire.Data.Social.Flag.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html","title":"Bonfire.Data.Social.Flag.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#create_flag_flagged_index/1","title":"Bonfire.Data.Social.Flag.Migration.create_flag_flagged_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#create_flag_table/0","title":"Bonfire.Data.Social.Flag.Migration.create_flag_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#create_flag_table/1","title":"Bonfire.Data.Social.Flag.Migration.create_flag_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#create_flag_unique_index/1","title":"Bonfire.Data.Social.Flag.Migration.create_flag_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#drop_flag_flagged_index/1","title":"Bonfire.Data.Social.Flag.Migration.drop_flag_flagged_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#drop_flag_table/0","title":"Bonfire.Data.Social.Flag.Migration.drop_flag_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#drop_flag_unique_index/1","title":"Bonfire.Data.Social.Flag.Migration.drop_flag_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#migrate_flag/0","title":"Bonfire.Data.Social.Flag.Migration.migrate_flag/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#migrate_flag/1","title":"Bonfire.Data.Social.Flag.Migration.migrate_flag/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.html","title":"Bonfire.Data.Social.FlagCount","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.html#changeset/2","title":"Bonfire.Data.Social.FlagCount.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html","title":"Bonfire.Data.Social.FlagCount.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#create_flag_count_index/1","title":"Bonfire.Data.Social.FlagCount.Migration.create_flag_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#create_flag_count_table/0","title":"Bonfire.Data.Social.FlagCount.Migration.create_flag_count_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#create_flag_count_table/1","title":"Bonfire.Data.Social.FlagCount.Migration.create_flag_count_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#create_flagger_count_index/1","title":"Bonfire.Data.Social.FlagCount.Migration.create_flagger_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#drop_flag_count_index/1","title":"Bonfire.Data.Social.FlagCount.Migration.drop_flag_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#drop_flag_count_table/0","title":"Bonfire.Data.Social.FlagCount.Migration.drop_flag_count_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#drop_flagger_count_index/1","title":"Bonfire.Data.Social.FlagCount.Migration.drop_flagger_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#migrate_flag_count/0","title":"Bonfire.Data.Social.FlagCount.Migration.migrate_flag_count/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FlagCount.Migration.html#migrate_flag_count/1","title":"Bonfire.Data.Social.FlagCount.Migration.migrate_flag_count/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.html","title":"Bonfire.Data.Social.Follow","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Follow.html#changeset/2","title":"Bonfire.Data.Social.Follow.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html","title":"Bonfire.Data.Social.Follow.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#create_follow_followed_index/1","title":"Bonfire.Data.Social.Follow.Migration.create_follow_followed_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#create_follow_table/0","title":"Bonfire.Data.Social.Follow.Migration.create_follow_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#create_follow_table/1","title":"Bonfire.Data.Social.Follow.Migration.create_follow_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#create_follow_unique_index/1","title":"Bonfire.Data.Social.Follow.Migration.create_follow_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#drop_follow_followed_index/1","title":"Bonfire.Data.Social.Follow.Migration.drop_follow_followed_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#drop_follow_table/0","title":"Bonfire.Data.Social.Follow.Migration.drop_follow_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#drop_follow_unique_index/1","title":"Bonfire.Data.Social.Follow.Migration.drop_follow_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow/0","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow/1","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.html","title":"Bonfire.Data.Social.FollowCount","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.html#changeset/2","title":"Bonfire.Data.Social.FollowCount.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html","title":"Bonfire.Data.Social.FollowCount.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#create_follow_count_index/1","title":"Bonfire.Data.Social.FollowCount.Migration.create_follow_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#create_follow_count_table/0","title":"Bonfire.Data.Social.FollowCount.Migration.create_follow_count_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#create_follow_count_table/1","title":"Bonfire.Data.Social.FollowCount.Migration.create_follow_count_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#create_follower_count_index/1","title":"Bonfire.Data.Social.FollowCount.Migration.create_follower_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#drop_follow_count_index/1","title":"Bonfire.Data.Social.FollowCount.Migration.drop_follow_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#drop_follow_count_table/0","title":"Bonfire.Data.Social.FollowCount.Migration.drop_follow_count_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#drop_follower_count_index/1","title":"Bonfire.Data.Social.FollowCount.Migration.drop_follower_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#migrate_follow_count/0","title":"Bonfire.Data.Social.FollowCount.Migration.migrate_follow_count/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#migrate_follow_count/1","title":"Bonfire.Data.Social.FollowCount.Migration.migrate_follow_count/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FollowCount.Migration.html#migrate_functions/0","title":"Bonfire.Data.Social.FollowCount.Migration.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.html","title":"Bonfire.Data.Social.Inbox","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.html#changeset/2","title":"Bonfire.Data.Social.Inbox.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html","title":"Bonfire.Data.Social.Inbox.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#create_inbox_table/0","title":"Bonfire.Data.Social.Inbox.Migration.create_inbox_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#create_inbox_table/1","title":"Bonfire.Data.Social.Inbox.Migration.create_inbox_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#drop_inbox_table/0","title":"Bonfire.Data.Social.Inbox.Migration.drop_inbox_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#migrate_inbox/0","title":"Bonfire.Data.Social.Inbox.Migration.migrate_inbox/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#migrate_inbox/1","title":"Bonfire.Data.Social.Inbox.Migration.migrate_inbox/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.html","title":"Bonfire.Data.Social.Like","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Like.html#changeset/2","title":"Bonfire.Data.Social.Like.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html","title":"Bonfire.Data.Social.Like.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#create_like_liked_index/1","title":"Bonfire.Data.Social.Like.Migration.create_like_liked_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#create_like_table/0","title":"Bonfire.Data.Social.Like.Migration.create_like_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#create_like_table/1","title":"Bonfire.Data.Social.Like.Migration.create_like_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#create_like_unique_index/1","title":"Bonfire.Data.Social.Like.Migration.create_like_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#drop_like_liked_index/1","title":"Bonfire.Data.Social.Like.Migration.drop_like_liked_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#drop_like_table/0","title":"Bonfire.Data.Social.Like.Migration.drop_like_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#drop_like_unique_index/1","title":"Bonfire.Data.Social.Like.Migration.drop_like_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like/0","title":"Bonfire.Data.Social.Like.Migration.migrate_like/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like/1","title":"Bonfire.Data.Social.Like.Migration.migrate_like/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.html","title":"Bonfire.Data.Social.LikeCount","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.html#changeset/2","title":"Bonfire.Data.Social.LikeCount.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html","title":"Bonfire.Data.Social.LikeCount.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#create_like_count_index/1","title":"Bonfire.Data.Social.LikeCount.Migration.create_like_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#create_like_count_table/0","title":"Bonfire.Data.Social.LikeCount.Migration.create_like_count_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#create_like_count_table/1","title":"Bonfire.Data.Social.LikeCount.Migration.create_like_count_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#create_liker_count_index/1","title":"Bonfire.Data.Social.LikeCount.Migration.create_liker_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#drop_like_count_index/1","title":"Bonfire.Data.Social.LikeCount.Migration.drop_like_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#drop_like_count_table/0","title":"Bonfire.Data.Social.LikeCount.Migration.drop_like_count_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#drop_liker_count_index/1","title":"Bonfire.Data.Social.LikeCount.Migration.drop_liker_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#migrate_functions/0","title":"Bonfire.Data.Social.LikeCount.Migration.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#migrate_like_count/0","title":"Bonfire.Data.Social.LikeCount.Migration.migrate_like_count/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.LikeCount.Migration.html#migrate_like_count/1","title":"Bonfire.Data.Social.LikeCount.Migration.migrate_like_count/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.html","title":"Bonfire.Data.Social.Mention","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Mention.html#changeset/2","title":"Bonfire.Data.Social.Mention.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html","title":"Bonfire.Data.Social.Mention.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#create_mention_mentioned_index/1","title":"Bonfire.Data.Social.Mention.Migration.create_mention_mentioned_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#create_mention_mentioner_index/1","title":"Bonfire.Data.Social.Mention.Migration.create_mention_mentioner_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#create_mention_table/0","title":"Bonfire.Data.Social.Mention.Migration.create_mention_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#create_mention_table/1","title":"Bonfire.Data.Social.Mention.Migration.create_mention_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#drop_mention_mentioned_index/1","title":"Bonfire.Data.Social.Mention.Migration.drop_mention_mentioned_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#drop_mention_mentioner_index/1","title":"Bonfire.Data.Social.Mention.Migration.drop_mention_mentioner_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#drop_mention_table/0","title":"Bonfire.Data.Social.Mention.Migration.drop_mention_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#migrate_mention/0","title":"Bonfire.Data.Social.Mention.Migration.migrate_mention/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Mention.Migration.html#migrate_mention/1","title":"Bonfire.Data.Social.Mention.Migration.migrate_mention/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Message.html","title":"Bonfire.Data.Social.Message","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Message.html#changeset/2","title":"Bonfire.Data.Social.Message.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html","title":"Bonfire.Data.Social.Message.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#create_message_table/0","title":"Bonfire.Data.Social.Message.Migration.create_message_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#create_message_table/1","title":"Bonfire.Data.Social.Message.Migration.create_message_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#drop_message_table/0","title":"Bonfire.Data.Social.Message.Migration.drop_message_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#migrate_message/0","title":"Bonfire.Data.Social.Message.Migration.migrate_message/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#migrate_message/1","title":"Bonfire.Data.Social.Message.Migration.migrate_message/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Post.html","title":"Bonfire.Data.Social.Post","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Post.html#changeset/2","title":"Bonfire.Data.Social.Post.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html","title":"Bonfire.Data.Social.Post.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#create_post_table/0","title":"Bonfire.Data.Social.Post.Migration.create_post_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#create_post_table/1","title":"Bonfire.Data.Social.Post.Migration.create_post_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#drop_post_table/0","title":"Bonfire.Data.Social.Post.Migration.drop_post_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#migrate_post/0","title":"Bonfire.Data.Social.Post.Migration.migrate_post/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#migrate_post/1","title":"Bonfire.Data.Social.Post.Migration.migrate_post/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.html","title":"Bonfire.Data.Social.PostContent","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.html#changeset/2","title":"Bonfire.Data.Social.PostContent.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html","title":"Bonfire.Data.Social.PostContent.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#create_post_content_table/0","title":"Bonfire.Data.Social.PostContent.Migration.create_post_content_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#create_post_content_table/1","title":"Bonfire.Data.Social.PostContent.Migration.create_post_content_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#drop_post_content_table/0","title":"Bonfire.Data.Social.PostContent.Migration.drop_post_content_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#migrate_post_content/0","title":"Bonfire.Data.Social.PostContent.Migration.migrate_post_content/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#migrate_post_content/1","title":"Bonfire.Data.Social.PostContent.Migration.migrate_post_content/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.html","title":"Bonfire.Data.Social.Profile","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Profile.html#changeset/2","title":"Bonfire.Data.Social.Profile.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html","title":"Bonfire.Data.Social.Profile.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#create_profile_table/0","title":"Bonfire.Data.Social.Profile.Migration.create_profile_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#create_profile_table/1","title":"Bonfire.Data.Social.Profile.Migration.create_profile_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#drop_profile_table/0","title":"Bonfire.Data.Social.Profile.Migration.drop_profile_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#migrate_profile/0","title":"Bonfire.Data.Social.Profile.Migration.migrate_profile/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#migrate_profile/1","title":"Bonfire.Data.Social.Profile.Migration.migrate_profile/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html","title":"Bonfire.Data.Social.Replied","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestor_ids/1","title":"Bonfire.Data.Social.Replied.ancestor_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestors/1","title":"Bonfire.Data.Social.Replied.ancestors/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#arrange/1","title":"Bonfire.Data.Social.Replied.arrange/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#build_child/1","title":"Bonfire.Data.Social.Replied.build_child/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#changeset/2","title":"Bonfire.Data.Social.Replied.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#children/1","title":"Bonfire.Data.Social.Replied.children/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#depth/1","title":"Bonfire.Data.Social.Replied.depth/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#descendants/1","title":"Bonfire.Data.Social.Replied.descendants/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#make_child_of/2","title":"Bonfire.Data.Social.Replied.make_child_of/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#parent/1","title":"Bonfire.Data.Social.Replied.parent/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#parent_id/1","title":"Bonfire.Data.Social.Replied.parent_id/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#path/1","title":"Bonfire.Data.Social.Replied.path/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#path_ids/1","title":"Bonfire.Data.Social.Replied.path_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root/1","title":"Bonfire.Data.Social.Replied.root/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root?/1","title":"Bonfire.Data.Social.Replied.root?/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root_id/1","title":"Bonfire.Data.Social.Replied.root_id/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#siblings/1","title":"Bonfire.Data.Social.Replied.siblings/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#subtree/1","title":"Bonfire.Data.Social.Replied.subtree/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#where_depth/2","title":"Bonfire.Data.Social.Replied.where_depth/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html","title":"Bonfire.Data.Social.Replied.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_replied_table/0","title":"Bonfire.Data.Social.Replied.Migration.create_replied_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_replied_table/1","title":"Bonfire.Data.Social.Replied.Migration.create_replied_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#drop_replied_table/0","title":"Bonfire.Data.Social.Replied.Migration.drop_replied_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_functions/0","title":"Bonfire.Data.Social.Replied.Migration.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_replied/0","title":"Bonfire.Data.Social.Replied.Migration.migrate_replied/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_replied/1","title":"Bonfire.Data.Social.Replied.Migration.migrate_replied/1","type":"macro"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html","title":"Bonfire.Me.API.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#account_users/3","title":"Bonfire.Me.API.GraphQL.account_users/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html","title":"Bonfire.Me.Accounts","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.html#changeset/3","title":"Bonfire.Me.Accounts.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#confirm_email/2","title":"Bonfire.Me.Accounts.confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#fetch_current/1","title":"Bonfire.Me.Accounts.fetch_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#get_by_email/1","title":"Bonfire.Me.Accounts.get_by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#get_current/1","title":"Bonfire.Me.Accounts.get_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#instance_is_invite_only?/0","title":"Bonfire.Me.Accounts.instance_is_invite_only?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#is_first_account?/0","title":"Bonfire.Me.Accounts.is_first_account?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#login/2","title":"Bonfire.Me.Accounts.login/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#request_confirm_email/2","title":"Bonfire.Me.Accounts.request_confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#request_forgot_password/1","title":"Bonfire.Me.Accounts.request_forgot_password/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#signup/2","title":"Bonfire.Me.Accounts.signup/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#t:changeset_name/0","title":"Bonfire.Me.Accounts.changeset_name/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html","title":"Bonfire.Me.Accounts.ChangePasswordFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html#changeset/2","title":"Bonfire.Me.Accounts.ChangePasswordFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html","title":"Bonfire.Me.Accounts.ConfirmEmailFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html#changeset/2","title":"Bonfire.Me.Accounts.ConfirmEmailFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html","title":"Bonfire.Me.Accounts.ForgotPasswordFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html#changeset/2","title":"Bonfire.Me.Accounts.ForgotPasswordFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html","title":"Bonfire.Me.Accounts.LoginFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html#changeset/2","title":"Bonfire.Me.Accounts.LoginFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html","title":"Bonfire.Me.Accounts.Queries","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#by_email/1","title":"Bonfire.Me.Accounts.Queries.by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#confirm_email/1","title":"Bonfire.Me.Accounts.Queries.confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#count/0","title":"Bonfire.Me.Accounts.Queries.count/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#current/1","title":"Bonfire.Me.Accounts.Queries.current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_email/1","title":"Bonfire.Me.Accounts.Queries.login_by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_username/1","title":"Bonfire.Me.Accounts.Queries.login_by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#request_confirm_email/1","title":"Bonfire.Me.Accounts.Queries.request_confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Boundaries.LiveHandler.html","title":"Bonfire.Me.Boundaries.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Boundaries.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Boundaries.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Boundaries.LiveHandler.html#known_circle_tuples/2","title":"Bonfire.Me.Boundaries.LiveHandler.known_circle_tuples/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Boundaries.LiveHandler.html#remove_from_circle_tuples/2","title":"Bonfire.Me.Boundaries.LiveHandler.remove_from_circle_tuples/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Boundaries.LiveHandler.html#set_circles/3","title":"Bonfire.Me.Boundaries.LiveHandler.set_circles/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html","title":"Bonfire.Me.Characters","type":"module"},{"doc":"","ref":"Bonfire.Me.Characters.html#by_username/1","title":"Bonfire.Me.Characters.by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#by_username_q/1","title":"Bonfire.Me.Characters.by_username_q/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#changeset/2","title":"Bonfire.Me.Characters.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#character_url/1","title":"Bonfire.Me.Characters.character_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#clean_username/1","title":"Bonfire.Me.Characters.clean_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#context_module/0","title":"Bonfire.Me.Characters.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#display_username/1","title":"Bonfire.Me.Characters.display_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#get/1","title":"Bonfire.Me.Characters.get/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#hash_available?/1","title":"Bonfire.Me.Characters.hash_available?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#hash_delete/1","title":"Bonfire.Me.Characters.hash_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#indexing_object_format/1","title":"Bonfire.Me.Characters.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#q_by_id/1","title":"Bonfire.Me.Characters.q_by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#remote_changeset/2","title":"Bonfire.Me.Characters.remote_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#username_available?/1","title":"Bonfire.Me.Characters.username_available?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Circles.LiveHandler.html","title":"Bonfire.Me.Circles.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Circles.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Circles.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.DiffRenderView.html","title":"Bonfire.Me.DiffRenderView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.Me.DiffRenderView.html#__resource__/0","title":"Bonfire.Me.DiffRenderView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.Me.DiffRenderView.html#render/2","title":"Bonfire.Me.DiffRenderView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.Me.DiffRenderView.html#template_not_found/2","title":"Bonfire.Me.DiffRenderView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html","title":"Bonfire.Me.Fake","type":"module"},{"doc":"","ref":"Bonfire.Me.Fake.html#atusername/0","title":"Bonfire.Me.Fake.atusername/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#avatar_url/0","title":"Bonfire.Me.Fake.avatar_url/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#avatar_url/1","title":"Bonfire.Me.Fake.avatar_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#character_subform/1","title":"Bonfire.Me.Fake.character_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#confirm_token/0","title":"Bonfire.Me.Fake.confirm_token/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#create_user_form/1","title":"Bonfire.Me.Fake.create_user_form/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#credential_subform/1","title":"Bonfire.Me.Fake.credential_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#email/0","title":"Bonfire.Me.Fake.email/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#email_subform/1","title":"Bonfire.Me.Fake.email_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#fake_account!/1","title":"Bonfire.Me.Fake.fake_account!/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#fake_user!/2","title":"Bonfire.Me.Fake.fake_user!/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#icon_url/1","title":"Bonfire.Me.Fake.icon_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#image/1","title":"Bonfire.Me.Fake.image/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#image_url/1","title":"Bonfire.Me.Fake.image_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#location/0","title":"Bonfire.Me.Fake.location/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#name/0","title":"Bonfire.Me.Fake.name/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#password/0","title":"Bonfire.Me.Fake.password/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#profile_subform/1","title":"Bonfire.Me.Fake.profile_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#signup_form/1","title":"Bonfire.Me.Fake.signup_form/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#summary/0","title":"Bonfire.Me.Fake.summary/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#user_live/1","title":"Bonfire.Me.Fake.user_live/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#username/0","title":"Bonfire.Me.Fake.username/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#website/0","title":"Bonfire.Me.Fake.website/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Follows.html","title":"Bonfire.Me.Follows","type":"module"},{"doc":"handle a user following another user","ref":"Bonfire.Me.Follows.html#follow/2","title":"Bonfire.Me.Follows.follow/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html","title":"Bonfire.Me.Integration","type":"module"},{"doc":"","ref":"Bonfire.Me.Integration.html#indexing_format/2","title":"Bonfire.Me.Integration.indexing_format/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#mailer/0","title":"Bonfire.Me.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#maybe_index/1","title":"Bonfire.Me.Integration.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#repo/0","title":"Bonfire.Me.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html","title":"Bonfire.Me.Mails","type":"module"},{"doc":"","ref":"Bonfire.Me.Mails.html#confirm_email/2","title":"Bonfire.Me.Mails.confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#forgot_password/1","title":"Bonfire.Me.Mails.forgot_password/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#render/3","title":"Bonfire.Me.Mails.render/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#signup_confirm_email/1","title":"Bonfire.Me.Mails.signup_confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Migrations.html","title":"Bonfire.Me.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Me.Migrations.html#migrate_me/0","title":"Bonfire.Me.Migrations.migrate_me/0","type":"macro"},{"doc":"","ref":"Bonfire.Me.Migrations.html#migrate_me/1","title":"Bonfire.Me.Migrations.migrate_me/1","type":"macro"},{"doc":"","ref":"Bonfire.Me.Profiles.html","title":"Bonfire.Me.Profiles","type":"module"},{"doc":"","ref":"Bonfire.Me.Profiles.html#changeset/2","title":"Bonfire.Me.Profiles.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.html#context_module/0","title":"Bonfire.Me.Profiles.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.html#indexing_object_format/1","title":"Bonfire.Me.Profiles.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html","title":"Bonfire.Me.Profiles.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Profiles.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html","title":"Bonfire.Me.SharedUsers","type":"module"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#add_account/3","title":"Bonfire.Me.SharedUsers.add_account/3","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#by_account/1","title":"Bonfire.Me.SharedUsers.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#by_username_and_account_query/2","title":"Bonfire.Me.SharedUsers.by_username_and_account_query/2","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#federation_module/0","title":"Bonfire.Me.SharedUsers.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#make_shared_user/2","title":"Bonfire.Me.SharedUsers.make_shared_user/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html","title":"Bonfire.Me.Users","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.html#ap_receive_activity/3","title":"Bonfire.Me.Users.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_account/1","title":"Bonfire.Me.Users.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_ap_id/1","title":"Bonfire.Me.Users.by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_ap_id!/1","title":"Bonfire.Me.Users.by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_id/1","title":"Bonfire.Me.Users.by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_username/1","title":"Bonfire.Me.Users.by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_username!/1","title":"Bonfire.Me.Users.by_username!/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_username_and_account/2","title":"Bonfire.Me.Users.by_username_and_account/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#changeset/4","title":"Bonfire.Me.Users.changeset/4","type":"function"},{"doc":"A User is a logical identity within the system belonging to an Account.","ref":"Bonfire.Me.Users.html#context_module/0","title":"Bonfire.Me.Users.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#create/2","title":"Bonfire.Me.Users.create/2","type":"function"},{"doc":"Creates a remote user","ref":"Bonfire.Me.Users.html#create_remote/1","title":"Bonfire.Me.Users.create_remote/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#federation_module/0","title":"Bonfire.Me.Users.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#fetch_current/1","title":"Bonfire.Me.Users.fetch_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#flatten/1","title":"Bonfire.Me.Users.flatten/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#format_actor/1","title":"Bonfire.Me.Users.format_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#get_current/1","title":"Bonfire.Me.Users.get_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#indexing_object_format/1","title":"Bonfire.Me.Users.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#is_admin/1","title":"Bonfire.Me.Users.is_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#is_first_user?/0","title":"Bonfire.Me.Users.is_first_user?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#list/0","title":"Bonfire.Me.Users.list/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#list_admins/0","title":"Bonfire.Me.Users.list_admins/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#make_admin/1","title":"Bonfire.Me.Users.make_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#maybe_index_user/1","title":"Bonfire.Me.Users.maybe_index_user/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#search/1","title":"Bonfire.Me.Users.search/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#search_db/1","title":"Bonfire.Me.Users.search_db/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#update/3","title":"Bonfire.Me.Users.update/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#update_local_actor/2","title":"Bonfire.Me.Users.update_local_actor/2","type":"function"},{"doc":"Updates a remote user","ref":"Bonfire.Me.Users.html#update_remote/2","title":"Bonfire.Me.Users.update_remote/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#t:changeset_extra/0","title":"Bonfire.Me.Users.changeset_extra/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Users.html#t:changeset_name/0","title":"Bonfire.Me.Users.changeset_name/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Users.Accesses.html","title":"Bonfire.Me.Users.Accesses","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.Accesses.html#changeset/3","title":"Bonfire.Me.Users.Accesses.changeset/3","type":"function"},{"doc":"Create an Access for the provided user","ref":"Bonfire.Me.Users.Accesses.html#create/3","title":"Bonfire.Me.Users.Accesses.create/3","type":"function"},{"doc":"Lists the accesses we are the registered caretakers of that we are permitted to see. If any are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Me.Users.Accesses.html#list_my/1","title":"Bonfire.Me.Users.Accesses.list_my/1","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Me.Users.Accesses.html#list_my_q/1","title":"Bonfire.Me.Users.Accesses.list_my_q/1","type":"function"},{"doc":"Lists all accesses we are permitted to see. Not just by this user.","ref":"Bonfire.Me.Users.Accesses.html#list_visible/1","title":"Bonfire.Me.Users.Accesses.list_visible/1","type":"function"},{"doc":"query for list_visible","ref":"Bonfire.Me.Users.Accesses.html#list_visible_q/1","title":"Bonfire.Me.Users.Accesses.list_visible_q/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Acls.html","title":"Bonfire.Me.Users.Acls","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.Acls.html#changeset/3","title":"Bonfire.Me.Users.Acls.changeset/3","type":"function"},{"doc":"Create a Acls for the provided user","ref":"Bonfire.Me.Users.Acls.html#create/3","title":"Bonfire.Me.Users.Acls.create/3","type":"function"},{"doc":"Lists the ACLs we are the registered caretakers of that we are permitted to see. If any are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Me.Users.Acls.html#list_my/1","title":"Bonfire.Me.Users.Acls.list_my/1","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Me.Users.Acls.html#list_my_q/1","title":"Bonfire.Me.Users.Acls.list_my_q/1","type":"function"},{"doc":"Lists the ACLs permitted to see.","ref":"Bonfire.Me.Users.Acls.html#list_visible/1","title":"Bonfire.Me.Users.Acls.list_visible/1","type":"function"},{"doc":"query for list_visible","ref":"Bonfire.Me.Users.Acls.html#list_visible_q/1","title":"Bonfire.Me.Users.Acls.list_visible_q/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Boundaries.html","title":"Bonfire.Me.Users.Boundaries","type":"module"},{"doc":"Grant access to an object to a list of circles + the user","ref":"Bonfire.Me.Users.Boundaries.html#maybe_grant_access_to/4","title":"Bonfire.Me.Users.Boundaries.maybe_grant_access_to/4","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Boundaries.html#maybe_make_visible_for/3","title":"Bonfire.Me.Users.Boundaries.maybe_make_visible_for/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Circles.html","title":"Bonfire.Me.Users.Circles","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.Circles.html#changeset/3","title":"Bonfire.Me.Users.Circles.changeset/3","type":"function"},{"doc":"Create a circle for the provided user (and with the user in the circle?)","ref":"Bonfire.Me.Users.Circles.html#create/3","title":"Bonfire.Me.Users.Circles.create/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Circles.html#get/2","title":"Bonfire.Me.Users.Circles.get/2","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Me.Users.Circles.html#get_q/2","title":"Bonfire.Me.Users.Circles.get_q/2","type":"function"},{"doc":"Lists the circles we are the registered caretakers of that we are permitted to see. If any circles are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Me.Users.Circles.html#list_my/2","title":"Bonfire.Me.Users.Circles.list_my/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Circles.html#list_my_defaults/1","title":"Bonfire.Me.Users.Circles.list_my_defaults/1","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Me.Users.Circles.html#list_my_q/1","title":"Bonfire.Me.Users.Circles.list_my_q/1","type":"function"},{"doc":"Lists the circles that we are permitted to see.","ref":"Bonfire.Me.Users.Circles.html#list_visible/1","title":"Bonfire.Me.Users.Circles.list_visible/1","type":"function"},{"doc":"query for list_visible","ref":"Bonfire.Me.Users.Circles.html#list_visible_q/1","title":"Bonfire.Me.Users.Circles.list_visible_q/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Circles.html#update/3","title":"Bonfire.Me.Users.Circles.update/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html","title":"Bonfire.Me.Users.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Users.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#to_tuple/1","title":"Bonfire.Me.Users.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html","title":"Bonfire.Me.Users.Queries","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#admins/0","title":"Bonfire.Me.Users.Queries.admins/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_account/1","title":"Bonfire.Me.Users.Queries.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_id/1","title":"Bonfire.Me.Users.Queries.by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_and_account/2","title":"Bonfire.Me.Users.Queries.by_username_and_account/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_or_id/1","title":"Bonfire.Me.Users.Queries.by_username_or_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_query/1","title":"Bonfire.Me.Users.Queries.by_username_query/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#count/0","title":"Bonfire.Me.Users.Queries.count/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#current/1","title":"Bonfire.Me.Users.Queries.current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#list/0","title":"Bonfire.Me.Users.Queries.list/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#queries_module/0","title":"Bonfire.Me.Users.Queries.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#query/1","title":"Bonfire.Me.Users.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#search/1","title":"Bonfire.Me.Users.Queries.search/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ChangePasswordController.html","title":"Bonfire.Me.Web.ChangePasswordController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.ChangePasswordController.html#create/2","title":"Bonfire.Me.Web.ChangePasswordController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ChangePasswordController.html#index/2","title":"Bonfire.Me.Web.ChangePasswordController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.ChangePasswordLive.html","title":"Bonfire.Me.Web.ChangePasswordLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.ChangePasswordLive.html#mount/3","title":"Bonfire.Me.Web.ChangePasswordLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ChangePasswordLive.html#mounted/3","title":"Bonfire.Me.Web.ChangePasswordLive.mounted/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.ChangePasswordLive.html#render/1","title":"Bonfire.Me.Web.ChangePasswordLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ConfirmEmailController.html","title":"Bonfire.Me.Web.ConfirmEmailController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.ConfirmEmailController.html#create/2","title":"Bonfire.Me.Web.ConfirmEmailController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ConfirmEmailController.html#index/2","title":"Bonfire.Me.Web.ConfirmEmailController.index/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ConfirmEmailController.html#show/2","title":"Bonfire.Me.Web.ConfirmEmailController.show/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.ConfirmEmailLive.html","title":"Bonfire.Me.Web.ConfirmEmailLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.ConfirmEmailLive.html#mount/3","title":"Bonfire.Me.Web.ConfirmEmailLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.ConfirmEmailLive.html#render/1","title":"Bonfire.Me.Web.ConfirmEmailLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.CreateUserController.html","title":"Bonfire.Me.Web.CreateUserController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.CreateUserController.html#create/2","title":"Bonfire.Me.Web.CreateUserController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.CreateUserController.html#index/2","title":"Bonfire.Me.Web.CreateUserController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.CreateUserLive.html","title":"Bonfire.Me.Web.CreateUserLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.CreateUserLive.html#mount/3","title":"Bonfire.Me.Web.CreateUserLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.CreateUserLive.html#render/1","title":"Bonfire.Me.Web.CreateUserLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.EmailView.html","title":"Bonfire.Me.Web.EmailView","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.EmailView.html#render_template/2","title":"Bonfire.Me.Web.EmailView.render_template/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ForgotPasswordController.html","title":"Bonfire.Me.Web.ForgotPasswordController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.ForgotPasswordController.html#create/2","title":"Bonfire.Me.Web.ForgotPasswordController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ForgotPasswordController.html#form/1","title":"Bonfire.Me.Web.ForgotPasswordController.form/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ForgotPasswordController.html#index/2","title":"Bonfire.Me.Web.ForgotPasswordController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.ForgotPasswordLive.html","title":"Bonfire.Me.Web.ForgotPasswordLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.ForgotPasswordLive.html#mount/3","title":"Bonfire.Me.Web.ForgotPasswordLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.ForgotPasswordLive.html#render/1","title":"Bonfire.Me.Web.ForgotPasswordLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.LoggedDashboardLive.html","title":"Bonfire.Me.Web.LoggedDashboardLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Me.Web.LoggedDashboardLive.html#handle_event/3","title":"Bonfire.Me.Web.LoggedDashboardLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Me.Web.LoggedDashboardLive.html#handle_info/2","title":"Bonfire.Me.Web.LoggedDashboardLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Me.Web.LoggedDashboardLive.html#handle_params/3","title":"Bonfire.Me.Web.LoggedDashboardLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.LoggedDashboardLive.html#mount/3","title":"Bonfire.Me.Web.LoggedDashboardLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.LoggedDashboardLive.html#render/1","title":"Bonfire.Me.Web.LoggedDashboardLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.LoginController.html","title":"Bonfire.Me.Web.LoginController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.LoginController.html#create/2","title":"Bonfire.Me.Web.LoginController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.LoginController.html#index/2","title":"Bonfire.Me.Web.LoginController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.LoginLive.html","title":"Bonfire.Me.Web.LoginLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.LoginLive.html#mount/3","title":"Bonfire.Me.Web.LoginLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.LoginLive.html#render/1","title":"Bonfire.Me.Web.LoginLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.LogoutController.html","title":"Bonfire.Me.Web.LogoutController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.LogoutController.html#index/2","title":"Bonfire.Me.Web.LogoutController.index/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.My.SettingsUpload.html","title":"Bonfire.Me.Web.My.SettingsUpload","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.My.SettingsUpload.html#upload/2","title":"Bonfire.Me.Web.My.SettingsUpload.upload/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.PrivateLive.html","title":"Bonfire.Me.Web.PrivateLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Me.Web.PrivateLive.html#handle_event/3","title":"Bonfire.Me.Web.PrivateLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Me.Web.PrivateLive.html#handle_info/2","title":"Bonfire.Me.Web.PrivateLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.PrivateLive.html#mount/3","title":"Bonfire.Me.Web.PrivateLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.PrivateLive.html#render/1","title":"Bonfire.Me.Web.PrivateLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.ProfileLive.html","title":"Bonfire.Me.Web.ProfileLive","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.ProfileLive.html#do_handle_params/3","title":"Bonfire.Me.Web.ProfileLive.do_handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.ProfileLive.html#get_user/1","title":"Bonfire.Me.Web.ProfileLive.get_user/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Me.Web.ProfileLive.html#handle_event/3","title":"Bonfire.Me.Web.ProfileLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Me.Web.ProfileLive.html#handle_info/2","title":"Bonfire.Me.Web.ProfileLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Me.Web.ProfileLive.html#handle_params/3","title":"Bonfire.Me.Web.ProfileLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.ProfileLive.html#mount/3","title":"Bonfire.Me.Web.ProfileLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.ProfileLive.html#render/1","title":"Bonfire.Me.Web.ProfileLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.Routes.html","title":"Bonfire.Me.Web.Routes","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.SettingsLive.html","title":"Bonfire.Me.Web.SettingsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Me.Web.SettingsLive.html#handle_event/3","title":"Bonfire.Me.Web.SettingsLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Me.Web.SettingsLive.html#handle_params/3","title":"Bonfire.Me.Web.SettingsLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.SettingsLive.html#mount/3","title":"Bonfire.Me.Web.SettingsLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.SettingsLive.html#render/1","title":"Bonfire.Me.Web.SettingsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.SignupController.html","title":"Bonfire.Me.Web.SignupController","type":"module"},{"doc":"","ref":"Bonfire.Me.Web.SignupController.html#create/2","title":"Bonfire.Me.Web.SignupController.create/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.SignupController.html#index/2","title":"Bonfire.Me.Web.SignupController.index/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.SignupController.html#render_view/2","title":"Bonfire.Me.Web.SignupController.render_view/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.SignupLive.html","title":"Bonfire.Me.Web.SignupLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.SignupLive.html#mount/3","title":"Bonfire.Me.Web.SignupLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.SignupLive.html#render/1","title":"Bonfire.Me.Web.SignupLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Web.SwitchUserController.html","title":"Bonfire.Me.Web.SwitchUserController","type":"module"},{"doc":"A listing of users in the account.","ref":"Bonfire.Me.Web.SwitchUserController.html#index/2","title":"Bonfire.Me.Web.SwitchUserController.index/2","type":"function"},{"doc":"Switch to a user, if permitted.","ref":"Bonfire.Me.Web.SwitchUserController.html#show/2","title":"Bonfire.Me.Web.SwitchUserController.show/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Me.Web.SwitchUserLive.html","title":"Bonfire.Me.Web.SwitchUserLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Me.Web.SwitchUserLive.html#mount/3","title":"Bonfire.Me.Web.SwitchUserLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Me.Web.SwitchUserLive.html#render/1","title":"Bonfire.Me.Web.SwitchUserLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.AccountRequired.html","title":"Bonfire.Web.LivePlugs.AccountRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.AccountRequired.html#mount/3","title":"Bonfire.Web.LivePlugs.AccountRequired.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.AdminRequired.html","title":"Bonfire.Web.LivePlugs.AdminRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.AdminRequired.html#mount/3","title":"Bonfire.Web.LivePlugs.AdminRequired.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentAccount.html","title":"Bonfire.Web.LivePlugs.LoadCurrentAccount","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentAccount.html#mount/3","title":"Bonfire.Web.LivePlugs.LoadCurrentAccount.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentAccountUsers.html","title":"Bonfire.Web.LivePlugs.LoadCurrentAccountUsers","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentAccountUsers.html#mount/3","title":"Bonfire.Web.LivePlugs.LoadCurrentAccountUsers.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentUser.html","title":"Bonfire.Web.LivePlugs.LoadCurrentUser","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentUser.html#mount/3","title":"Bonfire.Web.LivePlugs.LoadCurrentUser.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentUserCircles.html","title":"Bonfire.Web.LivePlugs.LoadCurrentUserCircles","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.LoadCurrentUserCircles.html#mount/3","title":"Bonfire.Web.LivePlugs.LoadCurrentUserCircles.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.LivePlugs.UserRequired.html","title":"Bonfire.Web.LivePlugs.UserRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.LivePlugs.UserRequired.html#mount/3","title":"Bonfire.Web.LivePlugs.UserRequired.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.AccountRequired.html","title":"Bonfire.Web.Plugs.AccountRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.AccountRequired.html#call/2","title":"Bonfire.Web.Plugs.AccountRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.AccountRequired.html#init/1","title":"Bonfire.Web.Plugs.AccountRequired.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.AdminRequired.html","title":"Bonfire.Web.Plugs.AdminRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.AdminRequired.html#call/2","title":"Bonfire.Web.Plugs.AdminRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.AdminRequired.html#init/1","title":"Bonfire.Web.Plugs.AdminRequired.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccount.html","title":"Bonfire.Web.Plugs.LoadCurrentAccount","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccount.html#call/2","title":"Bonfire.Web.Plugs.LoadCurrentAccount.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccount.html#init/1","title":"Bonfire.Web.Plugs.LoadCurrentAccount.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccountUsers.html","title":"Bonfire.Web.Plugs.LoadCurrentAccountUsers","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccountUsers.html#call/2","title":"Bonfire.Web.Plugs.LoadCurrentAccountUsers.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentAccountUsers.html#init/1","title":"Bonfire.Web.Plugs.LoadCurrentAccountUsers.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentUser.html","title":"Bonfire.Web.Plugs.LoadCurrentUser","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentUser.html#call/2","title":"Bonfire.Web.Plugs.LoadCurrentUser.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.LoadCurrentUser.html#init/1","title":"Bonfire.Web.Plugs.LoadCurrentUser.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.UserRequired.html","title":"Bonfire.Web.Plugs.UserRequired","type":"module"},{"doc":"","ref":"Bonfire.Web.Plugs.UserRequired.html#call/2","title":"Bonfire.Web.Plugs.UserRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Plugs.UserRequired.html#init/1","title":"Bonfire.Web.Plugs.UserRequired.init/1","type":"function"},{"doc":"","ref":"Bonfire.Social.APActivities.html","title":"Bonfire.Social.APActivities","type":"module"},{"doc":"","ref":"Bonfire.Social.APActivities.html#create/3","title":"Bonfire.Social.APActivities.create/3","type":"function"},{"doc":"","ref":"Bonfire.Social.APActivities.html#insert/1","title":"Bonfire.Social.APActivities.insert/1","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html","title":"Bonfire.Social.API.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#activity_object/1","title":"Bonfire.Social.API.GraphQL.activity_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#activity_object/3","title":"Bonfire.Social.API.GraphQL.activity_object/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#get_activity/3","title":"Bonfire.Social.API.GraphQL.get_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#get_post/3","title":"Bonfire.Social.API.GraphQL.get_post/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#list_posts/3","title":"Bonfire.Social.API.GraphQL.list_posts/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html","title":"Bonfire.Social.Activities","type":"module"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_preloads/3","title":"Bonfire.Social.Activities.activity_preloads/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/1","title":"Bonfire.Social.Activities.activity_under_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/2","title":"Bonfire.Social.Activities.activity_under_object/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#as_permitted_for/2","title":"Bonfire.Social.Activities.as_permitted_for/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#by_subject_verb_object_q/3","title":"Bonfire.Social.Activities.by_subject_verb_object_q/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#changeset/2","title":"Bonfire.Social.Activities.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#context_module/0","title":"Bonfire.Social.Activities.context_module/0","type":"function"},{"doc":"Create an Activity NOTE: you will usually want to use FeedActivities.publish/3 instead","ref":"Bonfire.Social.Activities.html#create/3","title":"Bonfire.Social.Activities.create/3","type":"function"},{"doc":"Delete an activity (usage by things like unlike)","ref":"Bonfire.Social.Activities.html#delete_by_subject_verb_object/3","title":"Bonfire.Social.Activities.delete_by_subject_verb_object/3","type":"function"},{"doc":"Get an activity by its ID","ref":"Bonfire.Social.Activities.html#get/2","title":"Bonfire.Social.Activities.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#load_object/1","title":"Bonfire.Social.Activities.load_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#maybe_my_boost/2","title":"Bonfire.Social.Activities.maybe_my_boost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#maybe_my_flag/2","title":"Bonfire.Social.Activities.maybe_my_flag/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#maybe_my_like/2","title":"Bonfire.Social.Activities.maybe_my_like/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_from_activity/1","title":"Bonfire.Social.Activities.object_from_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_preload_activity/3","title":"Bonfire.Social.Activities.object_preload_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_preload_create_activity/2","title":"Bonfire.Social.Activities.object_preload_create_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#queries_module/0","title":"Bonfire.Social.Activities.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query/2","title":"Bonfire.Social.Activities.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_activity/5","title":"Bonfire.Social.Activities.query_object_preload_activity/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_create_activity/3","title":"Bonfire.Social.Activities.query_object_preload_create_activity/3","type":"function"},{"doc":"Get an activity by its object ID (usually a create activity)","ref":"Bonfire.Social.Activities.html#read/2","title":"Bonfire.Social.Activities.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html","title":"Bonfire.Social.Boosts","type":"module"},{"doc":"","ref":"Bonfire.Social.Boosts.html#ap_publish_activity/2","title":"Bonfire.Social.Boosts.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#ap_receive_activity/3","title":"Bonfire.Social.Boosts.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#boost/2","title":"Bonfire.Social.Boosts.boost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#boosted?/2","title":"Bonfire.Social.Boosts.boosted?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#by_any/1","title":"Bonfire.Social.Boosts.by_any/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#by_boosted/1","title":"Bonfire.Social.Boosts.by_boosted/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#by_booster/1","title":"Bonfire.Social.Boosts.by_booster/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#context_module/0","title":"Bonfire.Social.Boosts.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#federation_module/0","title":"Bonfire.Social.Boosts.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#filter/3","title":"Bonfire.Social.Boosts.filter/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#get/2","title":"Bonfire.Social.Boosts.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#get!/2","title":"Bonfire.Social.Boosts.get!/2","type":"function"},{"doc":"List boosts by the user and which are in their outbox","ref":"Bonfire.Social.Boosts.html#list_by/4","title":"Bonfire.Social.Boosts.list_by/4","type":"function"},{"doc":"List current user's boosts, which are in their outbox","ref":"Bonfire.Social.Boosts.html#list_my/3","title":"Bonfire.Social.Boosts.list_my/3","type":"function"},{"doc":"List boost of an object and which are in a feed","ref":"Bonfire.Social.Boosts.html#list_of/4","title":"Bonfire.Social.Boosts.list_of/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#queries_module/0","title":"Bonfire.Social.Boosts.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#query/2","title":"Bonfire.Social.Boosts.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#unboost/2","title":"Bonfire.Social.Boosts.unboost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.LiveHandler.html","title":"Bonfire.Social.Boosts.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Boosts.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Boosts.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html","title":"Bonfire.Social.FeedActivities","type":"module"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#context_module/0","title":"Bonfire.Social.FeedActivities.context_module/0","type":"function"},{"doc":"Delete an activity (usage by things like unlike)","ref":"Bonfire.Social.FeedActivities.html#delete_for_object/1","title":"Bonfire.Social.FeedActivities.delete_for_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#feed/4","title":"Bonfire.Social.FeedActivities.feed/4","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#feed/5","title":"Bonfire.Social.FeedActivities.feed/5","type":"function"},{"doc":"Return a page of Feed Activities (reverse chronological) + pagination metadata","ref":"Bonfire.Social.FeedActivities.html#feed_paginated/5","title":"Bonfire.Social.FeedActivities.feed_paginated/5","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#feeds_for_activity/1","title":"Bonfire.Social.FeedActivities.feeds_for_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#maybe_federate_activity/1","title":"Bonfire.Social.FeedActivities.maybe_federate_activity/1","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to specified feeds","ref":"Bonfire.Social.FeedActivities.html#maybe_feed_publish/4","title":"Bonfire.Social.FeedActivities.maybe_feed_publish/4","type":"function"},{"doc":"Takes or creates an activity and publishes to object creator's inbox","ref":"Bonfire.Social.FeedActivities.html#maybe_notify_creator/3","title":"Bonfire.Social.FeedActivities.maybe_notify_creator/3","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#my_feed/3","title":"Bonfire.Social.FeedActivities.my_feed/3","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to creator's inbox","ref":"Bonfire.Social.FeedActivities.html#notify_admins/3","title":"Bonfire.Social.FeedActivities.notify_admins/3","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to object's inbox (if object is an actor)","ref":"Bonfire.Social.FeedActivities.html#notify_characters/4","title":"Bonfire.Social.FeedActivities.notify_characters/4","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#notify_inboxes/4","title":"Bonfire.Social.FeedActivities.notify_inboxes/4","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to object's inbox (assuming object is treated as a character)","ref":"Bonfire.Social.FeedActivities.html#notify_object/3","title":"Bonfire.Social.FeedActivities.notify_object/3","type":"function"},{"doc":"Creates a new local activity and publishes to appropriate feeds","ref":"Bonfire.Social.FeedActivities.html#publish/6","title":"Bonfire.Social.FeedActivities.publish/6","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#queries_module/0","title":"Bonfire.Social.FeedActivities.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query/4","title":"Bonfire.Social.FeedActivities.query/4","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query_paginated/5","title":"Bonfire.Social.FeedActivities.query_paginated/5","type":"function"},{"doc":"Records a remote activity and puts in appropriate feeds","ref":"Bonfire.Social.FeedActivities.html#save_fediverse_incoming_activity/3","title":"Bonfire.Social.FeedActivities.save_fediverse_incoming_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html","title":"Bonfire.Social.Feeds","type":"module"},{"doc":"","ref":"Bonfire.Social.Feeds.html#admins_inbox/0","title":"Bonfire.Social.Feeds.admins_inbox/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#admins_inbox/1","title":"Bonfire.Social.Feeds.admins_inbox/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#changeset/2","title":"Bonfire.Social.Feeds.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#context_module/0","title":"Bonfire.Social.Feeds.context_module/0","type":"function"},{"doc":"Create a new generic feed","ref":"Bonfire.Social.Feeds.html#create/0","title":"Bonfire.Social.Feeds.create/0","type":"function"},{"doc":"Create a OUTBOX feed for an existing Pointable (eg. User)","ref":"Bonfire.Social.Feeds.html#create/1","title":"Bonfire.Social.Feeds.create/1","type":"function"},{"doc":"Create a INBOX feed for an existing Pointable (eg. User)","ref":"Bonfire.Social.Feeds.html#create_inbox/1","title":"Bonfire.Social.Feeds.create_inbox/1","type":"function"},{"doc":"Get or create feed for something","ref":"Bonfire.Social.Feeds.html#feed_for/1","title":"Bonfire.Social.Feeds.feed_for/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#feed_for_id_query/1","title":"Bonfire.Social.Feeds.feed_for_id_query/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#inbox_feed_ids/1","title":"Bonfire.Social.Feeds.inbox_feed_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#inbox_of_obj_creator/1","title":"Bonfire.Social.Feeds.inbox_of_obj_creator/1","type":"function"},{"doc":"Get a feed for something if any exists","ref":"Bonfire.Social.Feeds.html#maybe_feed_for/1","title":"Bonfire.Social.Feeds.maybe_feed_for/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#my_feed_ids/3","title":"Bonfire.Social.Feeds.my_feed_ids/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#my_inbox_feed_id/1","title":"Bonfire.Social.Feeds.my_inbox_feed_id/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#named_feed_id/1","title":"Bonfire.Social.Feeds.named_feed_id/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#tags_inbox_feeds/1","title":"Bonfire.Social.Feeds.tags_inbox_feeds/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html","title":"Bonfire.Social.Feeds.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#assign_feed/2","title":"Bonfire.Social.Feeds.LiveHandler.assign_feed/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Feeds.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_info/2","title":"Bonfire.Social.Feeds.LiveHandler.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_params/3","title":"Bonfire.Social.Feeds.LiveHandler.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#live_more/2","title":"Bonfire.Social.Feeds.LiveHandler.live_more/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html","title":"Bonfire.Social.Flags","type":"module"},{"doc":"","ref":"Bonfire.Social.Flags.html#ap_publish_activity/2","title":"Bonfire.Social.Flags.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#by_any/1","title":"Bonfire.Social.Flags.by_any/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#by_flagged/1","title":"Bonfire.Social.Flags.by_flagged/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#by_flagger/1","title":"Bonfire.Social.Flags.by_flagger/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#context_module/0","title":"Bonfire.Social.Flags.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#federation_module/0","title":"Bonfire.Social.Flags.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#filter/3","title":"Bonfire.Social.Flags.filter/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#flag/2","title":"Bonfire.Social.Flags.flag/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#flagged?/2","title":"Bonfire.Social.Flags.flagged?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#get/2","title":"Bonfire.Social.Flags.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#get!/2","title":"Bonfire.Social.Flags.get!/2","type":"function"},{"doc":"List all flags (which are in a feed). Only for admins.","ref":"Bonfire.Social.Flags.html#list/3","title":"Bonfire.Social.Flags.list/3","type":"function"},{"doc":"List flags by the user and which are in their outbox","ref":"Bonfire.Social.Flags.html#list_by/4","title":"Bonfire.Social.Flags.list_by/4","type":"function"},{"doc":"List current user's flags, which are in their outbox","ref":"Bonfire.Social.Flags.html#list_my/3","title":"Bonfire.Social.Flags.list_my/3","type":"function"},{"doc":"List flag of an object and which are in a feed","ref":"Bonfire.Social.Flags.html#list_of/4","title":"Bonfire.Social.Flags.list_of/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#unflag/2","title":"Bonfire.Social.Flags.unflag/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.LiveHandler.html","title":"Bonfire.Social.Flags.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Flags.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Flags.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html","title":"Bonfire.Social.Follows","type":"module"},{"doc":"","ref":"Bonfire.Social.Follows.html#ap_publish_activity/2","title":"Bonfire.Social.Follows.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#ap_receive_activity/3","title":"Bonfire.Social.Follows.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#by_any/1","title":"Bonfire.Social.Follows.by_any/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#by_followed/1","title":"Bonfire.Social.Follows.by_followed/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#by_follower/1","title":"Bonfire.Social.Follows.by_follower/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#context_module/0","title":"Bonfire.Social.Follows.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#federation_module/0","title":"Bonfire.Social.Follows.federation_module/0","type":"function"},{"doc":"Follow someone/something, and federate it","ref":"Bonfire.Social.Follows.html#follow/2","title":"Bonfire.Social.Follows.follow/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#follower_by_followed/1","title":"Bonfire.Social.Follows.follower_by_followed/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#following?/2","title":"Bonfire.Social.Follows.following?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#get/2","title":"Bonfire.Social.Follows.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#get!/2","title":"Bonfire.Social.Follows.get!/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_followed/5","title":"Bonfire.Social.Follows.list_followed/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_followers/5","title":"Bonfire.Social.Follows.list_followers/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_my_followed/4","title":"Bonfire.Social.Follows.list_my_followed/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_my_followers/4","title":"Bonfire.Social.Follows.list_my_followers/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#queries_module/0","title":"Bonfire.Social.Follows.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#query/2","title":"Bonfire.Social.Follows.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#unfollow/2","title":"Bonfire.Social.Follows.unfollow/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html","title":"Bonfire.Social.Follows.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Follows.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html#preload/1","title":"Bonfire.Social.Follows.LiveHandler.preload/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html","title":"Bonfire.Social.Integration","type":"module"},{"doc":"","ref":"Bonfire.Social.Integration.html#activity_ap_publish/3","title":"Bonfire.Social.Integration.activity_ap_publish/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#ap_publish/3","title":"Bonfire.Social.Integration.ap_publish/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#indexing_format_tags/1","title":"Bonfire.Social.Integration.indexing_format_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#mailer/0","title":"Bonfire.Social.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#maybe_index/1","title":"Bonfire.Social.Integration.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#repo/0","title":"Bonfire.Social.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html","title":"Bonfire.Social.Likes","type":"module"},{"doc":"","ref":"Bonfire.Social.Likes.html#ap_publish_activity/2","title":"Bonfire.Social.Likes.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#ap_receive_activity/3","title":"Bonfire.Social.Likes.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_any/1","title":"Bonfire.Social.Likes.by_any/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_liked/1","title":"Bonfire.Social.Likes.by_liked/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_liker/1","title":"Bonfire.Social.Likes.by_liker/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_liker/2","title":"Bonfire.Social.Likes.by_liker/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#context_module/0","title":"Bonfire.Social.Likes.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#federation_module/0","title":"Bonfire.Social.Likes.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#filter/3","title":"Bonfire.Social.Likes.filter/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#get/2","title":"Bonfire.Social.Likes.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#get!/2","title":"Bonfire.Social.Likes.get!/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#like/2","title":"Bonfire.Social.Likes.like/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#liked?/2","title":"Bonfire.Social.Likes.liked?/2","type":"function"},{"doc":"List likes by the user","ref":"Bonfire.Social.Likes.html#list_by/4","title":"Bonfire.Social.Likes.list_by/4","type":"function"},{"doc":"List current user's likes","ref":"Bonfire.Social.Likes.html#list_my/3","title":"Bonfire.Social.Likes.list_my/3","type":"function"},{"doc":"List likes of something","ref":"Bonfire.Social.Likes.html#list_of/4","title":"Bonfire.Social.Likes.list_of/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#queries_module/0","title":"Bonfire.Social.Likes.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#unlike/2","title":"Bonfire.Social.Likes.unlike/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html","title":"Bonfire.Social.Likes.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Likes.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#liker_count/1","title":"Bonfire.Social.Likes.LiveHandler.liker_count/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#preload/1","title":"Bonfire.Social.Likes.LiveHandler.preload/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#set_liked/4","title":"Bonfire.Social.Likes.LiveHandler.set_liked/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html","title":"Bonfire.Social.Messages","type":"module"},{"doc":"","ref":"Bonfire.Social.Messages.html#ap_publish_activity/2","title":"Bonfire.Social.Messages.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#ap_receive_activity/3","title":"Bonfire.Social.Messages.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#context_module/0","title":"Bonfire.Social.Messages.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#draft/2","title":"Bonfire.Social.Messages.draft/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#federation_module/0","title":"Bonfire.Social.Messages.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#filter/3","title":"Bonfire.Social.Messages.filter/3","type":"function"},{"doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Social.Messages.html#list/4","title":"Bonfire.Social.Messages.list/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#list_paginated/5","title":"Bonfire.Social.Messages.list_paginated/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#read/2","title":"Bonfire.Social.Messages.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#send/2","title":"Bonfire.Social.Messages.send/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html","title":"Bonfire.Social.Messages.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#send_message/2","title":"Bonfire.Social.Messages.LiveHandler.send_message/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Migrations.html","title":"Bonfire.Social.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Social.Migrations.html#migrate_social/0","title":"Bonfire.Social.Migrations.migrate_social/0","type":"macro"},{"doc":"","ref":"Bonfire.Social.Migrations.html#migrate_social/1","title":"Bonfire.Social.Migrations.migrate_social/1","type":"macro"},{"doc":"","ref":"Bonfire.Social.Migrations.html#ms/1","title":"Bonfire.Social.Migrations.ms/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html","title":"Bonfire.Social.Objects","type":"module"},{"doc":"","ref":"Bonfire.Social.Objects.html#object_creator/1","title":"Bonfire.Social.Objects.object_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#preload_creator/1","title":"Bonfire.Social.Objects.preload_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#preload_reply_creator/1","title":"Bonfire.Social.Objects.preload_reply_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#read/2","title":"Bonfire.Social.Objects.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html","title":"Bonfire.Social.PostContents","type":"module"},{"doc":"","ref":"Bonfire.Social.PostContents.html#changeset/2","title":"Bonfire.Social.PostContents.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#indexing_object_format/1","title":"Bonfire.Social.PostContents.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#prepare_content/2","title":"Bonfire.Social.PostContents.prepare_content/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#prepare_text/1","title":"Bonfire.Social.PostContents.prepare_text/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html","title":"Bonfire.Social.Posts","type":"module"},{"doc":"","ref":"Bonfire.Social.Posts.html#ap_publish_activity/2","title":"Bonfire.Social.Posts.ap_publish_activity/2","type":"function"},{"doc":"record an incoming post","ref":"Bonfire.Social.Posts.html#ap_receive_activity/4","title":"Bonfire.Social.Posts.ap_receive_activity/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#changeset/2","title":"Bonfire.Social.Posts.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#context_module/0","title":"Bonfire.Social.Posts.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#draft/2","title":"Bonfire.Social.Posts.draft/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#federation_module/0","title":"Bonfire.Social.Posts.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#filter/3","title":"Bonfire.Social.Posts.filter/3","type":"function"},{"doc":"For internal use only (doesn't check permissions). Use read instead.","ref":"Bonfire.Social.Posts.html#get/1","title":"Bonfire.Social.Posts.get/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#get_query/1","title":"Bonfire.Social.Posts.get_query/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#indexing_object_format/2","title":"Bonfire.Social.Posts.indexing_object_format/2","type":"function"},{"doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Social.Posts.html#list_by/4","title":"Bonfire.Social.Posts.list_by/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#maybe_index/1","title":"Bonfire.Social.Posts.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#publish/3","title":"Bonfire.Social.Posts.publish/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#queries_module/0","title":"Bonfire.Social.Posts.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#query/3","title":"Bonfire.Social.Posts.query/3","type":"function"},{"doc":"List posts with pagination","ref":"Bonfire.Social.Posts.html#query_paginated/3","title":"Bonfire.Social.Posts.query_paginated/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#read/3","title":"Bonfire.Social.Posts.read/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html","title":"Bonfire.Social.Posts.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Posts.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#handle_info/2","title":"Bonfire.Social.Posts.LiveHandler.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#handle_params/3","title":"Bonfire.Social.Posts.LiveHandler.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#live_more/3","title":"Bonfire.Social.Posts.LiveHandler.live_more/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#merge_child/2","title":"Bonfire.Social.Posts.LiveHandler.merge_child/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#post_changeset/1","title":"Bonfire.Social.Posts.LiveHandler.post_changeset/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#post_content_changeset/2","title":"Bonfire.Social.Posts.LiveHandler.post_content_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html","title":"Bonfire.Social.Tags","type":"module"},{"doc":"","ref":"Bonfire.Social.Tags.html#maybe_tag/4","title":"Bonfire.Social.Tags.maybe_tag/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html","title":"Bonfire.Social.Threads","type":"module"},{"doc":"","ref":"Bonfire.Social.Threads.html#arrange_replies_tree/1","title":"Bonfire.Social.Threads.arrange_replies_tree/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#changeset/2","title":"Bonfire.Social.Threads.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#context_module/0","title":"Bonfire.Social.Threads.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#filter/3","title":"Bonfire.Social.Threads.filter/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#get_replied/1","title":"Bonfire.Social.Threads.get_replied/1","type":"function"},{"doc":"List participants in a thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#list_participants/4","title":"Bonfire.Social.Threads.list_participants/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#list_replies/5","title":"Bonfire.Social.Threads.list_replies/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#maybe_push_thread/3","title":"Bonfire.Social.Threads.maybe_push_thread/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#maybe_reply/1","title":"Bonfire.Social.Threads.maybe_reply/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#queries_module/0","title":"Bonfire.Social.Threads.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#query/3","title":"Bonfire.Social.Threads.query/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#read/2","title":"Bonfire.Social.Threads.read/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.DiscussionLive.html","title":"Bonfire.Social.Web.DiscussionLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.DiscussionLive.html#handle_event/3","title":"Bonfire.Social.Web.DiscussionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.DiscussionLive.html#handle_info/2","title":"Bonfire.Social.Web.DiscussionLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.DiscussionLive.html#handle_params/3","title":"Bonfire.Social.Web.DiscussionLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.DiscussionLive.html#mount/3","title":"Bonfire.Social.Web.DiscussionLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.DiscussionLive.html#render/1","title":"Bonfire.Social.Web.DiscussionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html","title":"Bonfire.Social.Web.Feeds.BrowseLive","type":"module"},{"doc":"","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#default_feed/1","title":"Bonfire.Social.Web.Feeds.BrowseLive.default_feed/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#do_handle_params/3","title":"Bonfire.Social.Web.Feeds.BrowseLive.do_handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#fediverse_feed/1","title":"Bonfire.Social.Web.Feeds.BrowseLive.fediverse_feed/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#handle_event/3","title":"Bonfire.Social.Web.Feeds.BrowseLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#handle_info/2","title":"Bonfire.Social.Web.Feeds.BrowseLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#handle_params/3","title":"Bonfire.Social.Web.Feeds.BrowseLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#instance_feed/1","title":"Bonfire.Social.Web.Feeds.BrowseLive.instance_feed/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#mount/3","title":"Bonfire.Social.Web.Feeds.BrowseLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#my_feed/2","title":"Bonfire.Social.Web.Feeds.BrowseLive.my_feed/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.Feeds.BrowseLive.html#render/1","title":"Bonfire.Social.Web.Feeds.BrowseLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html","title":"Bonfire.Social.Web.Feeds.FavouritedLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html#handle_event/3","title":"Bonfire.Social.Web.Feeds.FavouritedLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html#handle_info/2","title":"Bonfire.Social.Web.Feeds.FavouritedLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html#handle_params/3","title":"Bonfire.Social.Web.Feeds.FavouritedLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html#mount/3","title":"Bonfire.Social.Web.Feeds.FavouritedLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.Feeds.FavouritedLive.html#render/1","title":"Bonfire.Social.Web.Feeds.FavouritedLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.Feeds.FederationLive.html","title":"Bonfire.Social.Web.Feeds.FederationLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.Feeds.FederationLive.html#handle_event/3","title":"Bonfire.Social.Web.Feeds.FederationLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.Feeds.FederationLive.html#handle_info/2","title":"Bonfire.Social.Web.Feeds.FederationLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.Feeds.FederationLive.html#handle_params/3","title":"Bonfire.Social.Web.Feeds.FederationLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.Feeds.FederationLive.html#mount/3","title":"Bonfire.Social.Web.Feeds.FederationLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.Feeds.FederationLive.html#render/1","title":"Bonfire.Social.Web.Feeds.FederationLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.Feeds.LocalLive.html","title":"Bonfire.Social.Web.Feeds.LocalLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.Feeds.LocalLive.html#handle_event/3","title":"Bonfire.Social.Web.Feeds.LocalLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.Feeds.LocalLive.html#handle_info/2","title":"Bonfire.Social.Web.Feeds.LocalLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.Feeds.LocalLive.html#handle_params/3","title":"Bonfire.Social.Web.Feeds.LocalLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.Feeds.LocalLive.html#mount/3","title":"Bonfire.Social.Web.Feeds.LocalLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.Feeds.LocalLive.html#render/1","title":"Bonfire.Social.Web.Feeds.LocalLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html","title":"Bonfire.Social.Web.Feeds.NotificationsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html#handle_event/3","title":"Bonfire.Social.Web.Feeds.NotificationsLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html#handle_info/2","title":"Bonfire.Social.Web.Feeds.NotificationsLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html#handle_params/3","title":"Bonfire.Social.Web.Feeds.NotificationsLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html#mount/3","title":"Bonfire.Social.Web.Feeds.NotificationsLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.Feeds.NotificationsLive.html#render/1","title":"Bonfire.Social.Web.Feeds.NotificationsLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.HomeLive.html","title":"Bonfire.Social.Web.HomeLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.HomeLive.html#handle_event/3","title":"Bonfire.Social.Web.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.HomeLive.html#handle_info/2","title":"Bonfire.Social.Web.HomeLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.HomeLive.html#handle_params/3","title":"Bonfire.Social.Web.HomeLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.HomeLive.html#mount/3","title":"Bonfire.Social.Web.HomeLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.HomeLive.html#render/1","title":"Bonfire.Social.Web.HomeLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.MessageLive.html","title":"Bonfire.Social.Web.MessageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.MessageLive.html#handle_event/3","title":"Bonfire.Social.Web.MessageLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.MessageLive.html#handle_info/2","title":"Bonfire.Social.Web.MessageLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.MessageLive.html#handle_params/3","title":"Bonfire.Social.Web.MessageLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.MessageLive.html#mount/3","title":"Bonfire.Social.Web.MessageLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.MessageLive.html#render/1","title":"Bonfire.Social.Web.MessageLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.PostLive.html","title":"Bonfire.Social.Web.PostLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Social.Web.PostLive.html#handle_event/3","title":"Bonfire.Social.Web.PostLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Social.Web.PostLive.html#handle_info/2","title":"Bonfire.Social.Web.PostLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Social.Web.PostLive.html#handle_params/3","title":"Bonfire.Social.Web.PostLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.PostLive.html#mount/3","title":"Bonfire.Social.Web.PostLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.PostLive.html#render/1","title":"Bonfire.Social.Web.PostLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Web.Routes.html","title":"Bonfire.Social.Web.Routes","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Social.Web.UsersLive.html","title":"Bonfire.Social.Web.UsersLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Social.Web.UsersLive.html#mount/3","title":"Bonfire.Social.Web.UsersLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Social.Web.UsersLive.html#render/1","title":"Bonfire.Social.Web.UsersLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html","title":"Bonfire.Mailer","type":"module"},{"doc":"","ref":"Bonfire.Mailer.html#deliver/1","title":"Bonfire.Mailer.deliver/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_later/2","title":"Bonfire.Mailer.deliver_later/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_later!/2","title":"Bonfire.Mailer.deliver_later!/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_now/2","title":"Bonfire.Mailer.deliver_now/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_now!/2","title":"Bonfire.Mailer.deliver_now!/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#handle_error/1","title":"Bonfire.Mailer.handle_error/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#send_now/2","title":"Bonfire.Mailer.send_now/2","type":"function"},{"doc":"Functions for checking the validity of email addresses and domains","ref":"Bonfire.Mailer.Checker.html","title":"Bonfire.Mailer.Checker","type":"module"},{"doc":"Checks whether an email domain is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_domain/1","title":"Bonfire.Mailer.Checker.validate_domain/1","type":"function"},{"doc":"Checks whether an email is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_email/1","title":"Bonfire.Mailer.Checker.validate_email/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.Checker.html#t:error_reason/0","title":"Bonfire.Mailer.Checker.error_reason/0","type":"type"},{"doc":"A context for working with Pointers, a sort of global foreign key scheme.","ref":"Pointers.html","title":"Pointers","type":"module"},{"doc":"Return the provided pointer when it belongs to table queryable by the given table search term.","ref":"Pointers.html#assert_points_to!/2","title":"Pointers.assert_points_to!/2","type":"function"},{"doc":"Returns a Pointer, either the one provided or a synthesised one pointing to the provided schema object. Does not hit the database or cause the pointer to be written to the database whatsoever.","ref":"Pointers.html#cast!/1","title":"Pointers.cast!/1","type":"function"},{"doc":"Given a list of pointers which may or may have their pointed loaded, return a plan for preloading, a map of module name to set of loadable IDs.","ref":"Pointers.html#plan/1","title":"Pointers.plan/1","type":"function"},{"doc":"","ref":"Pointers.html#schema/1","title":"Pointers.schema/1","type":"function"},{"doc":"Looks up the table for a given pointer","ref":"Pointers.html#table/1","title":"Pointers.table/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html","title":"Pointers.Changesets","type":"module"},{"doc":"","ref":"Pointers.Changesets.html#assoc_changeset/4","title":"Pointers.Changesets.assoc_changeset/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#auto/4","title":"Pointers.Changesets.auto/4","type":"macro"},{"doc":"","ref":"Pointers.Changesets.html#auto/5","title":"Pointers.Changesets.auto/5","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#cast_assoc/4","title":"Pointers.Changesets.cast_assoc/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#config_for/1","title":"Pointers.Changesets.config_for/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#config_for/3","title":"Pointers.Changesets.config_for/3","type":"function"},{"doc":"True if the schema object's current state is :built","ref":"Pointers.Changesets.html#is_built?/1","title":"Pointers.Changesets.is_built?/1","type":"function"},{"doc":"True if the schema object's current state is :deleted","ref":"Pointers.Changesets.html#is_deleted?/1","title":"Pointers.Changesets.is_deleted?/1","type":"function"},{"doc":"True if the schema object's current state is :loaded","ref":"Pointers.Changesets.html#is_loaded?/1","title":"Pointers.Changesets.is_loaded?/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#merge_child_errors/1","title":"Pointers.Changesets.merge_child_errors/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#put_assoc/3","title":"Pointers.Changesets.put_assoc/3","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#replicate_map_change/4","title":"Pointers.Changesets.replicate_map_change/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#replicate_map_valid_change/4","title":"Pointers.Changesets.replicate_map_valid_change/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#rewrite_child_errors/1","title":"Pointers.Changesets.rewrite_child_errors/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#rewrite_constraint_errors/1","title":"Pointers.Changesets.rewrite_constraint_errors/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#rewrite_errors/3","title":"Pointers.Changesets.rewrite_errors/3","type":"function"},{"doc":"Returns the schema object's current state.","ref":"Pointers.Changesets.html#state/1","title":"Pointers.Changesets.state/1","type":"function"},{"doc":"true if the provided changeset or list of changesets is valid.","ref":"Pointers.Changesets.html#valid?/1","title":"Pointers.Changesets.valid?/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#verb/1","title":"Pointers.Changesets.verb/1","type":"function"},{"doc":"Helpers for writing Pointer-aware migrations.","ref":"Pointers.Migration.html","title":"Pointers.Migration","type":"module"},{"doc":"Adds a pointer primary key to the table. Not required if you are using create_pointable_table","ref":"Pointers.Migration.html#add_pointer_pk/0","title":"Pointers.Migration.add_pointer_pk/0","type":"function"},{"doc":"","ref":"Pointers.Migration.html#add_pointer_ref_pk/0","title":"Pointers.Migration.add_pointer_ref_pk/0","type":"function"},{"doc":"Creates a mixin table - one with a ULID primary key and no trigger","ref":"Pointers.Migration.html#create_mixin_table/3","title":"Pointers.Migration.create_mixin_table/3","type":"macro"},{"doc":"Creates a pointable table along with its trigger.","ref":"Pointers.Migration.html#create_pointable_table/2","title":"Pointers.Migration.create_pointable_table/2","type":"macro"},{"doc":"","ref":"Pointers.Migration.html#create_pointable_table/3","title":"Pointers.Migration.create_pointable_table/3","type":"macro"},{"doc":"","ref":"Pointers.Migration.html#create_pointable_table/4","title":"Pointers.Migration.create_pointable_table/4","type":"macro"},{"doc":"Creates a random table - one with a UUID v4 primary key.","ref":"Pointers.Migration.html#create_random_table/3","title":"Pointers.Migration.create_random_table/3","type":"macro"},{"doc":"Drops a mixin table.","ref":"Pointers.Migration.html#drop_mixin_table/1","title":"Pointers.Migration.drop_mixin_table/1","type":"function"},{"doc":"Drops a pointable table","ref":"Pointers.Migration.html#drop_pointable_table/1","title":"Pointers.Migration.drop_pointable_table/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_pointable_table/2","title":"Pointers.Migration.drop_pointable_table/2","type":"function"},{"doc":"Drops a random table.","ref":"Pointers.Migration.html#drop_random_table/1","title":"Pointers.Migration.drop_random_table/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_table/1","title":"Pointers.Migration.drop_table/1","type":"function"},{"doc":"When migrating up: initialises the pointers database. When migrating down: deinitialises the pointers database.","ref":"Pointers.Migration.html#init_pointers/0","title":"Pointers.Migration.init_pointers/0","type":"function"},{"doc":"Given :up : initialises the pointers database. Given :down : deinitialises the pointers database.","ref":"Pointers.Migration.html#init_pointers/1","title":"Pointers.Migration.init_pointers/1","type":"function"},{"doc":"See Pointers.ULID.Migration.init_pointers_ulid_extra/0 .","ref":"Pointers.Migration.html#init_pointers_ulid_extra/0","title":"Pointers.Migration.init_pointers_ulid_extra/0","type":"function"},{"doc":"Creates a strong, weak or unbreakable pointer depending on type .","ref":"Pointers.Migration.html#pointer/2","title":"Pointers.Migration.pointer/2","type":"function"},{"doc":"A reference to a pointer for use with 'add/3`. A strong pointer will be deleted when the thing it's pointing to is deleted.","ref":"Pointers.Migration.html#strong_pointer/1","title":"Pointers.Migration.strong_pointer/1","type":"function"},{"doc":"A reference to a pointer for use with 'add/3`. An unbreakable pointer will prevent the thing it's pointing to from being deleted.","ref":"Pointers.Migration.html#unbreakable_pointer/1","title":"Pointers.Migration.unbreakable_pointer/1","type":"function"},{"doc":"A reference to a pointer for use with 'add/3`. A weak pointer will be set null when the thing it's pointing to is deleted.","ref":"Pointers.Migration.html#weak_pointer/1","title":"Pointers.Migration.weak_pointer/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#t:pointer_type/0","title":"Pointers.Migration.pointer_type/0","type":"type"},{"doc":"","ref":"Pointers.Mixin.html","title":"Pointers.Mixin","type":"module"},{"doc":"","ref":"Pointers.Mixin.html#mixin_schema/1","title":"Pointers.Mixin.mixin_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Mixin.html#using/2","title":"Pointers.Mixin.using/2","type":"function"},{"doc":"Sets up an Ecto Schema for a Pointable table. Sample Usage use Pointers.Pointable , otp_app : :my_app , # your OTP application&#39;s name source : &quot;my_table&quot; , # default name of table in database table_id : &quot;01EBTVSZJ6X02J01R1XWWPWGZW&quot; # valid ULID to identify table pointable_schema do # ... fields go here, if any end ## Overriding with configuration During ` use ` ( i . e . compilation time ) , we will attempt to load configuration from the provided ` :otp_app ` under the key of the current module . Any values provided here will override the defaults provided to ` use ` . This allows you to configure them after the fact . Additionally , pointables use ` Flexto ` &#39;s `flex_schema()`, so you can provide additional configuration for those in the same place. I shall say it again because it&#39; s important : This happens at * compile time * . You must rebuild the app containing the pointable whenever the configuration changes . ## Introspection Defines a function ` __pointers__ / 1 ` to introspect data . Recognised parameters : ` :role ` - ` :pointable ` ` :table_id ` - retrieves the ULID id of the pointable table . ` :otp_app ` - retrieves the OTP application to which this belongs .","ref":"Pointers.Pointable.html","title":"Pointers.Pointable","type":"module"},{"doc":"","ref":"Pointers.Pointable.html#pointable_schema/1","title":"Pointers.Pointable.pointable_schema/1","type":"macro"},{"doc":"A Pointer is a kind of global foreign key that can point to any of the tables participating in the abstraction.","ref":"Pointers.Pointer.html","title":"Pointers.Pointer","type":"module"},{"doc":"Changeset for creating a Pointer","ref":"Pointers.Pointer.html#create/2","title":"Pointers.Pointer.create/2","type":"function"},{"doc":"Changeset for updating which table a Pointer points to.","ref":"Pointers.Pointer.html#repoint/2","title":"Pointers.Pointer.repoint/2","type":"function"},{"doc":"A securely randomly generated UUID keyed table. Not pointable.","ref":"Pointers.Random.html","title":"Pointers.Random","type":"module"},{"doc":"","ref":"Pointers.Random.html#random_schema/1","title":"Pointers.Random.random_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Random.html#using/2","title":"Pointers.Random.using/2","type":"function"},{"doc":"One Table to rule them all. A record of a table participating in the pointers abstraction - mandatory if participating.","ref":"Pointers.Table.html","title":"Pointers.Table","type":"module"},{"doc":"","ref":"Pointers.Table.html#t:t/0","title":"Pointers.Table.t/0","type":"type"},{"doc":"A Global cache of Tables to be queried by their (Pointer) IDs, table names or Ecto Schema module names. Use of the Table Service requires: You have run the migrations shipped with this library. You have started Pointers.Tables before querying. All OTP applications with pointable Ecto Schemata to be added to the schema path. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Pointers.Tables.html","title":"Pointers.Tables","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Pointers.Tables.html#child_spec/1","title":"Pointers.Tables.child_spec/1","type":"function"},{"doc":"","ref":"Pointers.Tables.html#data/0","title":"Pointers.Tables.data/0","type":"function"},{"doc":"Look up a table id by id, name or schema.","ref":"Pointers.Tables.html#id/1","title":"Pointers.Tables.id/1","type":"function"},{"doc":"Look up a table id by id, name or schema, raise NotFound if not found.","ref":"Pointers.Tables.html#id!/1","title":"Pointers.Tables.id!/1","type":"function"},{"doc":"Look up many ids at once, raise NotFound if any of them are not found","ref":"Pointers.Tables.html#ids!/1","title":"Pointers.Tables.ids!/1","type":"function"},{"doc":"Look up a schema module by id, name or schema","ref":"Pointers.Tables.html#schema/1","title":"Pointers.Tables.schema/1","type":"function"},{"doc":"Look up a schema module by id, name or schema, raise NotFound if not found","ref":"Pointers.Tables.html#schema!/1","title":"Pointers.Tables.schema!/1","type":"function"},{"doc":"Populates the global cache with table data via introspection.","ref":"Pointers.Tables.html#start_link/1","title":"Pointers.Tables.start_link/1","type":"function"},{"doc":"Get a Table identified by name, id or module.","ref":"Pointers.Tables.html#table/1","title":"Pointers.Tables.table/1","type":"function"},{"doc":"Look up a Table by name or id, raise NotFound if not found.","ref":"Pointers.Tables.html#table!/1","title":"Pointers.Tables.table!/1","type":"function"},{"doc":"A query is either a table's (database) name or (Pointer) ID as a binary or the name of its Ecto Schema Module as an atom.","ref":"Pointers.Tables.html#t:query/0","title":"Pointers.Tables.query/0","type":"type"},{"doc":"Has a ULID primary key but is not pointable.","ref":"Pointers.Unpointable.html","title":"Pointers.Unpointable","type":"module"},{"doc":"","ref":"Pointers.Unpointable.html#unpointable_schema/1","title":"Pointers.Unpointable.unpointable_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Unpointable.html#using/2","title":"Pointers.Unpointable.using/2","type":"function"},{"doc":"We could not find the requested object","ref":"Pointers.NotFound.html","title":"Pointers.NotFound","type":"exception"},{"doc":"Creates a new NotFound","ref":"Pointers.NotFound.html#new/1","title":"Pointers.NotFound.new/1","type":"function"},{"doc":"","ref":"Pointers.NotFound.html#t:t/0","title":"Pointers.NotFound.t/0","type":"type"},{"doc":"An Ecto type for ULID strings.","ref":"Pointers.ULID.html","title":"Pointers.ULID","type":"module"},{"doc":"Generates a binary ULID. If a value is provided for timestamp , the generated ULID will be for the provided timestamp. Otherwise, a ULID will be generated for the current time. Arguments: timestamp : A Unix timestamp with millisecond precision.","ref":"Pointers.ULID.html#bingenerate/1","title":"Pointers.ULID.bingenerate/1","type":"function"},{"doc":"","ref":"Pointers.ULID.html#bintimestamp/1","title":"Pointers.ULID.bintimestamp/1","type":"function"},{"doc":"Casts a 26-byte encoded string to ULID or a 16-byte binary unchanged","ref":"Pointers.ULID.html#cast/1","title":"Pointers.ULID.cast/1","type":"function"},{"doc":"Same as cast/1 but raises Ecto.CastError on invalid arguments.","ref":"Pointers.ULID.html#cast!/1","title":"Pointers.ULID.cast!/1","type":"function"},{"doc":"Converts a Crockford Base32 encoded ULID into a binary.","ref":"Pointers.ULID.html#dump/1","title":"Pointers.ULID.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Pointers.ULID.html#embed_as/1","title":"Pointers.ULID.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Pointers.ULID.html#equal?/2","title":"Pointers.ULID.equal?/2","type":"function"},{"doc":"Generates a Crockford Base32 encoded ULID. If a value is provided for timestamp , the generated ULID will be for the provided timestamp. Otherwise, a ULID will be generated for the current time. Arguments: timestamp : A Unix timestamp with millisecond precision.","ref":"Pointers.ULID.html#generate/1","title":"Pointers.ULID.generate/1","type":"function"},{"doc":"Converts a binary ULID into a Crockford Base32 encoded string.","ref":"Pointers.ULID.html#load/1","title":"Pointers.ULID.load/1","type":"function"},{"doc":"","ref":"Pointers.ULID.html#synthesise!/1","title":"Pointers.ULID.synthesise!/1","type":"function"},{"doc":"Returns the timestamp of an encoded or unencoded ULID","ref":"Pointers.ULID.html#timestamp/1","title":"Pointers.ULID.timestamp/1","type":"function"},{"doc":"The underlying schema type.","ref":"Pointers.ULID.html#type/0","title":"Pointers.ULID.type/0","type":"function"},{"doc":"","ref":"Pointers.ULID.Migration.html","title":"Pointers.ULID.Migration","type":"module"},{"doc":"","ref":"Pointers.ULID.Migration.html#init_pointers_ulid_extra/0","title":"Pointers.ULID.Migration.init_pointers_ulid_extra/0","type":"function"},{"doc":"","ref":"Pointers.ULID.Migration.html#init_pointers_ulid_extra/1","title":"Pointers.ULID.Migration.init_pointers_ulid_extra/1","type":"function"},{"doc":"Nodeinfo keeps the contexts that define your domain and business logic. Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Nodeinfo.html","title":"Nodeinfo","type":"module"},{"doc":"Contract for Nodeinfo module adapters","ref":"Nodeinfo.Adapter.html","title":"Nodeinfo.Adapter","type":"behaviour"},{"doc":"","ref":"Nodeinfo.Adapter.html#base_url/0","title":"Nodeinfo.Adapter.base_url/0","type":"function"},{"doc":"","ref":"Nodeinfo.Adapter.html#c:base_url/0","title":"Nodeinfo.Adapter.base_url/0","type":"callback"},{"doc":"","ref":"Nodeinfo.Adapter.html#gather_nodeinfo_data/0","title":"Nodeinfo.Adapter.gather_nodeinfo_data/0","type":"function"},{"doc":"","ref":"Nodeinfo.Adapter.html#c:gather_nodeinfo_data/0","title":"Nodeinfo.Adapter.gather_nodeinfo_data/0","type":"callback"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use NodeinfoWeb , :controller use NodeinfoWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"NodeinfoWeb.html","title":"NodeinfoWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"NodeinfoWeb.html#__using__/1","title":"NodeinfoWeb.__using__/1","type":"macro"},{"doc":"","ref":"NodeinfoWeb.html#channel/0","title":"NodeinfoWeb.channel/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#controller/0","title":"NodeinfoWeb.controller/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#router/0","title":"NodeinfoWeb.router/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#view/0","title":"NodeinfoWeb.view/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html","title":"NodeinfoWeb.NodeinfoController","type":"module"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#nodeinfo/2","title":"NodeinfoWeb.NodeinfoController.nodeinfo/2","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#raw_nodeinfo/1","title":"NodeinfoWeb.NodeinfoController.raw_nodeinfo/1","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#schemas/2","title":"NodeinfoWeb.NodeinfoController.schemas/2","type":"function"},{"doc":"","ref":"NodeinfoWeb.Router.html","title":"NodeinfoWeb.Router","type":"module"},{"doc":"Properties current_user :any activity :map object :map permalink :string showing_within :any hide_reply :boolean reply_click :string viewing_main_object :boolean flagged :any","ref":"Bonfire.UI.Social.Activity.ActionsLive.html","title":"Bonfire.UI.Social.Activity.ActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.ActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any profile :any viewing_main_object :boolean","ref":"Bonfire.UI.Social.Activity.AvatarLive.html","title":"Bonfire.UI.Social.Activity.AvatarLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.AvatarLive.html#render/1","title":"Bonfire.UI.Social.Activity.AvatarLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any object_id :string my_boost :any boost_count :any","ref":"Bonfire.UI.Social.Activity.BoostActionLive.html","title":"Bonfire.UI.Social.Activity.BoostActionLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.Activity.BoostActionLive.html#handle_event/3","title":"Bonfire.UI.Social.Activity.BoostActionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.Activity.BoostActionLive.html#mount/1","title":"Bonfire.UI.Social.Activity.BoostActionLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.Activity.BoostActionLive.html#render/1","title":"Bonfire.UI.Social.Activity.BoostActionLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.BoostNotificationLive.html","title":"Bonfire.UI.Social.Activity.BoostNotificationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.BoostNotificationLive.html#render/1","title":"Bonfire.UI.Social.Activity.BoostNotificationLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.CategoryLive.html","title":"Bonfire.UI.Social.Activity.CategoryLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#crumb_link/1","title":"Bonfire.UI.Social.Activity.CategoryLive.crumb_link/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#name/1","title":"Bonfire.UI.Social.Activity.CategoryLive.name/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#render/1","title":"Bonfire.UI.Social.Activity.CategoryLive.render/1","type":"function"},{"doc":"Properties current_user :any object :any activity :any verb_display :string permalink :string date_ago :string","ref":"Bonfire.UI.Social.Activity.CharacterLive.html","title":"Bonfire.UI.Social.Activity.CharacterLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CharacterLive.html#render/1","title":"Bonfire.UI.Social.Activity.CharacterLive.render/1","type":"function"},{"doc":"Properties current_user :any profile :any character :any permalink :string date_ago :string created_verb_display :string","ref":"Bonfire.UI.Social.Activity.CreatorLive.html","title":"Bonfire.UI.Social.Activity.CreatorLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CreatorLive.html#render/1","title":"Bonfire.UI.Social.Activity.CreatorLive.render/1","type":"function"},{"doc":"Properties current_user :any verb_display :string date_ago :any viewing_main_object :boolean permalink :string","ref":"Bonfire.UI.Social.Activity.DateAgoLive.html","title":"Bonfire.UI.Social.Activity.DateAgoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.DateAgoLive.html#render/1","title":"Bonfire.UI.Social.Activity.DateAgoLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map object :map","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html","title":"Bonfire.UI.Social.Activity.EconomicEventLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#activity_component/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.activity_component/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#maybe_preload_action/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.maybe_preload_action/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.EconomicEventLive.preloads/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#prepare/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.prepare/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#render/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html","title":"Bonfire.UI.Social.Activity.EconomicResourceLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.EconomicResourceLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html#render/1","title":"Bonfire.UI.Social.Activity.EconomicResourceLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map","ref":"Bonfire.UI.Social.Activity.EventActionsLive.html","title":"Bonfire.UI.Social.Activity.EventActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EventActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.EventActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.FollowNotificationLive.html","title":"Bonfire.UI.Social.Activity.FollowNotificationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.FollowNotificationLive.html#render/1","title":"Bonfire.UI.Social.Activity.FollowNotificationLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map, required: true","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html","title":"Bonfire.UI.Social.Activity.IntentTaskLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.IntentTaskLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html#render/1","title":"Bonfire.UI.Social.Activity.IntentTaskLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.LikeNotificationLive.html","title":"Bonfire.UI.Social.Activity.LikeNotificationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.LikeNotificationLive.html#render/1","title":"Bonfire.UI.Social.Activity.LikeNotificationLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :any object :any flagged :any","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html","title":"Bonfire.UI.Social.Activity.MoreActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.MoreActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.NoActionsLive.html","title":"Bonfire.UI.Social.Activity.NoActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.NoActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.NoActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any object :any activity :any viewing_main_object :boolean permalink :string date_ago :string showing_within :any","ref":"Bonfire.UI.Social.Activity.NoteLive.html","title":"Bonfire.UI.Social.Activity.NoteLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.NoteLive.html#post_content/1","title":"Bonfire.UI.Social.Activity.NoteLive.post_content/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.NoteLive.html#render/1","title":"Bonfire.UI.Social.Activity.NoteLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map","ref":"Bonfire.UI.Social.Activity.ProcessActionsLive.html","title":"Bonfire.UI.Social.Activity.ProcessActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map, required: true showing_within :any","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html","title":"Bonfire.UI.Social.Activity.ProcessListLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#activity_component/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.activity_component/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.ProcessListLive.preloads/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#prepare/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.prepare/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.render/1","type":"function"},{"doc":"Properties current_user :any object :map, required: true showing_within :any","ref":"Bonfire.UI.Social.Activity.ProcessReflowLive.html","title":"Bonfire.UI.Social.Activity.ProcessReflowLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessReflowLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessReflowLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map object :map provider :map, required: false date_ago :any permalink :string","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#character/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.character/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#character/2","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.character/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#profile/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.profile/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#profile/2","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.profile/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#provider/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.provider/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#receiver/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.receiver/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.render/1","type":"function"},{"doc":"Properties current_user :any verb_display :string date_ago :any permalink :string","ref":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.html","title":"Bonfire.UI.Social.Activity.RepliedDateAgoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.html#render/1","title":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.render/1","type":"function"},{"doc":"Properties current_user :any permalink :string replied :any boost_count :any showing_within :any hide_reply :any reply_click :any","ref":"Bonfire.UI.Social.Activity.ReplyLive.html","title":"Bonfire.UI.Social.Activity.ReplyLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ReplyLive.html#render/1","title":"Bonfire.UI.Social.Activity.ReplyLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map profile :map character :map date_ago :any permalink :string verb_display :string","ref":"Bonfire.UI.Social.Activity.SubjectLive.html","title":"Bonfire.UI.Social.Activity.SubjectLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.SubjectLive.html#render/1","title":"Bonfire.UI.Social.Activity.SubjectLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map verb :string verb_display :string showing_within :any","ref":"Bonfire.UI.Social.Activity.SubjectMinimalLive.html","title":"Bonfire.UI.Social.Activity.SubjectMinimalLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.SubjectMinimalLive.html#render/1","title":"Bonfire.UI.Social.Activity.SubjectMinimalLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map permalink :string date_ago :string","ref":"Bonfire.UI.Social.Activity.SubjectRepliedLive.html","title":"Bonfire.UI.Social.Activity.SubjectRepliedLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.SubjectRepliedLive.html#render/1","title":"Bonfire.UI.Social.Activity.SubjectRepliedLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Activity.UnknownLive.html","title":"Bonfire.UI.Social.Activity.UnknownLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.UnknownLive.html#render/1","title":"Bonfire.UI.Social.Activity.UnknownLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :map object :any viewing_main_object :boolean showing_within :any, default: :feed hide_reply :boolean reply_click :any","ref":"Bonfire.UI.Social.ActivityLive.html","title":"Bonfire.UI.Social.ActivityLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#actions_for_object_type/2","title":"Bonfire.UI.Social.ActivityLive.actions_for_object_type/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_actions/3","title":"Bonfire.UI.Social.ActivityLive.component_actions/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_activity_maybe_creator/1","title":"Bonfire.UI.Social.ActivityLive.component_activity_maybe_creator/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_activity_subject/3","title":"Bonfire.UI.Social.ActivityLive.component_activity_subject/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_for_object_type/2","title":"Bonfire.UI.Social.ActivityLive.component_for_object_type/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_maybe_reply_to/3","title":"Bonfire.UI.Social.ActivityLive.component_maybe_reply_to/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_object/2","title":"Bonfire.UI.Social.ActivityLive.component_object/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_event_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_event_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_process_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_process_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_standard_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_standard_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#load_reply_to/1","title":"Bonfire.UI.Social.ActivityLive.load_reply_to/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ActivityLive.html#render/1","title":"Bonfire.UI.Social.ActivityLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#verb_display/1","title":"Bonfire.UI.Social.ActivityLive.verb_display/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#verb_maybe_modify/2","title":"Bonfire.UI.Social.ActivityLive.verb_maybe_modify/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.AppsLive.html","title":"Bonfire.UI.Social.AppsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.AppsLive.html#render/1","title":"Bonfire.UI.Social.AppsLive.render/1","type":"function"},{"doc":"Properties current_user :any activity :any","ref":"Bonfire.UI.Social.BannerPreviousThreadLive.html","title":"Bonfire.UI.Social.BannerPreviousThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.BannerPreviousThreadLive.html#render/1","title":"Bonfire.UI.Social.BannerPreviousThreadLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.BoundariesLive.html","title":"Bonfire.UI.Social.BoundariesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.BoundariesLive.html#render/1","title":"Bonfire.UI.Social.BoundariesLive.render/1","type":"function"},{"doc":"Properties current_user :any activity_type_or_reply :any","ref":"Bonfire.UI.Social.BoundariesSelectedLive.html","title":"Bonfire.UI.Social.BoundariesSelectedLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.BoundariesSelectedLive.html#render/1","title":"Bonfire.UI.Social.BoundariesSelectedLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.ChangePasswordViewLive.html","title":"Bonfire.UI.Social.ChangePasswordViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ChangePasswordViewLive.html#render/1","title":"Bonfire.UI.Social.ChangePasswordViewLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.ChangeThemeLive.html","title":"Bonfire.UI.Social.ChangeThemeLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ChangeThemeLive.html#render/1","title":"Bonfire.UI.Social.ChangeThemeLive.render/1","type":"function"},{"doc":"Properties current_user :any comment :map activity :map, default: %{} object :map, default: %{} thread_level :any child_replies :any reply_to_thread_id :any sub_replies_count :integer, default: 0","ref":"Bonfire.UI.Social.CommentLive.html","title":"Bonfire.UI.Social.CommentLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.CommentLive.html#activity/1","title":"Bonfire.UI.Social.CommentLive.activity/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.CommentLive.html#render/1","title":"Bonfire.UI.Social.CommentLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.CommentLive.html#sub_replies_count/1","title":"Bonfire.UI.Social.CommentLive.sub_replies_count/1","type":"function"},{"doc":"Properties current_user :any flash :any requested :any error :any form :any","ref":"Bonfire.UI.Social.ConfirmEmailViewLive.html","title":"Bonfire.UI.Social.ConfirmEmailViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ConfirmEmailViewLive.html#render/1","title":"Bonfire.UI.Social.ConfirmEmailViewLive.render/1","type":"function"},{"doc":"Properties current_user :any create_activity_type :string, default: &quot;post&quot; reply_to_id :string reply_to_thread_id :string smart_input_placeholder :string, default: l(&quot;Write something...&quot;) smart_input_text :string, default: &quot;&quot;, required: false showing_within :any with_editor :boolean, required: false textarea_class :string, default: &quot;block w-full h-full h-40 text-sm transition-all duration-300 ease-in-out rounded-none rounded-t resize-none textarea&quot;","ref":"Bonfire.UI.Social.CreateActivityLive.html","title":"Bonfire.UI.Social.CreateActivityLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.CreateActivityLive.html#activity_type_or_reply/2","title":"Bonfire.UI.Social.CreateActivityLive.activity_type_or_reply/2","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.CreateActivityLive.html#render/1","title":"Bonfire.UI.Social.CreateActivityLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.CreateActivityLive.html#with_editor?/1","title":"Bonfire.UI.Social.CreateActivityLive.with_editor?/1","type":"function"},{"doc":"Properties current_user :any form :any error :any","ref":"Bonfire.UI.Social.CreateUserViewLive.html","title":"Bonfire.UI.Social.CreateUserViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.CreateUserViewLive.html#render/1","title":"Bonfire.UI.Social.CreateUserViewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html","title":"Bonfire.UI.Social.DiffRenderViewLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#file_header/2","title":"Bonfire.UI.Social.DiffRenderViewLive.file_header/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#line_id/2","title":"Bonfire.UI.Social.DiffRenderViewLive.line_id/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#line_number/1","title":"Bonfire.UI.Social.DiffRenderViewLive.line_number/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#line_text/1","title":"Bonfire.UI.Social.DiffRenderViewLive.line_text/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#line_type/1","title":"Bonfire.UI.Social.DiffRenderViewLive.line_type/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#patch_status/1","title":"Bonfire.UI.Social.DiffRenderViewLive.patch_status/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#render/1","title":"Bonfire.UI.Social.DiffRenderViewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DiffRenderViewLive.html#text_content/1","title":"Bonfire.UI.Social.DiffRenderViewLive.text_content/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.EditCircleLive.html","title":"Bonfire.UI.Social.EditCircleLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.EditCircleLive.html#render/1","title":"Bonfire.UI.Social.EditCircleLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.EditCircleLive.html#update/2","title":"Bonfire.UI.Social.EditCircleLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.EmptyTemplateLive.html","title":"Bonfire.UI.Social.EmptyTemplateLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.EmptyTemplateLive.html#render/1","title":"Bonfire.UI.Social.EmptyTemplateLive.render/1","type":"function"},{"doc":"Properties current_user :any feed_title :string","ref":"Bonfire.UI.Social.FeedHeaderLive.html","title":"Bonfire.UI.Social.FeedHeaderLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.FeedHeaderLive.html#render/1","title":"Bonfire.UI.Social.FeedHeaderLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any feed :list page_info :map showing_within :any","ref":"Bonfire.UI.Social.FeedLive.html","title":"Bonfire.UI.Social.FeedLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.FeedLive.html#handle_event/3","title":"Bonfire.UI.Social.FeedLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FeedLive.html#handle_info/2","title":"Bonfire.UI.Social.FeedLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.FeedLive.html#mount/1","title":"Bonfire.UI.Social.FeedLive.mount/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FeedLive.html#preload_objects/2","title":"Bonfire.UI.Social.FeedLive.preload_objects/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FeedLive.html#preloads/2","title":"Bonfire.UI.Social.FeedLive.preloads/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.FeedLive.html#render/1","title":"Bonfire.UI.Social.FeedLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.FeedLive.html#update/2","title":"Bonfire.UI.Social.FeedLive.update/2","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true feed :any feed_id :string, required: true page_info :any showing_within :any, default: nil","ref":"Bonfire.UI.Social.FeedViewLive.html","title":"Bonfire.UI.Social.FeedViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.FeedViewLive.html#render/1","title":"Bonfire.UI.Social.FeedViewLive.render/1","type":"function"},{"doc":"Properties current_user :any object :any activity :any flagged :any","ref":"Bonfire.UI.Social.FlagActionLive.html","title":"Bonfire.UI.Social.FlagActionLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.FlagActionLive.html#render/1","title":"Bonfire.UI.Social.FlagActionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any object_id :any following :list my_follow :any","ref":"Bonfire.UI.Social.FollowButtonLive.html","title":"Bonfire.UI.Social.FollowButtonLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.FollowButtonLive.html#handle_event/3","title":"Bonfire.UI.Social.FollowButtonLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.FollowButtonLive.html#mount/1","title":"Bonfire.UI.Social.FollowButtonLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Social.FollowButtonLive.html#preload/1","title":"Bonfire.UI.Social.FollowButtonLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.FollowButtonLive.html#render/1","title":"Bonfire.UI.Social.FollowButtonLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.ForgotPasswordLive.html","title":"Bonfire.UI.Social.ForgotPasswordLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ForgotPasswordLive.html#render/1","title":"Bonfire.UI.Social.ForgotPasswordLive.render/1","type":"function"},{"doc":"Properties current_user :any form :any error :any requested :any","ref":"Bonfire.UI.Social.ForgotPasswordViewLive.html","title":"Bonfire.UI.Social.ForgotPasswordViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ForgotPasswordViewLive.html#render/1","title":"Bonfire.UI.Social.ForgotPasswordViewLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.FullTemplateLive.html","title":"Bonfire.UI.Social.FullTemplateLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.FullTemplateLive.html#render/1","title":"Bonfire.UI.Social.FullTemplateLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.HeaderGuestLive.html","title":"Bonfire.UI.Social.HeaderGuestLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.HeaderGuestLive.html#render/1","title":"Bonfire.UI.Social.HeaderGuestLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.HeaderUserLive.html","title":"Bonfire.UI.Social.HeaderUserLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.HeaderUserLive.html#render/1","title":"Bonfire.UI.Social.HeaderUserLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html","title":"Bonfire.UI.Social.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html#mailer/0","title":"Bonfire.UI.Social.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html#repo/0","title":"Bonfire.UI.Social.Integration.repo/0","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any object_id :string like_count :any, default: 0 liked :list my_like :any label :string","ref":"Bonfire.UI.Social.LikeActionLive.html","title":"Bonfire.UI.Social.LikeActionLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.LikeActionLive.html#handle_event/3","title":"Bonfire.UI.Social.LikeActionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.LikeActionLive.html#mount/1","title":"Bonfire.UI.Social.LikeActionLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.LikeActionLive.html#render/1","title":"Bonfire.UI.Social.LikeActionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any object_id :string like_count :any liked :list my_like :any","ref":"Bonfire.UI.Social.LikeActionWithoutLabelLive.html","title":"Bonfire.UI.Social.LikeActionWithoutLabelLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.LikeActionWithoutLabelLive.html#handle_event/3","title":"Bonfire.UI.Social.LikeActionWithoutLabelLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.LikeActionWithoutLabelLive.html#mount/1","title":"Bonfire.UI.Social.LikeActionWithoutLabelLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.LikeActionWithoutLabelLive.html#render/1","title":"Bonfire.UI.Social.LikeActionWithoutLabelLive.render/1","type":"function"},{"doc":"Properties current_user :any live_handler :string page_info :map target :any","ref":"Bonfire.UI.Social.LoadMoreLive.html","title":"Bonfire.UI.Social.LoadMoreLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.LoadMoreLive.html#render/1","title":"Bonfire.UI.Social.LoadMoreLive.render/1","type":"function"},{"doc":"Properties current_user :any page_info :map","ref":"Bonfire.UI.Social.LoadPreviousLive.html","title":"Bonfire.UI.Social.LoadPreviousLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.LoadPreviousLive.html#render/1","title":"Bonfire.UI.Social.LoadPreviousLive.render/1","type":"function"},{"doc":"Properties current_user :any form :any error :any","ref":"Bonfire.UI.Social.LoginLive.html","title":"Bonfire.UI.Social.LoginLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.LoginLive.html#render/1","title":"Bonfire.UI.Social.LoginLive.render/1","type":"function"},{"doc":"Properties current_user :any form_input_name :string, required: true label :string, default: &quot;&quot; preloaded_options :list, default: [] selected_options :any, default: [] focus_event :string, required: false pick_event :string, required: false remove_event :string, required: false context_id :string","ref":"Bonfire.UI.Social.MultiselectLive.html","title":"Bonfire.UI.Social.MultiselectLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.MultiselectLive.html#render/1","title":"Bonfire.UI.Social.MultiselectLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.MultiselectLive.html#update/2","title":"Bonfire.UI.Social.MultiselectLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.MultiselectLive.LiveHandler.html","title":"Bonfire.UI.Social.MultiselectLive.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.MultiselectLive.LiveHandler.html#handle_event/3","title":"Bonfire.UI.Social.MultiselectLive.LiveHandler.handle_event/3","type":"function"},{"doc":"Properties current_user :any form_input_name :string label :string pick_event :string remove_event :string selected_options :any preloaded_options :any context_id :string","ref":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.html","title":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.html#follow_to_tuple/1","title":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.follow_to_tuple/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.html#render/1","title":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.html#update/2","title":"Bonfire.UI.Social.MultiselectLive.UserSelectorLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.MyCirclesLive.html","title":"Bonfire.UI.Social.MyCirclesLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.MyCirclesLive.html#render/1","title":"Bonfire.UI.Social.MyCirclesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.MyCirclesLive.html#update/2","title":"Bonfire.UI.Social.MyCirclesLive.update/2","type":"function"},{"doc":"Properties current_user :any page :any inner_content :any","ref":"Bonfire.UI.Social.NavLive.html","title":"Bonfire.UI.Social.NavLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.NavLive.html#render/1","title":"Bonfire.UI.Social.NavLive.render/1","type":"function"},{"doc":"Properties current_user :any page :string page_title :string has_private_tab :boolean search_placeholder :string smart_input_placeholder :string reply_id :string activity :any object :any thread_id :string","ref":"Bonfire.UI.Social.ObjectThreadLive.html","title":"Bonfire.UI.Social.ObjectThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ObjectThreadLive.html#render/1","title":"Bonfire.UI.Social.ObjectThreadLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ObjectThreadLive.html#update/2","title":"Bonfire.UI.Social.ObjectThreadLive.update/2","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true","ref":"Bonfire.UI.Social.PageHeaderLive.html","title":"Bonfire.UI.Social.PageHeaderLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.PageHeaderLive.html#render/1","title":"Bonfire.UI.Social.PageHeaderLive.render/1","type":"function"},{"doc":"Properties current_user :any feed :any","ref":"Bonfire.UI.Social.PrivateLive.html","title":"Bonfire.UI.Social.PrivateLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.PrivateLive.html#render/1","title":"Bonfire.UI.Social.PrivateLive.render/1","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true page :string, required: true smart_input :boolean, required: true feed :list","ref":"Bonfire.UI.Social.PrivateViewLive.html","title":"Bonfire.UI.Social.PrivateViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.PrivateViewLive.html#render/1","title":"Bonfire.UI.Social.PrivateViewLive.render/1","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true has_private_tab :boolean, required: true smart_input_placeholder :string smart_input_text :string search_placholder :string feed_title :string user :map","ref":"Bonfire.UI.Social.ProfileBoostsLive.html","title":"Bonfire.UI.Social.ProfileBoostsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileBoostsLive.html#render/1","title":"Bonfire.UI.Social.ProfileBoostsLive.render/1","type":"function"},{"doc":"Properties current_user :any user :map selected_tab :string feed :list","ref":"Bonfire.UI.Social.ProfileFollowsLive.html","title":"Bonfire.UI.Social.ProfileFollowsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileFollowsLive.html#render/1","title":"Bonfire.UI.Social.ProfileFollowsLive.render/1","type":"function"},{"doc":"Properties current_user :any user :map","ref":"Bonfire.UI.Social.ProfileHeroFullLive.html","title":"Bonfire.UI.Social.ProfileHeroFullLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileHeroFullLive.html#render/1","title":"Bonfire.UI.Social.ProfileHeroFullLive.render/1","type":"function"},{"doc":"Properties current_user :any profile :any character :any","ref":"Bonfire.UI.Social.ProfileItemLive.html","title":"Bonfire.UI.Social.ProfileItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileItemLive.html#render/1","title":"Bonfire.UI.Social.ProfileItemLive.render/1","type":"function"},{"doc":"Properties current_user :any selected_tab :string user :map","ref":"Bonfire.UI.Social.ProfileNavigationLive.html","title":"Bonfire.UI.Social.ProfileNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileNavigationLive.html#render/1","title":"Bonfire.UI.Social.ProfileNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true has_private_tab :boolean, required: true smart_input_placeholder :string smart_input_text :string search_placholder :string feed_title :string user :map","ref":"Bonfire.UI.Social.ProfilePostsLive.html","title":"Bonfire.UI.Social.ProfilePostsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfilePostsLive.html#render/1","title":"Bonfire.UI.Social.ProfilePostsLive.render/1","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true has_private_tab :boolean, required: true smart_input_placeholder :string smart_input_text :string search_placholder :string feed_title :string user :map","ref":"Bonfire.UI.Social.ProfileTimelineLive.html","title":"Bonfire.UI.Social.ProfileTimelineLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileTimelineLive.html#render/1","title":"Bonfire.UI.Social.ProfileTimelineLive.render/1","type":"function"},{"doc":"Properties current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true has_private_tab :boolean, required: true smart_input_placeholder :string smart_input_text :string search_placholder :string feed_title :string user :map feed :list page_info :any","ref":"Bonfire.UI.Social.ProfileViewLive.html","title":"Bonfire.UI.Social.ProfileViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileViewLive.html#render/1","title":"Bonfire.UI.Social.ProfileViewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ProfileViewLive.html#tab/1","title":"Bonfire.UI.Social.ProfileViewLive.tab/1","type":"function"},{"doc":"Properties current_user :any search :string","ref":"Bonfire.UI.Social.SearchLive.html","title":"Bonfire.UI.Social.SearchLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SearchLive.html#render/1","title":"Bonfire.UI.Social.SearchLive.render/1","type":"function"},{"doc":"Properties current_user :any label :string, default: &quot;&quot; default_circles :list, default: [] to_circles :list","ref":"Bonfire.UI.Social.SetBoundariesLive.html","title":"Bonfire.UI.Social.SetBoundariesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SetBoundariesLive.html#render/1","title":"Bonfire.UI.Social.SetBoundariesLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.SetBoundariesLive.html#set_label/2","title":"Bonfire.UI.Social.SetBoundariesLive.set_label/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.SetBoundariesLive.html#update/2","title":"Bonfire.UI.Social.SetBoundariesLive.update/2","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SetCWLive.html","title":"Bonfire.UI.Social.SetCWLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SetCWLive.html#render/1","title":"Bonfire.UI.Social.SetCWLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsTemplateLive.html","title":"Bonfire.UI.Social.SettingsTemplateLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsTemplateLive.html#render/1","title":"Bonfire.UI.Social.SettingsTemplateLive.render/1","type":"function"},{"doc":"Properties current_user :any selected_tab :string tab_id :string uploads :any","ref":"Bonfire.UI.Social.SettingsViewLive.html","title":"Bonfire.UI.Social.SettingsViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewLive.render/1","type":"function"},{"doc":"Properties current_user :any settings_section_title :string settings_section_description :string","ref":"Bonfire.UI.Social.SettingsViewLive.SettingsHeaderLive.html","title":"Bonfire.UI.Social.SettingsViewLive.SettingsHeaderLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewLive.SettingsHeaderLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewLive.SettingsHeaderLive.render/1","type":"function"},{"doc":"Properties current_user :any selected_tab :string admin_tab :string","ref":"Bonfire.UI.Social.SettingsViewLive.SidebarSettingsLive.html","title":"Bonfire.UI.Social.SettingsViewLive.SidebarSettingsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewLive.SidebarSettingsLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewLive.SidebarSettingsLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminInstanceLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.AdminInstanceLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminInstanceLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.AdminInstanceLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminInvitesLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.AdminInvitesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminInvitesLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.AdminInvitesLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.AdminLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.AdminLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminReportsLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.AdminReportsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.AdminReportsLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.AdminReportsLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.EditAccountLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.EditAccountLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.EditAccountLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.EditAccountLive.render/1","type":"function"},{"doc":"Properties current_user :any uploads :any","ref":"Bonfire.UI.Social.SettingsViewsLive.EditProfileLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.EditProfileLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.EditProfileLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.EditProfileLive.render/1","type":"function"},{"doc":"Properties current_user :any extensions :list, default: [] schemas :any other_deps :any get_link :any settings_section_title :string, default: &quot;Bonfire extensions&quot; settings_section_description :string, default: &quot;These are the extensions installed on this instance.&quot;","ref":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive.html#update/2","title":"Bonfire.UI.Social.SettingsViewsLive.ExtensionsLive.update/2","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SettingsViewsLive.PreferencesLive.html","title":"Bonfire.UI.Social.SettingsViewsLive.PreferencesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SettingsViewsLive.PreferencesLive.html#render/1","title":"Bonfire.UI.Social.SettingsViewsLive.PreferencesLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.Sidebar.MoreLinksLive.html","title":"Bonfire.UI.Social.Sidebar.MoreLinksLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Sidebar.MoreLinksLive.html#render/1","title":"Bonfire.UI.Social.Sidebar.MoreLinksLive.render/1","type":"function"},{"doc":"Properties current_user :any page :string, required: true","ref":"Bonfire.UI.Social.SidebarLive.html","title":"Bonfire.UI.Social.SidebarLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarLive.html#render/1","title":"Bonfire.UI.Social.SidebarLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SidebarLogoLive.html","title":"Bonfire.UI.Social.SidebarLogoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarLogoLive.html#render/1","title":"Bonfire.UI.Social.SidebarLogoLive.render/1","type":"function"},{"doc":"Properties current_user :any page :string, required: true","ref":"Bonfire.UI.Social.SidebarMobileLive.html","title":"Bonfire.UI.Social.SidebarMobileLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarMobileLive.html#render/1","title":"Bonfire.UI.Social.SidebarMobileLive.render/1","type":"function"},{"doc":"Properties current_user :any page :string, required: true","ref":"Bonfire.UI.Social.SidebarNavigationLive.html","title":"Bonfire.UI.Social.SidebarNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarNavigationLive.html#render/1","title":"Bonfire.UI.Social.SidebarNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SidebarUserLive.html","title":"Bonfire.UI.Social.SidebarUserLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarUserLive.html#render/1","title":"Bonfire.UI.Social.SidebarUserLive.render/1","type":"function"},{"doc":"Properties current_user :any form :any error :any","ref":"Bonfire.UI.Social.SignupLive.html","title":"Bonfire.UI.Social.SignupLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SignupLive.html#render/1","title":"Bonfire.UI.Social.SignupLive.render/1","type":"function"},{"doc":"Properties current_user :any form :any error :any registered :boolean","ref":"Bonfire.UI.Social.SignupViewLive.html","title":"Bonfire.UI.Social.SignupViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SignupViewLive.html#render/1","title":"Bonfire.UI.Social.SignupViewLive.render/1","type":"function"},{"doc":"Properties current_user :any create_activity_type :string, default: &quot;post&quot; reply_to_id :string, default: &quot;&quot; reply_to_thread_id :string, default: &quot;&quot;, required: false smart_input_placeholder :string, required: false smart_input_text :string, required: false","ref":"Bonfire.UI.Social.SmartInputLive.html","title":"Bonfire.UI.Social.SmartInputLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SmartInputLive.html#render/1","title":"Bonfire.UI.Social.SmartInputLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.SubscribeWidgetLive.html","title":"Bonfire.UI.Social.SubscribeWidgetLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SubscribeWidgetLive.html#render/1","title":"Bonfire.UI.Social.SubscribeWidgetLive.render/1","type":"function"},{"doc":"Properties current_user :any current_account_users :any go :any","ref":"Bonfire.UI.Social.SwitchUserViewLive.html","title":"Bonfire.UI.Social.SwitchUserViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SwitchUserViewLive.html#render/1","title":"Bonfire.UI.Social.SwitchUserViewLive.render/1","type":"function"},{"doc":"Properties current_user :any current_account_users :any go :any","ref":"Bonfire.UI.Social.SwitchUserViewLive.AccountUsersLive.html","title":"Bonfire.UI.Social.SwitchUserViewLive.AccountUsersLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SwitchUserViewLive.AccountUsersLive.html#render/1","title":"Bonfire.UI.Social.SwitchUserViewLive.AccountUsersLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_user :any thread_id :any page_info :any activity :any object :any smart_input_placeholder :string smart_input_text :string","ref":"Bonfire.UI.Social.ThreadLive.html","title":"Bonfire.UI.Social.ThreadLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.ThreadLive.html#assign_thread/2","title":"Bonfire.UI.Social.ThreadLive.assign_thread/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.ThreadLive.html#handle_event/3","title":"Bonfire.UI.Social.ThreadLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ThreadLive.html#handle_info/2","title":"Bonfire.UI.Social.ThreadLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.ThreadLive.html#mount/1","title":"Bonfire.UI.Social.ThreadLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.ThreadLive.html#render/1","title":"Bonfire.UI.Social.ThreadLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.ThreadLive.html#update/2","title":"Bonfire.UI.Social.ThreadLive.update/2","type":"function"},{"doc":"Properties current_user :any user :map go :string","ref":"Bonfire.UI.Social.UserPreviewLive.html","title":"Bonfire.UI.Social.UserPreviewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.UserPreviewLive.html#render/1","title":"Bonfire.UI.Social.UserPreviewLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.UsersDirectoryViewLive.html","title":"Bonfire.UI.Social.UsersDirectoryViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.UsersDirectoryViewLive.html#render/1","title":"Bonfire.UI.Social.UsersDirectoryViewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ViewCircleLive.html","title":"Bonfire.UI.Social.ViewCircleLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.ViewCircleLive.html#render/1","title":"Bonfire.UI.Social.ViewCircleLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.ViewCircleLive.html#update/2","title":"Bonfire.UI.Social.ViewCircleLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Web.ErrorView.html","title":"Bonfire.UI.Social.Web.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Social.Web.ErrorView.html#__resource__/0","title":"Bonfire.UI.Social.Web.ErrorView.__resource__/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Web.ErrorView.html#html/2","title":"Bonfire.UI.Social.Web.ErrorView.html/2","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Social.Web.ErrorView.html#render/2","title":"Bonfire.UI.Social.Web.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Social.Web.ErrorView.html#template_not_found/2","title":"Bonfire.UI.Social.Web.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Web.LayoutView.html","title":"Bonfire.UI.Social.Web.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Social.Web.LayoutView.html#__resource__/0","title":"Bonfire.UI.Social.Web.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Social.Web.LayoutView.html#render/2","title":"Bonfire.UI.Social.Web.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Social.Web.LayoutView.html#template_not_found/2","title":"Bonfire.UI.Social.Web.LayoutView.template_not_found/2","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Social.WithoutSidebarLive.html","title":"Bonfire.UI.Social.WithoutSidebarLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WithoutSidebarLive.html#render/1","title":"Bonfire.UI.Social.WithoutSidebarLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.html","title":"Bonfire.Quantify","type":"module"},{"doc":"","ref":"Bonfire.Quantify.html#is_admin/1","title":"Bonfire.Quantify.is_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Hydration.html","title":"Bonfire.Quantify.Hydration","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Hydration.html#hydrate/0","title":"Bonfire.Quantify.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html","title":"Bonfire.Quantify.Measure","type":"module"},{"doc":"Copy the attributes of a measure required to create a new one.","ref":"Bonfire.Quantify.Measure.html#copy/1","title":"Bonfire.Quantify.Measure.copy/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#create_changeset/3","title":"Bonfire.Quantify.Measure.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#update_changeset/2","title":"Bonfire.Quantify.Measure.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#validate_changeset/2","title":"Bonfire.Quantify.Measure.validate_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#t:t/0","title":"Bonfire.Quantify.Measure.t/0","type":"type"},{"doc":"","ref":"Bonfire.Quantify.Measures.html","title":"Bonfire.Quantify.Measures","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#ap_publish_activity/2","title":"Bonfire.Quantify.Measures.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#ap_receive_activity/3","title":"Bonfire.Quantify.Measures.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#create/2","title":"Bonfire.Quantify.Measures.create/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#create/3","title":"Bonfire.Quantify.Measures.create/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#cursor/0","title":"Bonfire.Quantify.Measures.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#federation_module/0","title":"Bonfire.Quantify.Measures.federation_module/0","type":"function"},{"doc":"Retrieves a list of collections by arbitrary filters. Used by: Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#many/1","title":"Bonfire.Quantify.Measures.many/1","type":"function"},{"doc":"Retrieves a single collection by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#one/1","title":"Bonfire.Quantify.Measures.one/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#test_cursor/0","title":"Bonfire.Quantify.Measures.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#update/2","title":"Bonfire.Quantify.Measures.update/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html","title":"Bonfire.Quantify.Measures.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#create_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.create_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#create_measures/3","title":"Bonfire.Quantify.Measures.GraphQL.create_measures/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_has_unit_edge/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_has_unit_edge/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_measures/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_measures/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fields/2","title":"Bonfire.Quantify.Measures.GraphQL.fields/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#has_unit_edge/3","title":"Bonfire.Quantify.Measures.GraphQL.has_unit_edge/3","type":"function"},{"doc":"Iterate over a set of elements in a map calling func . func is expected to return either one of {:ok, val} or {:error, reason} . If {:error, reason} is returned, iteration halts.","ref":"Bonfire.Quantify.Measures.GraphQL.html#map_ok_error/2","title":"Bonfire.Quantify.Measures.GraphQL.map_ok_error/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#measure/2","title":"Bonfire.Quantify.Measures.GraphQL.measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#measures_pages/2","title":"Bonfire.Quantify.Measures.GraphQL.measures_pages/2","type":"function"},{"doc":"Retrieves an Page of units according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Quantify.Measures.GraphQL.html#page/5","title":"Bonfire.Quantify.Measures.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of units according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Quantify.Measures.GraphQL.html#pages/6","title":"Bonfire.Quantify.Measures.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#update_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.update_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#update_measures/3","title":"Bonfire.Quantify.Measures.GraphQL.update_measures/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html","title":"Bonfire.Quantify.Measures.Queries","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#filter/2","title":"Bonfire.Quantify.Measures.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#inc_quantity/2","title":"Bonfire.Quantify.Measures.Queries.inc_quantity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#join_to/3","title":"Bonfire.Quantify.Measures.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#queries/5","title":"Bonfire.Quantify.Measures.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/1","title":"Bonfire.Quantify.Measures.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/2","title":"Bonfire.Quantify.Measures.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html","title":"Bonfire.Quantify.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#change/0","title":"Bonfire.Quantify.Migrations.change/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#change_measure/0","title":"Bonfire.Quantify.Migrations.change_measure/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#measure_table/0","title":"Bonfire.Quantify.Migrations.measure_table/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#unit_table/0","title":"Bonfire.Quantify.Migrations.unit_table/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html","title":"Bonfire.Quantify.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_measure!/3","title":"Bonfire.Quantify.Simulate.fake_measure!/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_unit!/3","title":"Bonfire.Quantify.Simulate.fake_unit!/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#measure/1","title":"Bonfire.Quantify.Simulate.measure/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#measure_input/2","title":"Bonfire.Quantify.Simulate.measure_input/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit/1","title":"Bonfire.Quantify.Simulate.unit/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_input/1","title":"Bonfire.Quantify.Simulate.unit_input/1","type":"function"},{"doc":"A unit","ref":"Bonfire.Quantify.Simulate.html#unit_name/0","title":"Bonfire.Quantify.Simulate.unit_name/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_symbol/0","title":"Bonfire.Quantify.Simulate.unit_symbol/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html","title":"Bonfire.Quantify.Unit","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/2","title":"Bonfire.Quantify.Unit.create_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/3","title":"Bonfire.Quantify.Unit.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#update_changeset/2","title":"Bonfire.Quantify.Unit.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#t:t/0","title":"Bonfire.Quantify.Unit.t/0","type":"type"},{"doc":"","ref":"Bonfire.Quantify.Units.html","title":"Bonfire.Quantify.Units","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.html#ap_publish_activity/2","title":"Bonfire.Quantify.Units.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#ap_receive_activity/3","title":"Bonfire.Quantify.Units.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#create/2","title":"Bonfire.Quantify.Units.create/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#create/3","title":"Bonfire.Quantify.Units.create/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#cursor/0","title":"Bonfire.Quantify.Units.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#federation_module/0","title":"Bonfire.Quantify.Units.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#get_or_create/2","title":"Bonfire.Quantify.Units.get_or_create/2","type":"function"},{"doc":"Retrieves a list of collections by arbitrary filters. Used by: Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#many/1","title":"Bonfire.Quantify.Units.many/1","type":"function"},{"doc":"Retrieves a single collection by arbitrary filters. Used by: Item queries ActivityPub integration Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#one/1","title":"Bonfire.Quantify.Units.one/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#soft_delete/1","title":"Bonfire.Quantify.Units.soft_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#test_cursor/0","title":"Bonfire.Quantify.Units.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#update/2","title":"Bonfire.Quantify.Units.update/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html","title":"Bonfire.Quantify.Units.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#all_units/2","title":"Bonfire.Quantify.Units.GraphQL.all_units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#create_unit/2","title":"Bonfire.Quantify.Units.GraphQL.create_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#delete_unit/2","title":"Bonfire.Quantify.Units.GraphQL.delete_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fetch_unit/2","title":"Bonfire.Quantify.Units.GraphQL.fetch_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fetch_units/2","title":"Bonfire.Quantify.Units.GraphQL.fetch_units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fields/2","title":"Bonfire.Quantify.Units.GraphQL.fields/2","type":"function"},{"doc":"Retrieves an Page of units according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Quantify.Units.GraphQL.html#page/5","title":"Bonfire.Quantify.Units.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of units according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Quantify.Units.GraphQL.html#pages/6","title":"Bonfire.Quantify.Units.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#unit/2","title":"Bonfire.Quantify.Units.GraphQL.unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#units/2","title":"Bonfire.Quantify.Units.GraphQL.units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#update_unit/2","title":"Bonfire.Quantify.Units.GraphQL.update_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html","title":"Bonfire.Quantify.Units.Queries","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#filter/2","title":"Bonfire.Quantify.Units.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#join_to/3","title":"Bonfire.Quantify.Units.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#queries/5","title":"Bonfire.Quantify.Units.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/1","title":"Bonfire.Quantify.Units.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/2","title":"Bonfire.Quantify.Units.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.html","title":"Bonfire.Geolocate","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.html#is_admin/1","title":"Bonfire.Geolocate.is_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geocode.html","title":"Bonfire.Geolocate.Geocode","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geocode.html#coordinates/1","title":"Bonfire.Geolocate.Geocode.coordinates/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html","title":"Bonfire.Geolocate.Geolocation","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#context_module/0","title":"Bonfire.Geolocate.Geolocation.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#create_changeset/2","title":"Bonfire.Geolocate.Geolocation.create_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#create_changeset/3","title":"Bonfire.Geolocate.Geolocation.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#follow_filters/0","title":"Bonfire.Geolocate.Geolocation.follow_filters/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#queries_module/0","title":"Bonfire.Geolocate.Geolocation.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#update_changeset/2","title":"Bonfire.Geolocate.Geolocation.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#t:t/0","title":"Bonfire.Geolocate.Geolocation.t/0","type":"type"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html","title":"Bonfire.Geolocate.Geolocations","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_publish_activity/2","title":"Bonfire.Geolocate.Geolocations.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_receive_activity/3","title":"Bonfire.Geolocate.Geolocations.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/2","title":"Bonfire.Geolocate.Geolocations.create/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/3","title":"Bonfire.Geolocate.Geolocations.create/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#cursor/1","title":"Bonfire.Geolocate.Geolocations.cursor/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#federation_module/0","title":"Bonfire.Geolocate.Geolocations.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#indexing_object_format/1","title":"Bonfire.Geolocate.Geolocations.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of geolocations by arbitrary filters. Used by: Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#many/1","title":"Bonfire.Geolocate.Geolocations.many/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#many!/1","title":"Bonfire.Geolocate.Geolocations.many!/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#maybe_index/1","title":"Bonfire.Geolocate.Geolocations.maybe_index/1","type":"function"},{"doc":"Retrieves a single geolocation by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#one/1","title":"Bonfire.Geolocate.Geolocations.one/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_coordinates/1","title":"Bonfire.Geolocate.Geolocations.populate_coordinates/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_result/2","title":"Bonfire.Geolocate.Geolocations.populate_result/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#resolve_mappable_address/1","title":"Bonfire.Geolocate.Geolocations.resolve_mappable_address/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#search/1","title":"Bonfire.Geolocate.Geolocations.search/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#soft_delete/2","title":"Bonfire.Geolocate.Geolocations.soft_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#test_cursor/1","title":"Bonfire.Geolocate.Geolocations.test_cursor/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#thing_add_location/3","title":"Bonfire.Geolocate.Geolocations.thing_add_location/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#update/3","title":"Bonfire.Geolocate.Geolocations.update/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html","title":"Bonfire.Geolocate.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#all_geolocations/2","title":"Bonfire.Geolocate.GraphQL.all_geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#create_geolocation/2","title":"Bonfire.Geolocate.GraphQL.create_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#delete_geolocation/2","title":"Bonfire.Geolocate.GraphQL.delete_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#ensure_delete_allowed/2","title":"Bonfire.Geolocate.GraphQL.ensure_delete_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#ensure_update_allowed/2","title":"Bonfire.Geolocate.GraphQL.ensure_update_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocation/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocation_edge/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocation_edge/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocations/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fields/2","title":"Bonfire.Geolocate.GraphQL.fields/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocation/2","title":"Bonfire.Geolocate.GraphQL.geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocation_edge/3","title":"Bonfire.Geolocate.GraphQL.geolocation_edge/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocations/2","title":"Bonfire.Geolocate.GraphQL.geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#last_activity_edge/3","title":"Bonfire.Geolocate.GraphQL.last_activity_edge/3","type":"function"},{"doc":"Retrieves an Page of geolocations according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Geolocate.GraphQL.html#page/5","title":"Bonfire.Geolocate.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of geolocations according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Geolocate.GraphQL.html#pages/6","title":"Bonfire.Geolocate.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#update_geolocation/2","title":"Bonfire.Geolocate.GraphQL.update_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html","title":"Bonfire.Geolocate.GraphQL.Hydration","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html#hydrate/0","title":"Bonfire.Geolocate.GraphQL.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html","title":"Bonfire.Geolocate.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#create_in_autocomplete/2","title":"Bonfire.Geolocate.LiveHandler.create_in_autocomplete/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#handle_event/3","title":"Bonfire.Geolocate.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#to_tuple/1","title":"Bonfire.Geolocate.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html","title":"Bonfire.Geolocate.MapLive","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#handle_event/4","title":"Bonfire.Geolocate.MapLive.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#map_icon/1","title":"Bonfire.Geolocate.MapLive.map_icon/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#place_lat/1","title":"Bonfire.Geolocate.MapLive.place_lat/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#place_long/1","title":"Bonfire.Geolocate.MapLive.place_long/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Geolocate.MapLive.html#render/1","title":"Bonfire.Geolocate.MapLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#response/2","title":"Bonfire.Geolocate.MapLive.response/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Geolocate.MapLive.html#update/2","title":"Bonfire.Geolocate.MapLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Migrations.html","title":"Bonfire.Geolocate.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Migrations.html#change/0","title":"Bonfire.Geolocate.Migrations.change/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html","title":"Bonfire.Geolocate.Places","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place/2","title":"Bonfire.Geolocate.Places.fetch_place/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place_things/2","title":"Bonfire.Geolocate.Places.fetch_place_things/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_places/1","title":"Bonfire.Geolocate.Places.fetch_places/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html","title":"Bonfire.Geolocate.Queries","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#filter/2","title":"Bonfire.Geolocate.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#join_to/3","title":"Bonfire.Geolocate.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#queries/5","title":"Bonfire.Geolocate.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#query/1","title":"Bonfire.Geolocate.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#query/2","title":"Bonfire.Geolocate.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html","title":"Bonfire.Geolocate.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#address/0","title":"Bonfire.Geolocate.Simulate.address/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#fake_geolocation!/3","title":"Bonfire.Geolocate.Simulate.fake_geolocation!/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation/1","title":"Bonfire.Geolocate.Simulate.geolocation/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation_input/1","title":"Bonfire.Geolocate.Simulate.geolocation_input/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#mappable_address/0","title":"Bonfire.Geolocate.Simulate.mappable_address/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Web.GenericMapLive.html","title":"Bonfire.Geolocate.Web.GenericMapLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_event/3","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_info/2","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_params/3","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#mount/3","title":"Bonfire.Geolocate.Web.GenericMapLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#render/1","title":"Bonfire.Geolocate.Web.GenericMapLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Web.Routes.html","title":"Bonfire.Geolocate.Web.Routes","type":"module"},{"doc":"ValueFlows implemented as a Bonfire extension. Refer to the README","ref":"ValueFlows.html","title":"ValueFlows","type":"module"},{"doc":"","ref":"ValueFlows.Agent.Agents.html","title":"ValueFlows.Agent.Agents","type":"module"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#add_type/1","title":"ValueFlows.Agent.Agents.add_type/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#agent/2","title":"ValueFlows.Agent.Agents.agent/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#agent_location/1","title":"ValueFlows.Agent.Agents.agent_location/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#agent_to_character/1","title":"ValueFlows.Agent.Agents.agent_to_character/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#agents/1","title":"ValueFlows.Agent.Agents.agents/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Agents.html#character_to_agent/1","title":"ValueFlows.Agent.Agents.character_to_agent/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html","title":"ValueFlows.Agent.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#agent/2","title":"ValueFlows.Agent.GraphQL.agent/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#all_agents/2","title":"ValueFlows.Agent.GraphQL.all_agents/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#all_organizations/2","title":"ValueFlows.Agent.GraphQL.all_organizations/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#all_people/2","title":"ValueFlows.Agent.GraphQL.all_people/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#mutate_organization/2","title":"ValueFlows.Agent.GraphQL.mutate_organization/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#mutate_person/2","title":"ValueFlows.Agent.GraphQL.mutate_person/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#my_agent/2","title":"ValueFlows.Agent.GraphQL.my_agent/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#organization/2","title":"ValueFlows.Agent.GraphQL.organization/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#organizations/2","title":"ValueFlows.Agent.GraphQL.organizations/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#people/2","title":"ValueFlows.Agent.GraphQL.people/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.GraphQL.html#person/2","title":"ValueFlows.Agent.GraphQL.person/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Organizations.html","title":"ValueFlows.Agent.Organizations","type":"module"},{"doc":"","ref":"ValueFlows.Agent.Organizations.html#organization/2","title":"ValueFlows.Agent.Organizations.organization/2","type":"function"},{"doc":"","ref":"ValueFlows.Agent.Organizations.html#organizations/1","title":"ValueFlows.Agent.Organizations.organizations/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.People.html","title":"ValueFlows.Agent.People","type":"module"},{"doc":"","ref":"ValueFlows.Agent.People.html#people/1","title":"ValueFlows.Agent.People.people/1","type":"function"},{"doc":"","ref":"ValueFlows.Agent.People.html#person/2","title":"ValueFlows.Agent.People.person/2","type":"function"},{"doc":"","ref":"ValueFlows.Agreement.html","title":"ValueFlows.Agreement","type":"module"},{"doc":"","ref":"ValueFlows.Agreement.GraphQL.html","title":"ValueFlows.Agreement.GraphQL","type":"module"},{"doc":"Catch-all migrations intended to be used to initialise new Bonfire apps. Add any new up/down ecto migrations in VF modules to the bottom of these two functions.","ref":"ValueFlows.AllMigrations.html","title":"ValueFlows.AllMigrations","type":"module"},{"doc":"","ref":"ValueFlows.AllMigrations.html#down/0","title":"ValueFlows.AllMigrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.AllMigrations.html#up/0","title":"ValueFlows.AllMigrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Appreciation.GraphQL.html","title":"ValueFlows.Appreciation.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Claim.html","title":"ValueFlows.Claim","type":"module"},{"doc":"","ref":"ValueFlows.Claim.html#create_changeset/2","title":"ValueFlows.Claim.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.html#create_changeset/4","title":"ValueFlows.Claim.create_changeset/4","type":"function"},{"doc":"","ref":"ValueFlows.Claim.html#measure_fields/0","title":"ValueFlows.Claim.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.Claim.html#update_changeset/2","title":"ValueFlows.Claim.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.html#validate_required/1","title":"ValueFlows.Claim.validate_required/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.html#t:t/0","title":"ValueFlows.Claim.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Claim.Claims.html","title":"ValueFlows.Claim.Claims","type":"module"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#ap_publish_activity/2","title":"ValueFlows.Claim.Claims.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#ap_receive_activity/3","title":"ValueFlows.Claim.Claims.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#create/2","title":"ValueFlows.Claim.Claims.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#create/4","title":"ValueFlows.Claim.Claims.create/4","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#federation_module/0","title":"ValueFlows.Claim.Claims.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#many/1","title":"ValueFlows.Claim.Claims.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#one/1","title":"ValueFlows.Claim.Claims.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#preload_all/1","title":"ValueFlows.Claim.Claims.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#soft_delete/1","title":"ValueFlows.Claim.Claims.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Claims.html#update/2","title":"ValueFlows.Claim.Claims.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html","title":"ValueFlows.Claim.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#claim/2","title":"ValueFlows.Claim.GraphQL.claim/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#claims/2","title":"ValueFlows.Claim.GraphQL.claims/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#create_claim/2","title":"ValueFlows.Claim.GraphQL.create_claim/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#delete_claim/2","title":"ValueFlows.Claim.GraphQL.delete_claim/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_claim/2","title":"ValueFlows.Claim.GraphQL.fetch_claim/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_events/2","title":"ValueFlows.Claim.GraphQL.fetch_events/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_triggered_by_edge/3","title":"ValueFlows.Claim.GraphQL.fetch_triggered_by_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Claim.GraphQL.html#update_claim/2","title":"ValueFlows.Claim.GraphQL.update_claim/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Migrations.html","title":"ValueFlows.Claim.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Claim.Migrations.html#down/0","title":"ValueFlows.Claim.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Migrations.html#up/0","title":"ValueFlows.Claim.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Queries.html","title":"ValueFlows.Claim.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Claim.Queries.html#filter/2","title":"ValueFlows.Claim.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Queries.html#join_to/3","title":"ValueFlows.Claim.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Queries.html#queries/5","title":"ValueFlows.Claim.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Queries.html#query/1","title":"ValueFlows.Claim.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Claim.Queries.html#query/2","title":"ValueFlows.Claim.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html","title":"ValueFlows.EconomicEvent","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#context_module/0","title":"ValueFlows.EconomicEvent.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#create_changeset/2","title":"ValueFlows.EconomicEvent.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#follow_filters/0","title":"ValueFlows.EconomicEvent.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#measure_fields/0","title":"ValueFlows.EconomicEvent.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#queries_module/0","title":"ValueFlows.EconomicEvent.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#update_changeset/2","title":"ValueFlows.EconomicEvent.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#validate_changeset/1","title":"ValueFlows.EconomicEvent.validate_changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#validate_create_changeset/1","title":"ValueFlows.EconomicEvent.validate_create_changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.html#t:t/0","title":"ValueFlows.EconomicEvent.t/0","type":"type"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html","title":"ValueFlows.EconomicEvent.EconomicEvents","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#ap_publish_activity/2","title":"ValueFlows.EconomicEvent.EconomicEvents.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#ap_receive_activity/3","title":"ValueFlows.EconomicEvent.EconomicEvents.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#attr_get_agent/3","title":"ValueFlows.EconomicEvent.EconomicEvents.attr_get_agent/3","type":"function"},{"doc":"Create an event, and possibly linked resources","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#create/3","title":"ValueFlows.EconomicEvent.EconomicEvents.create/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#cursor/0","title":"ValueFlows.EconomicEvent.EconomicEvents.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#federation_module/0","title":"ValueFlows.EconomicEvent.EconomicEvents.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#fields/2","title":"ValueFlows.EconomicEvent.EconomicEvents.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#indexing_object_format/1","title":"ValueFlows.EconomicEvent.EconomicEvents.indexing_object_format/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#inputs_of/2","title":"ValueFlows.EconomicEvent.EconomicEvents.inputs_of/2","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#many/1","title":"ValueFlows.EconomicEvent.EconomicEvents.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#one/1","title":"ValueFlows.EconomicEvent.EconomicEvents.one/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#outputs_of/2","title":"ValueFlows.EconomicEvent.EconomicEvents.outputs_of/2","type":"function"},{"doc":"Retrieves an Page of events according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#page/5","title":"ValueFlows.EconomicEvent.EconomicEvents.page/5","type":"function"},{"doc":"Retrieves an Pages of events according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#pages/6","title":"ValueFlows.EconomicEvent.EconomicEvents.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#preload_action/1","title":"ValueFlows.EconomicEvent.EconomicEvents.preload_action/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#preload_all/1","title":"ValueFlows.EconomicEvent.EconomicEvents.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#prepare_attrs/2","title":"ValueFlows.EconomicEvent.EconomicEvents.prepare_attrs/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#prepare_create_attrs/2","title":"ValueFlows.EconomicEvent.EconomicEvents.prepare_create_attrs/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#soft_delete/1","title":"ValueFlows.EconomicEvent.EconomicEvents.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#test_cursor/0","title":"ValueFlows.EconomicEvent.EconomicEvents.test_cursor/0","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Trace.event/3 .","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#trace/3","title":"ValueFlows.EconomicEvent.EconomicEvents.trace/3","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Track.event/3 .","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#track/3","title":"ValueFlows.EconomicEvent.EconomicEvents.track/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#update/3","title":"ValueFlows.EconomicEvent.EconomicEvents.update/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html","title":"ValueFlows.EconomicEvent.EventSideEffects","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#event_side_effects/1","title":"ValueFlows.EconomicEvent.EventSideEffects.event_side_effects/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#measurement_effect/3","title":"ValueFlows.EconomicEvent.EventSideEffects.measurement_effect/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#quantity_effect/4","title":"ValueFlows.EconomicEvent.EventSideEffects.quantity_effect/4","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#return_updated_event/2","title":"ValueFlows.EconomicEvent.EventSideEffects.return_updated_event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#return_updated_event/3","title":"ValueFlows.EconomicEvent.EventSideEffects.return_updated_event/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html","title":"ValueFlows.EconomicEvent.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#agent_events/3","title":"ValueFlows.EconomicEvent.GraphQL.agent_events/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#agent_events_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.agent_events_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#all_events/2","title":"ValueFlows.EconomicEvent.GraphQL.all_events/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#create_event/2","title":"ValueFlows.EconomicEvent.GraphQL.create_event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#delete_event/2","title":"ValueFlows.EconomicEvent.GraphQL.delete_event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#event/2","title":"ValueFlows.EconomicEvent.GraphQL.event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#events/2","title":"ValueFlows.EconomicEvent.GraphQL.events/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#events_filtered/2","title":"ValueFlows.EconomicEvent.GraphQL.events_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_agent_events_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_agent_events_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_event/2","title":"ValueFlows.EconomicEvent.GraphQL.fetch_event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_events/2","title":"ValueFlows.EconomicEvent.GraphQL.fetch_events/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_input_of_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_input_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_output_of_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_output_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_resource_inventoried_as_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_resource_inventoried_as_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_to_resource_inventoried_as_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_to_resource_inventoried_as_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_trace/2","title":"ValueFlows.EconomicEvent.GraphQL.fetch_trace/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_track/2","title":"ValueFlows.EconomicEvent.GraphQL.fetch_track/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_triggered_by_edge/3","title":"ValueFlows.EconomicEvent.GraphQL.fetch_triggered_by_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#list_events/4","title":"ValueFlows.EconomicEvent.GraphQL.list_events/4","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#simulate/2","title":"ValueFlows.EconomicEvent.GraphQL.simulate/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#trace/3","title":"ValueFlows.EconomicEvent.GraphQL.trace/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#track/3","title":"ValueFlows.EconomicEvent.GraphQL.track/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#update_event/2","title":"ValueFlows.EconomicEvent.GraphQL.update_event/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html","title":"ValueFlows.EconomicEvent.LiveHandler","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html#changeset/1","title":"ValueFlows.EconomicEvent.LiveHandler.changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html#handle_event/3","title":"ValueFlows.EconomicEvent.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Migrations.html","title":"ValueFlows.EconomicEvent.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.Migrations.html#down/0","title":"ValueFlows.EconomicEvent.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Migrations.html#up/0","title":"ValueFlows.EconomicEvent.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html","title":"ValueFlows.EconomicEvent.Queries","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#filter/2","title":"ValueFlows.EconomicEvent.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#join_to/3","title":"ValueFlows.EconomicEvent.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#queries/5","title":"ValueFlows.EconomicEvent.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#query/1","title":"ValueFlows.EconomicEvent.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#query/2","title":"ValueFlows.EconomicEvent.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Trace.html","title":"ValueFlows.EconomicEvent.Trace","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#event/3","title":"ValueFlows.EconomicEvent.Trace.event/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#process/3","title":"ValueFlows.EconomicEvent.Trace.process/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#resource/3","title":"ValueFlows.EconomicEvent.Trace.resource/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#trace/3","title":"ValueFlows.EconomicEvent.Trace.trace/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Track.html","title":"ValueFlows.EconomicEvent.Track","type":"module"},{"doc":"","ref":"ValueFlows.EconomicEvent.Track.html#event/3","title":"ValueFlows.EconomicEvent.Track.event/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Track.html#process/3","title":"ValueFlows.EconomicEvent.Track.process/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Track.html#resource/3","title":"ValueFlows.EconomicEvent.Track.resource/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicEvent.Track.html#track/3","title":"ValueFlows.EconomicEvent.Track.track/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html","title":"ValueFlows.EconomicResource","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.html#context_module/0","title":"ValueFlows.EconomicResource.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#create_changeset/2","title":"ValueFlows.EconomicResource.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#follow_filters/0","title":"ValueFlows.EconomicResource.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#measure_fields/0","title":"ValueFlows.EconomicResource.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#queries_module/0","title":"ValueFlows.EconomicResource.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#update_changeset/2","title":"ValueFlows.EconomicResource.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.html#t:t/0","title":"ValueFlows.EconomicResource.t/0","type":"type"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html","title":"ValueFlows.EconomicResource.EconomicResources","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#ap_publish_activity/2","title":"ValueFlows.EconomicResource.EconomicResources.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#ap_receive_activity/3","title":"ValueFlows.EconomicResource.EconomicResources.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#create/2","title":"ValueFlows.EconomicResource.EconomicResources.create/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#cursor/0","title":"ValueFlows.EconomicResource.EconomicResources.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#federation_module/0","title":"ValueFlows.EconomicResource.EconomicResources.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#fields/2","title":"ValueFlows.EconomicResource.EconomicResources.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#indexing_object_format/1","title":"ValueFlows.EconomicResource.EconomicResources.indexing_object_format/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#inputs_of/1","title":"ValueFlows.EconomicResource.EconomicResources.inputs_of/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicResource.EconomicResources.html#many/1","title":"ValueFlows.EconomicResource.EconomicResources.many/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#many!/1","title":"ValueFlows.EconomicResource.EconomicResources.many!/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicResource.EconomicResources.html#one/1","title":"ValueFlows.EconomicResource.EconomicResources.one/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#outputs_of/1","title":"ValueFlows.EconomicResource.EconomicResources.outputs_of/1","type":"function"},{"doc":"Retrieves an Page of resources according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.EconomicResource.EconomicResources.html#page/5","title":"ValueFlows.EconomicResource.EconomicResources.page/5","type":"function"},{"doc":"Retrieves an Pages of resources according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.EconomicResource.EconomicResources.html#pages/6","title":"ValueFlows.EconomicResource.EconomicResources.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#preload_all/1","title":"ValueFlows.EconomicResource.EconomicResources.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#preload_state/1","title":"ValueFlows.EconomicResource.EconomicResources.preload_state/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#search/1","title":"ValueFlows.EconomicResource.EconomicResources.search/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#soft_delete/1","title":"ValueFlows.EconomicResource.EconomicResources.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#test_cursor/0","title":"ValueFlows.EconomicResource.EconomicResources.test_cursor/0","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Trace.resource/3 .","ref":"ValueFlows.EconomicResource.EconomicResources.html#trace/3","title":"ValueFlows.EconomicResource.EconomicResources.trace/3","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Track.resource/3 .","ref":"ValueFlows.EconomicResource.EconomicResources.html#track/3","title":"ValueFlows.EconomicResource.EconomicResources.track/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#update/2","title":"ValueFlows.EconomicResource.EconomicResources.update/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html","title":"ValueFlows.EconomicResource.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#agent_resources/3","title":"ValueFlows.EconomicResource.GraphQL.agent_resources/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#agent_resources_edge/3","title":"ValueFlows.EconomicResource.GraphQL.agent_resources_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#all_resources/2","title":"ValueFlows.EconomicResource.GraphQL.all_resources/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#create_resource/2","title":"ValueFlows.EconomicResource.GraphQL.create_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#delete_resource/2","title":"ValueFlows.EconomicResource.GraphQL.delete_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_agent_resources_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_agent_resources_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_conforms_to_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_conforms_to_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_contained_in_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_contained_in_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_primary_accountable_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_primary_accountable_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_resource/2","title":"ValueFlows.EconomicResource.GraphQL.fetch_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_resources/2","title":"ValueFlows.EconomicResource.GraphQL.fetch_resources/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_spec_conforms_to_resources_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_spec_conforms_to_resources_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_state_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_state_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_trace_resource/2","title":"ValueFlows.EconomicResource.GraphQL.fetch_trace_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_track_resource/2","title":"ValueFlows.EconomicResource.GraphQL.fetch_track_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#fetch_unit_of_effort_edge/3","title":"ValueFlows.EconomicResource.GraphQL.fetch_unit_of_effort_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#list_resources/4","title":"ValueFlows.EconomicResource.GraphQL.list_resources/4","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#resource/2","title":"ValueFlows.EconomicResource.GraphQL.resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#resources/2","title":"ValueFlows.EconomicResource.GraphQL.resources/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#resources_filtered/2","title":"ValueFlows.EconomicResource.GraphQL.resources_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#simulate/2","title":"ValueFlows.EconomicResource.GraphQL.simulate/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#spec_conforms_to_resources/3","title":"ValueFlows.EconomicResource.GraphQL.spec_conforms_to_resources/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#spec_conforms_to_resources_edge/3","title":"ValueFlows.EconomicResource.GraphQL.spec_conforms_to_resources_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#trace/3","title":"ValueFlows.EconomicResource.GraphQL.trace/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#track/3","title":"ValueFlows.EconomicResource.GraphQL.track/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.GraphQL.html#update_resource/2","title":"ValueFlows.EconomicResource.GraphQL.update_resource/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html","title":"ValueFlows.EconomicResource.LiveHandler","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html#handle_event/3","title":"ValueFlows.EconomicResource.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html#to_tuple/1","title":"ValueFlows.EconomicResource.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Migrations.html","title":"ValueFlows.EconomicResource.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.Migrations.html#down/0","title":"ValueFlows.EconomicResource.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Migrations.html#up/0","title":"ValueFlows.EconomicResource.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html","title":"ValueFlows.EconomicResource.Queries","type":"module"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html#filter/2","title":"ValueFlows.EconomicResource.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html#join_to/3","title":"ValueFlows.EconomicResource.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html#queries/5","title":"ValueFlows.EconomicResource.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html#query/1","title":"ValueFlows.EconomicResource.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.EconomicResource.Queries.html#query/2","title":"ValueFlows.EconomicResource.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.GraphQL.Subscriptions.html","title":"ValueFlows.GraphQL.Subscriptions","type":"module"},{"doc":"","ref":"ValueFlows.Hydration.html","title":"ValueFlows.Hydration","type":"module"},{"doc":"","ref":"ValueFlows.Hydration.html#agent_resolve_type/2","title":"ValueFlows.Hydration.agent_resolve_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Hydration.html#hydrate/0","title":"ValueFlows.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"ValueFlows.Hydration.html#production_flow_item_resolve_type/2","title":"ValueFlows.Hydration.production_flow_item_resolve_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Hydration.html#resolve_context_type/2","title":"ValueFlows.Hydration.resolve_context_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.html","title":"ValueFlows.Knowledge.Action","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.Action.html#t:t/0","title":"ValueFlows.Knowledge.Action.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html","title":"ValueFlows.Knowledge.Action.Actions","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#action/1","title":"ValueFlows.Knowledge.Action.Actions.action/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#action!/1","title":"ValueFlows.Knowledge.Action.Actions.action!/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#actions_list/0","title":"ValueFlows.Knowledge.Action.Actions.actions_list/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#actions_map/0","title":"ValueFlows.Knowledge.Action.Actions.actions_map/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#default_actions/0","title":"ValueFlows.Knowledge.Action.Actions.default_actions/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#id/1","title":"ValueFlows.Knowledge.Action.Actions.id/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.GraphQL.html","title":"ValueFlows.Knowledge.Action.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.Action.GraphQL.html#action/2","title":"ValueFlows.Knowledge.Action.GraphQL.action/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.GraphQL.html#action_edge/3","title":"ValueFlows.Knowledge.Action.GraphQL.action_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.Action.GraphQL.html#all_actions/2","title":"ValueFlows.Knowledge.Action.GraphQL.all_actions/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html","title":"ValueFlows.Knowledge.ProcessSpecification","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#context_module/0","title":"ValueFlows.Knowledge.ProcessSpecification.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#create_changeset/2","title":"ValueFlows.Knowledge.ProcessSpecification.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#follow_filters/0","title":"ValueFlows.Knowledge.ProcessSpecification.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#queries_module/0","title":"ValueFlows.Knowledge.ProcessSpecification.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#update_changeset/2","title":"ValueFlows.Knowledge.ProcessSpecification.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#t:t/0","title":"ValueFlows.Knowledge.ProcessSpecification.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#all_process_specs/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.all_process_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#create_process_spec/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.create_process_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#creator_process_specs_edge/3","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.creator_process_specs_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#delete_process_spec/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.delete_process_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_creator_process_specs_edge/3","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_creator_process_specs_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_process_spec/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_process_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_process_specs/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_process_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#list_process_specs/4","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.list_process_specs/4","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_spec/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_specs/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_specs_filtered/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_specs_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#simulate/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.simulate/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#update_process_spec/2","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.update_process_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Migrations.html","title":"ValueFlows.Knowledge.ProcessSpecification.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Migrations.html#down/0","title":"ValueFlows.Knowledge.ProcessSpecification.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Migrations.html#up/0","title":"ValueFlows.Knowledge.ProcessSpecification.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#ap_publish_activity/2","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#ap_receive_activity/3","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#create/2","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#cursor/0","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#federation_module/0","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#fields/2","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#indexing_object_format/1","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#many/1","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#one/1","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.one/1","type":"function"},{"doc":"Retrieves an Page of process_specs according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#page/5","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.page/5","type":"function"},{"doc":"Retrieves an Pages of process_specs according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#pages/6","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#soft_delete/1","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#test_cursor/0","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.test_cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#update/2","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html","title":"ValueFlows.Knowledge.ProcessSpecification.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#filter/2","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#join_to/3","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#queries/5","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#query/1","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#query/2","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html","title":"ValueFlows.Knowledge.ResourceSpecification","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#context_module/0","title":"ValueFlows.Knowledge.ResourceSpecification.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#create_changeset/2","title":"ValueFlows.Knowledge.ResourceSpecification.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#create_changeset/3","title":"ValueFlows.Knowledge.ResourceSpecification.create_changeset/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#follow_filters/0","title":"ValueFlows.Knowledge.ResourceSpecification.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#queries_module/0","title":"ValueFlows.Knowledge.ResourceSpecification.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#update_changeset/2","title":"ValueFlows.Knowledge.ResourceSpecification.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#update_changeset/3","title":"ValueFlows.Knowledge.ResourceSpecification.update_changeset/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#t:t/0","title":"ValueFlows.Knowledge.ResourceSpecification.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#all_resource_specs/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.all_resource_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#create_resource_spec/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.create_resource_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#creator_resource_specs_edge/3","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.creator_resource_specs_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#delete_resource_spec/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.delete_resource_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_conforming_resources_edge/3","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_conforming_resources_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_creator_resource_specs_edge/3","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_creator_resource_specs_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_default_unit_of_effort_edge/3","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_default_unit_of_effort_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_resource_spec/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_resource_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_resource_specs/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_resource_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fields/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#list_resource_specs/4","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.list_resource_specs/4","type":"function"},{"doc":"Retrieves an Page of resource_specs according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#page/5","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of resource_specs according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#pages/6","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#resource_spec/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.resource_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#resource_specs/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.resource_specs/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#simulate/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.simulate/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#update_resource_spec/2","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.update_resource_spec/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#changeset/1","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#create_in_autocomplete/2","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.create_in_autocomplete/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#handle_event/3","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#to_tuple/1","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Migrations.html","title":"ValueFlows.Knowledge.ResourceSpecification.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Migrations.html#down/0","title":"ValueFlows.Knowledge.ResourceSpecification.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Migrations.html#up/0","title":"ValueFlows.Knowledge.ResourceSpecification.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html","title":"ValueFlows.Knowledge.ResourceSpecification.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#filter/2","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#join_to/3","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#queries/5","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#query/1","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#query/2","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications","type":"module"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#ap_publish_activity/2","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#ap_receive_activity/3","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#create/2","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#cursor/0","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#federation_module/0","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#indexing_object_format/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#many/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#many!/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.many!/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#maybe_get/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.maybe_get/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#one/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#search/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.search/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#soft_delete/1","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#test_cursor/0","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.test_cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#update/2","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Plan.GraphQL.html","title":"ValueFlows.Plan.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html","title":"ValueFlows.Planning.Commitment","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#context_module/0","title":"ValueFlows.Planning.Commitment.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#create_changeset/2","title":"ValueFlows.Planning.Commitment.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#follow_filters/0","title":"ValueFlows.Planning.Commitment.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#measure_fields/0","title":"ValueFlows.Planning.Commitment.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#queries_module/0","title":"ValueFlows.Planning.Commitment.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#update_changeset/2","title":"ValueFlows.Planning.Commitment.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#t:attrs/0","title":"ValueFlows.Planning.Commitment.attrs/0","type":"type"},{"doc":"","ref":"ValueFlows.Planning.Commitment.html#t:t/0","title":"ValueFlows.Planning.Commitment.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html","title":"ValueFlows.Planning.Commitment.Commitments","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#by_id/2","title":"ValueFlows.Planning.Commitment.Commitments.by_id/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#create/2","title":"ValueFlows.Planning.Commitment.Commitments.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#many/1","title":"ValueFlows.Planning.Commitment.Commitments.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#one/1","title":"ValueFlows.Planning.Commitment.Commitments.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#preload_action/1","title":"ValueFlows.Planning.Commitment.Commitments.preload_action/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#preload_all/1","title":"ValueFlows.Planning.Commitment.Commitments.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#prep_attrs/2","title":"ValueFlows.Planning.Commitment.Commitments.prep_attrs/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#soft_delete/2","title":"ValueFlows.Planning.Commitment.Commitments.soft_delete/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#update/3","title":"ValueFlows.Planning.Commitment.Commitments.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html","title":"ValueFlows.Planning.Commitment.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#commitment/2","title":"ValueFlows.Planning.Commitment.GraphQL.commitment/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#commitments_filtered/2","title":"ValueFlows.Planning.Commitment.GraphQL.commitments_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#create_commitment/2","title":"ValueFlows.Planning.Commitment.GraphQL.create_commitment/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#delete_commitment/2","title":"ValueFlows.Planning.Commitment.GraphQL.delete_commitment/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_commitment/2","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_commitment/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_created/3","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_created/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_input_of_edge/3","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_input_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_output_of_edge/3","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_output_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_resource_inventoried_as_edge/3","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_resource_inventoried_as_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_satisfies_edge/3","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_satisfies_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#update_commitment/2","title":"ValueFlows.Planning.Commitment.GraphQL.update_commitment/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Migrations.html","title":"ValueFlows.Planning.Commitment.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Migrations.html#down/0","title":"ValueFlows.Planning.Commitment.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Migrations.html#up/0","title":"ValueFlows.Planning.Commitment.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html","title":"ValueFlows.Planning.Commitment.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#filter/2","title":"ValueFlows.Planning.Commitment.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#filter/3","title":"ValueFlows.Planning.Commitment.Queries.filter/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#join_to/3","title":"ValueFlows.Planning.Commitment.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#queries/5","title":"ValueFlows.Planning.Commitment.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#query/1","title":"ValueFlows.Planning.Commitment.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#query/2","title":"ValueFlows.Planning.Commitment.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html","title":"ValueFlows.Planning.Intent","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#context_module/0","title":"ValueFlows.Planning.Intent.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#create_changeset/2","title":"ValueFlows.Planning.Intent.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#follow_filters/0","title":"ValueFlows.Planning.Intent.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#measure_fields/0","title":"ValueFlows.Planning.Intent.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#queries_module/0","title":"ValueFlows.Planning.Intent.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#update_changeset/2","title":"ValueFlows.Planning.Intent.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#validate_changeset/1","title":"ValueFlows.Planning.Intent.validate_changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.html#t:t/0","title":"ValueFlows.Planning.Intent.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html","title":"ValueFlows.Planning.Intent.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#agent_intents/3","title":"ValueFlows.Planning.Intent.GraphQL.agent_intents/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#agent_intents_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.agent_intents_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_intent/2","title":"ValueFlows.Planning.Intent.GraphQL.create_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_need/2","title":"ValueFlows.Planning.Intent.GraphQL.create_need/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_offer/2","title":"ValueFlows.Planning.Intent.GraphQL.create_offer/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#delete_intent/2","title":"ValueFlows.Planning.Intent.GraphQL.delete_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_agent_intents_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_agent_intents_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_input_of_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_input_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_intent/2","title":"ValueFlows.Planning.Intent.GraphQL.fetch_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_intents/2","title":"ValueFlows.Planning.Intent.GraphQL.fetch_intents/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_needs/2","title":"ValueFlows.Planning.Intent.GraphQL.fetch_needs/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_offers/2","title":"ValueFlows.Planning.Intent.GraphQL.fetch_offers/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_output_of_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_output_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_provider_intents_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_provider_intents_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_resource_inventoried_as_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_resource_inventoried_as_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_satisfied_by_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.fetch_satisfied_by_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intent/2","title":"ValueFlows.Planning.Intent.GraphQL.intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intents/2","title":"ValueFlows.Planning.Intent.GraphQL.intents/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intents_filtered/2","title":"ValueFlows.Planning.Intent.GraphQL.intents_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#list_intents/2","title":"ValueFlows.Planning.Intent.GraphQL.list_intents/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#needs/2","title":"ValueFlows.Planning.Intent.GraphQL.needs/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#offers/2","title":"ValueFlows.Planning.Intent.GraphQL.offers/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#provider_intents/3","title":"ValueFlows.Planning.Intent.GraphQL.provider_intents/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#provider_intents_edge/3","title":"ValueFlows.Planning.Intent.GraphQL.provider_intents_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#update_intent/2","title":"ValueFlows.Planning.Intent.GraphQL.update_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html","title":"ValueFlows.Planning.Intent.Intents","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#ap_publish_activity/2","title":"ValueFlows.Planning.Intent.Intents.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#ap_receive_activity/3","title":"ValueFlows.Planning.Intent.Intents.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#by_id/2","title":"ValueFlows.Planning.Intent.Intents.by_id/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#create/2","title":"ValueFlows.Planning.Intent.Intents.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#cursor/0","title":"ValueFlows.Planning.Intent.Intents.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#federation_module/0","title":"ValueFlows.Planning.Intent.Intents.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#fields/2","title":"ValueFlows.Planning.Intent.Intents.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#indexing_object_format/1","title":"ValueFlows.Planning.Intent.Intents.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Planning.Intent.Intents.html#many/1","title":"ValueFlows.Planning.Intent.Intents.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Planning.Intent.Intents.html#one/1","title":"ValueFlows.Planning.Intent.Intents.one/1","type":"function"},{"doc":"Retrieves an Page of intents according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Planning.Intent.Intents.html#page/5","title":"ValueFlows.Planning.Intent.Intents.page/5","type":"function"},{"doc":"Retrieves an Pages of intents according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Planning.Intent.Intents.html#pages/6","title":"ValueFlows.Planning.Intent.Intents.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#preload_action/1","title":"ValueFlows.Planning.Intent.Intents.preload_action/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#preload_all/1","title":"ValueFlows.Planning.Intent.Intents.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#prepare_attrs/2","title":"ValueFlows.Planning.Intent.Intents.prepare_attrs/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#soft_delete/1","title":"ValueFlows.Planning.Intent.Intents.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#soft_delete/2","title":"ValueFlows.Planning.Intent.Intents.soft_delete/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#test_cursor/0","title":"ValueFlows.Planning.Intent.Intents.test_cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#update/2","title":"ValueFlows.Planning.Intent.Intents.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#update/3","title":"ValueFlows.Planning.Intent.Intents.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html","title":"ValueFlows.Planning.Intent.LiveHandler","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#assign_to/5","title":"ValueFlows.Planning.Intent.LiveHandler.assign_to/5","type":"function"},{"doc":"Create intents from a markdown-formatted list of checkboxes","ref":"ValueFlows.Planning.Intent.LiveHandler.html#create_from_list/6","title":"ValueFlows.Planning.Intent.LiveHandler.create_from_list/6","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#create_from_list/7","title":"ValueFlows.Planning.Intent.LiveHandler.create_from_list/7","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#handle_event/3","title":"ValueFlows.Planning.Intent.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#handle_param/3","title":"ValueFlows.Planning.Intent.LiveHandler.handle_param/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Migrations.html","title":"ValueFlows.Planning.Intent.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.Migrations.html#add_references/0","title":"ValueFlows.Planning.Intent.Migrations.add_references/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Migrations.html#down/0","title":"ValueFlows.Planning.Intent.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Migrations.html#up/0","title":"ValueFlows.Planning.Intent.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html","title":"ValueFlows.Planning.Intent.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#filter/2","title":"ValueFlows.Planning.Intent.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#filter/3","title":"ValueFlows.Planning.Intent.Queries.filter/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#join_to/3","title":"ValueFlows.Planning.Intent.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#queries/5","title":"ValueFlows.Planning.Intent.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#query/1","title":"ValueFlows.Planning.Intent.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#query/2","title":"ValueFlows.Planning.Intent.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html","title":"ValueFlows.Planning.Satisfaction","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#context_module/0","title":"ValueFlows.Planning.Satisfaction.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#create_changeset/2","title":"ValueFlows.Planning.Satisfaction.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#follow_filters/0","title":"ValueFlows.Planning.Satisfaction.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#measure_fields/0","title":"ValueFlows.Planning.Satisfaction.measure_fields/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#queries_module/0","title":"ValueFlows.Planning.Satisfaction.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#update_changeset/2","title":"ValueFlows.Planning.Satisfaction.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#t:attrs/0","title":"ValueFlows.Planning.Satisfaction.attrs/0","type":"type"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.html#t:t/0","title":"ValueFlows.Planning.Satisfaction.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html","title":"ValueFlows.Planning.Satisfaction.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#create/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#delete/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.delete/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#event_or_commitment_resolve_type/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.event_or_commitment_resolve_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfaction/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfaction/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfied_by_edge/3","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfied_by_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfies_edge/3","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfies_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#satisfaction/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.satisfaction/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#satisfactions_filtered/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.satisfactions_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#update/2","title":"ValueFlows.Planning.Satisfaction.GraphQL.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Migrations.html","title":"ValueFlows.Planning.Satisfaction.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Migrations.html#down/0","title":"ValueFlows.Planning.Satisfaction.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Migrations.html#up/0","title":"ValueFlows.Planning.Satisfaction.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html","title":"ValueFlows.Planning.Satisfaction.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#filter/2","title":"ValueFlows.Planning.Satisfaction.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#filter/3","title":"ValueFlows.Planning.Satisfaction.Queries.filter/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#join_to/3","title":"ValueFlows.Planning.Satisfaction.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#queries/5","title":"ValueFlows.Planning.Satisfaction.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#query/1","title":"ValueFlows.Planning.Satisfaction.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#query/2","title":"ValueFlows.Planning.Satisfaction.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html","title":"ValueFlows.Planning.Satisfaction.Satisfactions","type":"module"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#by_id/2","title":"ValueFlows.Planning.Satisfaction.Satisfactions.by_id/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#create/2","title":"ValueFlows.Planning.Satisfaction.Satisfactions.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#many/1","title":"ValueFlows.Planning.Satisfaction.Satisfactions.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#one/1","title":"ValueFlows.Planning.Satisfaction.Satisfactions.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#preload_all/1","title":"ValueFlows.Planning.Satisfaction.Satisfactions.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#soft_delete/2","title":"ValueFlows.Planning.Satisfaction.Satisfactions.soft_delete/2","type":"function"},{"doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#update/3","title":"ValueFlows.Planning.Satisfaction.Satisfactions.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.html","title":"ValueFlows.Process","type":"module"},{"doc":"","ref":"ValueFlows.Process.html#context_module/0","title":"ValueFlows.Process.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#create_changeset/2","title":"ValueFlows.Process.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#follow_filters/0","title":"ValueFlows.Process.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#queries_module/0","title":"ValueFlows.Process.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#update_changeset/2","title":"ValueFlows.Process.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#validate_changeset/1","title":"ValueFlows.Process.validate_changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.html#t:t/0","title":"ValueFlows.Process.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html","title":"ValueFlows.Process.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#all_processes/2","title":"ValueFlows.Process.GraphQL.all_processes/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#create_process/2","title":"ValueFlows.Process.GraphQL.create_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#creator_processes/3","title":"ValueFlows.Process.GraphQL.creator_processes/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#creator_processes_edge/3","title":"ValueFlows.Process.GraphQL.creator_processes_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#delete_process/2","title":"ValueFlows.Process.GraphQL.delete_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_based_on_edge/3","title":"ValueFlows.Process.GraphQL.fetch_based_on_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_creator_processes_edge/3","title":"ValueFlows.Process.GraphQL.fetch_creator_processes_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_process/2","title":"ValueFlows.Process.GraphQL.fetch_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_processes/2","title":"ValueFlows.Process.GraphQL.fetch_processes/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_trace_process/2","title":"ValueFlows.Process.GraphQL.fetch_trace_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#fetch_track_process/2","title":"ValueFlows.Process.GraphQL.fetch_track_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#inputs/3","title":"ValueFlows.Process.GraphQL.inputs/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#intended_inputs/3","title":"ValueFlows.Process.GraphQL.intended_inputs/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#intended_outputs/3","title":"ValueFlows.Process.GraphQL.intended_outputs/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#list_processes/4","title":"ValueFlows.Process.GraphQL.list_processes/4","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#outputs/3","title":"ValueFlows.Process.GraphQL.outputs/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#process/2","title":"ValueFlows.Process.GraphQL.process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#processes/2","title":"ValueFlows.Process.GraphQL.processes/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#processes_filtered/2","title":"ValueFlows.Process.GraphQL.processes_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#simulate/2","title":"ValueFlows.Process.GraphQL.simulate/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#trace/3","title":"ValueFlows.Process.GraphQL.trace/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#track/3","title":"ValueFlows.Process.GraphQL.track/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.GraphQL.html#update_process/2","title":"ValueFlows.Process.GraphQL.update_process/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.LiveHandler.html","title":"ValueFlows.Process.LiveHandler","type":"module"},{"doc":"","ref":"ValueFlows.Process.LiveHandler.html#changeset/1","title":"ValueFlows.Process.LiveHandler.changeset/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.LiveHandler.html#do_update/3","title":"ValueFlows.Process.LiveHandler.do_update/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.LiveHandler.html#handle_event/3","title":"ValueFlows.Process.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.Migrations.html","title":"ValueFlows.Process.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Process.Migrations.html#down/0","title":"ValueFlows.Process.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.Migrations.html#up/0","title":"ValueFlows.Process.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html","title":"ValueFlows.Process.Processes","type":"module"},{"doc":"","ref":"ValueFlows.Process.Processes.html#ap_publish_activity/2","title":"ValueFlows.Process.Processes.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#ap_receive_activity/3","title":"ValueFlows.Process.Processes.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#create/2","title":"ValueFlows.Process.Processes.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#cursor/0","title":"ValueFlows.Process.Processes.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#federation_module/0","title":"ValueFlows.Process.Processes.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#fields/2","title":"ValueFlows.Process.Processes.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#indexing_object_format/1","title":"ValueFlows.Process.Processes.indexing_object_format/1","type":"function"},{"doc":"See ValueFlows.EconomicEvent.EconomicEvents.inputs_of/2 .","ref":"ValueFlows.Process.Processes.html#inputs/2","title":"ValueFlows.Process.Processes.inputs/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#intended_inputs/2","title":"ValueFlows.Process.Processes.intended_inputs/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#intended_outputs/2","title":"ValueFlows.Process.Processes.intended_outputs/2","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Process.Processes.html#many/1","title":"ValueFlows.Process.Processes.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Process.Processes.html#one/1","title":"ValueFlows.Process.Processes.one/1","type":"function"},{"doc":"See ValueFlows.EconomicEvent.EconomicEvents.outputs_of/2 .","ref":"ValueFlows.Process.Processes.html#outputs/2","title":"ValueFlows.Process.Processes.outputs/2","type":"function"},{"doc":"Retrieves an Page of processes according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Process.Processes.html#page/5","title":"ValueFlows.Process.Processes.page/5","type":"function"},{"doc":"Retrieves an Pages of processes according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Process.Processes.html#pages/6","title":"ValueFlows.Process.Processes.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#preload_all/1","title":"ValueFlows.Process.Processes.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#prepare_attrs/1","title":"ValueFlows.Process.Processes.prepare_attrs/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#soft_delete/1","title":"ValueFlows.Process.Processes.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#test_cursor/0","title":"ValueFlows.Process.Processes.test_cursor/0","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Trace.process/3 .","ref":"ValueFlows.Process.Processes.html#trace/3","title":"ValueFlows.Process.Processes.trace/3","type":"function"},{"doc":"See ValueFlows.EconomicEvent.Track.process/3 .","ref":"ValueFlows.Process.Processes.html#track/3","title":"ValueFlows.Process.Processes.track/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.Processes.html#update/2","title":"ValueFlows.Process.Processes.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Queries.html","title":"ValueFlows.Process.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Process.Queries.html#filter/2","title":"ValueFlows.Process.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Process.Queries.html#join_to/3","title":"ValueFlows.Process.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Process.Queries.html#queries/5","title":"ValueFlows.Process.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Process.Queries.html#query/1","title":"ValueFlows.Process.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Process.Queries.html#query/2","title":"ValueFlows.Process.Queries.query/2","type":"function"},{"doc":"Schema for proposal, using Pointers.Pointable","ref":"ValueFlows.Proposal.html","title":"ValueFlows.Proposal","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.html#context_module/0","title":"ValueFlows.Proposal.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.html#create_changeset/2","title":"ValueFlows.Proposal.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.html#follow_filters/0","title":"ValueFlows.Proposal.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.html#queries_module/0","title":"ValueFlows.Proposal.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.html#update_changeset/2","title":"ValueFlows.Proposal.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.html#t:t/0","title":"ValueFlows.Proposal.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html","title":"ValueFlows.Proposal.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#agent_proposals/3","title":"ValueFlows.Proposal.GraphQL.agent_proposals/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#all_proposals/2","title":"ValueFlows.Proposal.GraphQL.all_proposals/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#create_proposal/2","title":"ValueFlows.Proposal.GraphQL.create_proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#delete_proposal/2","title":"ValueFlows.Proposal.GraphQL.delete_proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#eligible_location_edge/3","title":"ValueFlows.Proposal.GraphQL.eligible_location_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#fetch_proposal/2","title":"ValueFlows.Proposal.GraphQL.fetch_proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#fetch_proposals/2","title":"ValueFlows.Proposal.GraphQL.fetch_proposals/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposal/2","title":"ValueFlows.Proposal.GraphQL.proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposals/2","title":"ValueFlows.Proposal.GraphQL.proposals/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposals_filtered/2","title":"ValueFlows.Proposal.GraphQL.proposals_filtered/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.GraphQL.html#update_proposal/2","title":"ValueFlows.Proposal.GraphQL.update_proposal/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Migrations.html","title":"ValueFlows.Proposal.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.Migrations.html#down/0","title":"ValueFlows.Proposal.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Migrations.html#up/0","title":"ValueFlows.Proposal.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html","title":"ValueFlows.Proposal.Proposals","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#ap_publish_activity/2","title":"ValueFlows.Proposal.Proposals.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#ap_receive_activity/3","title":"ValueFlows.Proposal.Proposals.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#create/2","title":"ValueFlows.Proposal.Proposals.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#cursor/0","title":"ValueFlows.Proposal.Proposals.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#federation_module/0","title":"ValueFlows.Proposal.Proposals.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#fields/2","title":"ValueFlows.Proposal.Proposals.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#indexing_object_format/1","title":"ValueFlows.Proposal.Proposals.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Proposal.Proposals.html#many/1","title":"ValueFlows.Proposal.Proposals.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Proposal.Proposals.html#one/1","title":"ValueFlows.Proposal.Proposals.one/1","type":"function"},{"doc":"Retrieves an Page of proposals according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Proposal.Proposals.html#page/5","title":"ValueFlows.Proposal.Proposals.page/5","type":"function"},{"doc":"Retrieves an Pages of proposals according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Proposal.Proposals.html#pages/6","title":"ValueFlows.Proposal.Proposals.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#preload_all/1","title":"ValueFlows.Proposal.Proposals.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#soft_delete/1","title":"ValueFlows.Proposal.Proposals.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#test_cursor/0","title":"ValueFlows.Proposal.Proposals.test_cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Proposals.html#update/2","title":"ValueFlows.Proposal.Proposals.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html","title":"ValueFlows.Proposal.ProposedIntent","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html#changeset/3","title":"ValueFlows.Proposal.ProposedIntent.changeset/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html#t:t/0","title":"ValueFlows.Proposal.ProposedIntent.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html","title":"ValueFlows.Proposal.ProposedIntentGraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#delete_proposed_intent/2","title":"ValueFlows.Proposal.ProposedIntentGraphQL.delete_proposed_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#fetch_proposed_intent/2","title":"ValueFlows.Proposal.ProposedIntentGraphQL.fetch_proposed_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#intent_in_proposal_edge/3","title":"ValueFlows.Proposal.ProposedIntentGraphQL.intent_in_proposal_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#proposal_in_intent_edge/3","title":"ValueFlows.Proposal.ProposedIntentGraphQL.proposal_in_intent_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#propose_intent/2","title":"ValueFlows.Proposal.ProposedIntentGraphQL.propose_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#proposed_intent/2","title":"ValueFlows.Proposal.ProposedIntentGraphQL.proposed_intent/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#published_in_edge/3","title":"ValueFlows.Proposal.ProposedIntentGraphQL.published_in_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentGraphQL.html#publishes_edge/3","title":"ValueFlows.Proposal.ProposedIntentGraphQL.publishes_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html","title":"ValueFlows.Proposal.ProposedIntentQueries","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#filter/2","title":"ValueFlows.Proposal.ProposedIntentQueries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#join_to/3","title":"ValueFlows.Proposal.ProposedIntentQueries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#query/1","title":"ValueFlows.Proposal.ProposedIntentQueries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#query/2","title":"ValueFlows.Proposal.ProposedIntentQueries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html","title":"ValueFlows.Proposal.ProposedIntents","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#ap_publish_activity/2","title":"ValueFlows.Proposal.ProposedIntents.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#ap_receive_activity/3","title":"ValueFlows.Proposal.ProposedIntents.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#create/2","title":"ValueFlows.Proposal.ProposedIntents.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#delete/1","title":"ValueFlows.Proposal.ProposedIntents.delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#federation_module/0","title":"ValueFlows.Proposal.ProposedIntents.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#many/1","title":"ValueFlows.Proposal.ProposedIntents.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#one/1","title":"ValueFlows.Proposal.ProposedIntents.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#propose_intent/3","title":"ValueFlows.Proposal.ProposedIntents.propose_intent/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTo.html","title":"ValueFlows.Proposal.ProposedTo","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTo.html#changeset/2","title":"ValueFlows.Proposal.ProposedTo.changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTo.html#t:t/0","title":"ValueFlows.Proposal.ProposedTo.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html","title":"ValueFlows.Proposal.ProposedToGraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#delete_proposed_to/2","title":"ValueFlows.Proposal.ProposedToGraphQL.delete_proposed_to/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#fetch_proposed_edge/3","title":"ValueFlows.Proposal.ProposedToGraphQL.fetch_proposed_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#fetch_proposed_to/2","title":"ValueFlows.Proposal.ProposedToGraphQL.fetch_proposed_to/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#propose_to/2","title":"ValueFlows.Proposal.ProposedToGraphQL.propose_to/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#proposed_to/2","title":"ValueFlows.Proposal.ProposedToGraphQL.proposed_to/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#proposed_to_agent/3","title":"ValueFlows.Proposal.ProposedToGraphQL.proposed_to_agent/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToGraphQL.html#published_to_edge/3","title":"ValueFlows.Proposal.ProposedToGraphQL.published_to_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html","title":"ValueFlows.Proposal.ProposedToQueries","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#filter/2","title":"ValueFlows.Proposal.ProposedToQueries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#join_to/3","title":"ValueFlows.Proposal.ProposedToQueries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#query/1","title":"ValueFlows.Proposal.ProposedToQueries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#query/2","title":"ValueFlows.Proposal.ProposedToQueries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html","title":"ValueFlows.Proposal.ProposedTos","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#ap_publish_activity/2","title":"ValueFlows.Proposal.ProposedTos.ap_publish_activity/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#ap_receive_activity/3","title":"ValueFlows.Proposal.ProposedTos.ap_receive_activity/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#delete/1","title":"ValueFlows.Proposal.ProposedTos.delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#federation_module/0","title":"ValueFlows.Proposal.ProposedTos.federation_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#many/1","title":"ValueFlows.Proposal.ProposedTos.many/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#one/1","title":"ValueFlows.Proposal.ProposedTos.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#propose_to/2","title":"ValueFlows.Proposal.ProposedTos.propose_to/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html","title":"ValueFlows.Proposal.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html#filter/2","title":"ValueFlows.Proposal.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html#join_to/3","title":"ValueFlows.Proposal.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html#queries/5","title":"ValueFlows.Proposal.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html#query/1","title":"ValueFlows.Proposal.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Proposal.Queries.html#query/2","title":"ValueFlows.Proposal.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Recipe.GraphQL.html","title":"ValueFlows.Recipe.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Scenario.GraphQL.html","title":"ValueFlows.Scenario.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Schema.html","title":"ValueFlows.Schema","type":"module"},{"doc":"","ref":"ValueFlows.Util.html","title":"ValueFlows.Util","type":"module"},{"doc":"","ref":"ValueFlows.Util.html#change_measures/3","title":"ValueFlows.Util.change_measures/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#content_url_or_path/1","title":"ValueFlows.Util.content_url_or_path/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#default_recurse_limit/0","title":"ValueFlows.Util.default_recurse_limit/0","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#ensure_edit_permission/2","title":"ValueFlows.Util.ensure_edit_permission/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#handle_changeset_errors/3","title":"ValueFlows.Util.handle_changeset_errors/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#image_schema/0","title":"ValueFlows.Util.image_schema/0","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#image_url/1","title":"ValueFlows.Util.image_url/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#index_for_search/1","title":"ValueFlows.Util.index_for_search/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#indexing_format_creator/1","title":"ValueFlows.Util.indexing_format_creator/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#indexing_format_tags/1","title":"ValueFlows.Util.indexing_format_tags/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#is_admin/1","title":"ValueFlows.Util.is_admin/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#map_values/2","title":"ValueFlows.Util.map_values/2","type":"function"},{"doc":"lookup tag from URL(s), to support vf-graphql mode","ref":"ValueFlows.Util.html#maybe_classification/2","title":"ValueFlows.Util.maybe_classification/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#maybe_classification_id/2","title":"ValueFlows.Util.maybe_classification_id/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#maybe_search/2","title":"ValueFlows.Util.maybe_search/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#org_schema/0","title":"ValueFlows.Util.org_schema/0","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#parse_measurement_attrs/2","title":"ValueFlows.Util.parse_measurement_attrs/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#publish/2","title":"ValueFlows.Util.publish/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#publish/3","title":"ValueFlows.Util.publish/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#search_for_matches/1","title":"ValueFlows.Util.search_for_matches/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#try_tag_thing/3","title":"ValueFlows.Util.try_tag_thing/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#user_or_org_schema/0","title":"ValueFlows.Util.user_or_org_schema/0","type":"function"},{"doc":"","ref":"ValueFlows.Util.html#user_schema/0","title":"ValueFlows.Util.user_schema/0","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html","title":"ValueFlows.Util.Federation","type":"module"},{"doc":"","ref":"ValueFlows.Util.Federation.html#activity_object_id/1","title":"ValueFlows.Util.Federation.activity_object_id/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_fetch_object/4","title":"ValueFlows.Util.Federation.ap_fetch_object/4","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_graphql_fields/2","title":"ValueFlows.Util.Federation.ap_graphql_fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_prepare_activity/4","title":"ValueFlows.Util.Federation.ap_prepare_activity/4","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_prepare_object/1","title":"ValueFlows.Util.Federation.ap_prepare_object/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_publish/3","title":"ValueFlows.Util.Federation.ap_publish/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#ap_publish_activity/5","title":"ValueFlows.Util.Federation.ap_publish_activity/5","type":"function"},{"doc":"Incoming federation","ref":"ValueFlows.Util.Federation.html#ap_receive_activity/4","title":"ValueFlows.Util.Federation.ap_receive_activity/4","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#is_empty/1","title":"ValueFlows.Util.Federation.is_empty/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#maybe_id/2","title":"ValueFlows.Util.Federation.maybe_id/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.Federation.html#struct_to_json/1","title":"ValueFlows.Util.Federation.struct_to_json/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html","title":"ValueFlows.Util.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#accounting_quantity_edge/3","title":"ValueFlows.Util.GraphQL.accounting_quantity_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#at_location_edge/3","title":"ValueFlows.Util.GraphQL.at_location_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#available_quantity_edge/3","title":"ValueFlows.Util.GraphQL.available_quantity_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#current_location_edge/3","title":"ValueFlows.Util.GraphQL.current_location_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#effort_quantity_edge/3","title":"ValueFlows.Util.GraphQL.effort_quantity_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#fetch_classifications_edge/3","title":"ValueFlows.Util.GraphQL.fetch_classifications_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#fetch_data_filters/2","title":"ValueFlows.Util.GraphQL.fetch_data_filters/2","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#fetch_provider_edge/3","title":"ValueFlows.Util.GraphQL.fetch_provider_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#fetch_receiver_edge/3","title":"ValueFlows.Util.GraphQL.fetch_receiver_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#fetch_resource_conforms_to_edge/3","title":"ValueFlows.Util.GraphQL.fetch_resource_conforms_to_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#image_content_url/3","title":"ValueFlows.Util.GraphQL.image_content_url/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#maybe_upload/3","title":"ValueFlows.Util.GraphQL.maybe_upload/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#onhand_quantity_edge/3","title":"ValueFlows.Util.GraphQL.onhand_quantity_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#parse_cool_scalar/1","title":"ValueFlows.Util.GraphQL.parse_cool_scalar/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#resource_quantity_edge/3","title":"ValueFlows.Util.GraphQL.resource_quantity_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#scope_edge/3","title":"ValueFlows.Util.GraphQL.scope_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#serialize_cool_scalar/1","title":"ValueFlows.Util.GraphQL.serialize_cool_scalar/1","type":"function"},{"doc":"","ref":"ValueFlows.Util.GraphQL.html#tags_edges/3","title":"ValueFlows.Util.GraphQL.tags_edges/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.html","title":"ValueFlows.ValueCalculation","type":"module"},{"doc":"","ref":"ValueFlows.ValueCalculation.html#create_changeset/2","title":"ValueFlows.ValueCalculation.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.html#follow_filters/0","title":"ValueFlows.ValueCalculation.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.html#queries_module/0","title":"ValueFlows.ValueCalculation.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.html#update_changeset/2","title":"ValueFlows.ValueCalculation.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.html#t:t/0","title":"ValueFlows.ValueCalculation.t/0","type":"type"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html","title":"ValueFlows.ValueCalculation.Formula2","type":"module"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#decimal_to_float/1","title":"ValueFlows.ValueCalculation.Formula2.decimal_to_float/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#default_env/0","title":"ValueFlows.ValueCalculation.Formula2.default_env/0","type":"function"},{"doc":"Execute the AST over the environment.","ref":"ValueFlows.ValueCalculation.Formula2.html#eval/2","title":"ValueFlows.ValueCalculation.Formula2.eval/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#float_to_decimal/1","title":"ValueFlows.ValueCalculation.Formula2.float_to_decimal/1","type":"function"},{"doc":"Return the AST for a binary","ref":"ValueFlows.ValueCalculation.Formula2.html#parse/1","title":"ValueFlows.ValueCalculation.Formula2.parse/1","type":"function"},{"doc":"Run property tests against the given","ref":"ValueFlows.ValueCalculation.Formula2.html#validate/4","title":"ValueFlows.ValueCalculation.Formula2.validate/4","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#t:ast/0","title":"ValueFlows.ValueCalculation.Formula2.ast/0","type":"type"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#t:env/0","title":"ValueFlows.ValueCalculation.Formula2.env/0","type":"type"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#t:value/0","title":"ValueFlows.ValueCalculation.Formula2.value/0","type":"type"},{"doc":"","ref":"ValueFlows.ValueCalculation.Formula2.html#t:var_ref/0","title":"ValueFlows.ValueCalculation.Formula2.var_ref/0","type":"type"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html","title":"ValueFlows.ValueCalculation.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#create_value_calculation/2","title":"ValueFlows.ValueCalculation.GraphQL.create_value_calculation/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#delete_value_calculation/2","title":"ValueFlows.ValueCalculation.GraphQL.delete_value_calculation/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#fetch_value_calculation/2","title":"ValueFlows.ValueCalculation.GraphQL.fetch_value_calculation/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#fetch_value_calculations/2","title":"ValueFlows.ValueCalculation.GraphQL.fetch_value_calculations/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#resource_conforms_to_edge/3","title":"ValueFlows.ValueCalculation.GraphQL.resource_conforms_to_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#update_value_calculation/2","title":"ValueFlows.ValueCalculation.GraphQL.update_value_calculation/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_action_edge/3","title":"ValueFlows.ValueCalculation.GraphQL.value_action_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_calculation/2","title":"ValueFlows.ValueCalculation.GraphQL.value_calculation/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_calculations/2","title":"ValueFlows.ValueCalculation.GraphQL.value_calculations/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_resource_conforms_to_edge/3","title":"ValueFlows.ValueCalculation.GraphQL.value_resource_conforms_to_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_unit_edge/3","title":"ValueFlows.ValueCalculation.GraphQL.value_unit_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Migrations.html","title":"ValueFlows.ValueCalculation.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.ValueCalculation.Migrations.html#down/0","title":"ValueFlows.ValueCalculation.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Migrations.html#up/0","title":"ValueFlows.ValueCalculation.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Queries.html","title":"ValueFlows.ValueCalculation.Queries","type":"module"},{"doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#filter/2","title":"ValueFlows.ValueCalculation.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#join_to/3","title":"ValueFlows.ValueCalculation.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#query/1","title":"ValueFlows.ValueCalculation.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#query/2","title":"ValueFlows.ValueCalculation.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html","title":"ValueFlows.ValueCalculation.ValueCalculations","type":"module"},{"doc":"Apply the value calculation to a context","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#apply_to/2","title":"ValueFlows.ValueCalculation.ValueCalculations.apply_to/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#create/2","title":"ValueFlows.ValueCalculation.ValueCalculations.create/2","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#many/1","title":"ValueFlows.ValueCalculation.ValueCalculations.many/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#one/1","title":"ValueFlows.ValueCalculation.ValueCalculations.one/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#preload_all/1","title":"ValueFlows.ValueCalculation.ValueCalculations.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#soft_delete/1","title":"ValueFlows.ValueCalculation.ValueCalculations.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#update/2","title":"ValueFlows.ValueCalculation.ValueCalculations.update/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html","title":"Bonfire.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.html#admin_or/2","title":"Bonfire.GraphQL.admin_or/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#admin_or_empty_page/1","title":"Bonfire.GraphQL.admin_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#admin_or_not_permitted/1","title":"Bonfire.GraphQL.admin_or_not_permitted/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#cast_int_ulid_id/1","title":"Bonfire.GraphQL.cast_int_ulid_id/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#cast_nonnegint/1","title":"Bonfire.GraphQL.cast_nonnegint/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#cast_posint/1","title":"Bonfire.GraphQL.cast_posint/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#cast_ulid/1","title":"Bonfire.GraphQL.cast_ulid/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_account/1","title":"Bonfire.GraphQL.current_account/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_user/1","title":"Bonfire.GraphQL.current_user/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_user_or/2","title":"Bonfire.GraphQL.current_user_or/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_user_or_empty_page/1","title":"Bonfire.GraphQL.current_user_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_user_or_not_found/1","title":"Bonfire.GraphQL.current_user_or_not_found/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#current_user_or_not_logged_in/1","title":"Bonfire.GraphQL.current_user_or_not_logged_in/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#empty_page/0","title":"Bonfire.GraphQL.empty_page/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#equals_or/4","title":"Bonfire.GraphQL.equals_or/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#equals_or_not_permitted/2","title":"Bonfire.GraphQL.equals_or_not_permitted/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#full_page_opts/3","title":"Bonfire.GraphQL.full_page_opts/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#guest_only/1","title":"Bonfire.GraphQL.guest_only/1","type":"function"},{"doc":"Are we in a list (recursively)?","ref":"Bonfire.GraphQL.html#in_list?/1","title":"Bonfire.GraphQL.in_list?/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#invalid_credential/0","title":"Bonfire.GraphQL.invalid_credential/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#is_authenticated/1","title":"Bonfire.GraphQL.is_authenticated/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#limit_page_opts/2","title":"Bonfire.GraphQL.limit_page_opts/2","type":"function"},{"doc":"How many lists are we in (recursively)?","ref":"Bonfire.GraphQL.html#list_depth/1","title":"Bonfire.GraphQL.list_depth/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#not_found/0","title":"Bonfire.GraphQL.not_found/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#not_in_list_or/2","title":"Bonfire.GraphQL.not_in_list_or/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#not_in_list_or_empty_page/1","title":"Bonfire.GraphQL.not_in_list_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#not_logged_in/0","title":"Bonfire.GraphQL.not_logged_in/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#not_permitted/1","title":"Bonfire.GraphQL.not_permitted/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#parent_name/1","title":"Bonfire.GraphQL.parent_name/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#predicated/1","title":"Bonfire.GraphQL.predicated/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#predicated/2","title":"Bonfire.GraphQL.predicated/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#reproject/2","title":"Bonfire.GraphQL.reproject/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#reverse_path/1","title":"Bonfire.GraphQL.reverse_path/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#validate_cursor/2","title":"Bonfire.GraphQL.validate_cursor/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.html#wanted/2","title":"Bonfire.GraphQL.wanted/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Auth.html","title":"Bonfire.GraphQL.Auth","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Auth.html#account_by/1","title":"Bonfire.GraphQL.Auth.account_by/1","type":"function"},{"doc":"Once authenticated, load the context based on session (called from Bonfire.GraphQL.Plugs.GraphQLContext )","ref":"Bonfire.GraphQL.Auth.html#build_context_from_session/1","title":"Bonfire.GraphQL.Auth.build_context_from_session/1","type":"function"},{"doc":"Resolver for login mutation for Bonfire.GraphQL.CommonSchema","ref":"Bonfire.GraphQL.Auth.html#login/3","title":"Bonfire.GraphQL.Auth.login/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Auth.html#select_user/3","title":"Bonfire.GraphQL.Auth.select_user/3","type":"function"},{"doc":"Puts the account/user data in Absinthe context (runs after on login/3 resolver)","ref":"Bonfire.GraphQL.Auth.html#set_context_from_resolution/2","title":"Bonfire.GraphQL.Auth.set_context_from_resolution/2","type":"function"},{"doc":"Sets session cookie based on the Absinthe context set in set_context_from_resolution/2 (called from router's absinthe_before_send/2 )","ref":"Bonfire.GraphQL.Auth.html#set_session_from_context/2","title":"Bonfire.GraphQL.Auth.set_session_from_context/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Auth.html#user_by/2","title":"Bonfire.GraphQL.Auth.user_by/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Auth.html#username/1","title":"Bonfire.GraphQL.Auth.username/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html","title":"Bonfire.GraphQL.CommonResolver","type":"module"},{"doc":"Returns the canonical url for a thing or character","ref":"Bonfire.GraphQL.CommonResolver.html#canonical_url_edge/3","title":"Bonfire.GraphQL.CommonResolver.canonical_url_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#context_edge/3","title":"Bonfire.GraphQL.CommonResolver.context_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#context_edges/3","title":"Bonfire.GraphQL.CommonResolver.context_edges/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#created_at_edge/3","title":"Bonfire.GraphQL.CommonResolver.created_at_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#delete/2","title":"Bonfire.GraphQL.CommonResolver.delete/2","type":"function"},{"doc":"Returns the username for a character","ref":"Bonfire.GraphQL.CommonResolver.html#display_username_edge/3","title":"Bonfire.GraphQL.CommonResolver.display_username_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#fetch_context_edge/2","title":"Bonfire.GraphQL.CommonResolver.fetch_context_edge/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#fetch_context_edges/3","title":"Bonfire.GraphQL.CommonResolver.fetch_context_edges/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#is_deleted_edge/3","title":"Bonfire.GraphQL.CommonResolver.is_deleted_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#is_disabled_edge/3","title":"Bonfire.GraphQL.CommonResolver.is_disabled_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#is_hidden_edge/3","title":"Bonfire.GraphQL.CommonResolver.is_hidden_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#is_local_edge/3","title":"Bonfire.GraphQL.CommonResolver.is_local_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonResolver.html#is_public_edge/3","title":"Bonfire.GraphQL.CommonResolver.is_public_edge/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.CommonSchema.html","title":"Bonfire.GraphQL.CommonSchema","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Cursor.html","title":"Bonfire.GraphQL.Cursor","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.DevTools.html","title":"Bonfire.GraphQL.DevTools","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.DevTools.html#schema/2","title":"Bonfire.GraphQL.DevTools.schema/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.FetchFields.html","title":"Bonfire.GraphQL.FetchFields","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.FetchFields.html#run/1","title":"Bonfire.GraphQL.FetchFields.run/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.FetchFields.html#t:t/0","title":"Bonfire.GraphQL.FetchFields.t/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.FetchPage.html","title":"Bonfire.GraphQL.FetchPage","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.FetchPage.html#run/1","title":"Bonfire.GraphQL.FetchPage.run/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.FetchPage.html#t:t/0","title":"Bonfire.GraphQL.FetchPage.t/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.FetchPages.html","title":"Bonfire.GraphQL.FetchPages","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.FetchPages.html#run/1","title":"Bonfire.GraphQL.FetchPages.run/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.FetchPages.html#t:t/0","title":"Bonfire.GraphQL.FetchPages.t/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.Fields.html","title":"Bonfire.GraphQL.Fields","type":"module"},{"doc":"Returns the result corresponding to the given key, or the given default (or nil).","ref":"Bonfire.GraphQL.Fields.html#get/3","title":"Bonfire.GraphQL.Fields.get/3","type":"function"},{"doc":"Returns a post-batch callback function which calls get with the provided key and optional default value (or nil).","ref":"Bonfire.GraphQL.Fields.html#getter/2","title":"Bonfire.GraphQL.Fields.getter/2","type":"function"},{"doc":"Creates a new Fields from the data and a grouping function","ref":"Bonfire.GraphQL.Fields.html#new/2","title":"Bonfire.GraphQL.Fields.new/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Fields.html#new/3","title":"Bonfire.GraphQL.Fields.new/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Fields.html#t:t/0","title":"Bonfire.GraphQL.Fields.t/0","type":"type"},{"doc":"The Json scalar type allows arbitrary JSON values to be passed in and out. Requires { :jason, &quot;~&gt; 1.1&quot; } package: https://github.com/michalmuskala/jason","ref":"Bonfire.GraphQL.JSON.html","title":"Bonfire.GraphQL.JSON","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.CollapseErrors.html","title":"Bonfire.GraphQL.Middleware.CollapseErrors","type":"module"},{"doc":"Callback implementation for Absinthe.Middleware.call/2 .","ref":"Bonfire.GraphQL.Middleware.CollapseErrors.html#call/2","title":"Bonfire.GraphQL.Middleware.CollapseErrors.call/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.CollapseErrors.html#collapse/1","title":"Bonfire.GraphQL.Middleware.CollapseErrors.collapse/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.CollapseErrors.html#collapse/2","title":"Bonfire.GraphQL.Middleware.CollapseErrors.collapse/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.Debug.html","title":"Bonfire.GraphQL.Middleware.Debug","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.Debug.html#call/2","title":"Bonfire.GraphQL.Middleware.Debug.call/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.RenderLists.html","title":"Bonfire.GraphQL.Middleware.RenderLists","type":"module"},{"doc":"Callback implementation for Absinthe.Middleware.call/2 .","ref":"Bonfire.GraphQL.Middleware.RenderLists.html#call/2","title":"Bonfire.GraphQL.Middleware.RenderLists.call/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Middleware.RenderLists.html#collapse/1","title":"Bonfire.GraphQL.Middleware.RenderLists.collapse/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Page.html","title":"Bonfire.GraphQL.Page","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Page.html#new/4","title":"Bonfire.GraphQL.Page.new/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Page.html#t:t/0","title":"Bonfire.GraphQL.Page.t/0","type":"type"},{"doc":"Information about this page's relation to a larger result set","ref":"Bonfire.GraphQL.PageInfo.html","title":"Bonfire.GraphQL.PageInfo","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.PageInfo.html#new/4","title":"Bonfire.GraphQL.PageInfo.new/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.PageInfo.html#t:t/0","title":"Bonfire.GraphQL.PageInfo.t/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.Pages.html","title":"Bonfire.GraphQL.Pages","type":"module"},{"doc":"Returns a Page for the given key, defaulting to an empty one","ref":"Bonfire.GraphQL.Pages.html#get/2","title":"Bonfire.GraphQL.Pages.get/2","type":"function"},{"doc":"Returns a post-batch callback (i.e. the third argument to batch/3) for a key which calls get() with the callback param and the key","ref":"Bonfire.GraphQL.Pages.html#getter/1","title":"Bonfire.GraphQL.Pages.getter/1","type":"function"},{"doc":"Create a new pages from a data map, counts map, cursor function and page opts","ref":"Bonfire.GraphQL.Pages.html#new/4","title":"Bonfire.GraphQL.Pages.new/4","type":"function"},{"doc":"Create a new Pages from some data rows, count rows and a grouping key. Groups the data by the grouping key on insertion and turns the counts into a map ready for lookup on a per-row basis. Note: if the grouping key is not present in the returned data rows, this function will crash. Our intuition is that this would mean an error in the calling code, so we would rather raise it early.","ref":"Bonfire.GraphQL.Pages.html#new/5","title":"Bonfire.GraphQL.Pages.new/5","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Pages.html#t:counts/0","title":"Bonfire.GraphQL.Pages.counts/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.Pages.html#t:data/0","title":"Bonfire.GraphQL.Pages.data/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.Pages.html#t:t/0","title":"Bonfire.GraphQL.Pages.t/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.Pagination.html","title":"Bonfire.GraphQL.Pagination","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Pagination.html#page/7","title":"Bonfire.GraphQL.Pagination.page/7","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Pagination.html#page_all/7","title":"Bonfire.GraphQL.Pagination.page_all/7","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Pagination.html#pages/8","title":"Bonfire.GraphQL.Pagination.pages/8","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.PlugPipelines.html","title":"Bonfire.GraphQL.PlugPipelines","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.PlugPipelines.html#default_pipeline/2","title":"Bonfire.GraphQL.PlugPipelines.default_pipeline/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.PlugPipelines.html#run/2","title":"Bonfire.GraphQL.PlugPipelines.run/2","type":"function"},{"doc":"GraphQL Plug to add current user to the context","ref":"Bonfire.GraphQL.Plugs.GraphQLContext.html","title":"Bonfire.GraphQL.Plugs.GraphQLContext","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Plugs.GraphQLContext.html#call/2","title":"Bonfire.GraphQL.Plugs.GraphQLContext.call/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Plugs.GraphQLContext.html#init/1","title":"Bonfire.GraphQL.Plugs.GraphQLContext.init/1","type":"function"},{"doc":"Helpful functions for preparing to query or test Absinthe applications. These functions make it trivially easy to generate very large, comprehensive queries for our types in Absinthe that will resolve every field in that type (and any number of subtypes as well to a given level of depth) Adapted from https://github.com/devonestes/assertions (MIT license)","ref":"Bonfire.GraphQL.QueryHelper.html","title":"Bonfire.GraphQL.QueryHelper","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#apply_overrides/2","title":"Bonfire.GraphQL.QueryHelper.apply_overrides/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#camelize/1","title":"Bonfire.GraphQL.QueryHelper.camelize/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#do_format_fields/3","title":"Bonfire.GraphQL.QueryHelper.do_format_fields/3","type":"function"},{"doc":"Returns a document containing the fields in a type and any sub-types down to a limited depth of nesting (default 3 ). This is helpful for generating a document to use for testing your GraphQL API. This function will always return all fields in the given type, ensuring that there aren't any accidental fields with resolver functions that aren't tested in at least some fashion. Example iex&gt; document_for ( :user , 2 ) ` ` ` name age posts { title subtitle } comments { body } ` ` `","ref":"Bonfire.GraphQL.QueryHelper.html#document_for/4","title":"Bonfire.GraphQL.QueryHelper.document_for/4","type":"function"},{"doc":"Returns all fields in a type and any sub-types down to a limited depth of nesting (default 3 ). This is helpful for converting a struct or map into an expected response that is a bare map and which can be used in some of the other assertions below.","ref":"Bonfire.GraphQL.QueryHelper.html#fields_for/3","title":"Bonfire.GraphQL.QueryHelper.fields_for/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#format_fields/4","title":"Bonfire.GraphQL.QueryHelper.format_fields/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#get_fields/3","title":"Bonfire.GraphQL.QueryHelper.get_fields/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#maybe_debug/3","title":"Bonfire.GraphQL.QueryHelper.maybe_debug/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#padding/1","title":"Bonfire.GraphQL.QueryHelper.padding/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#query_with_id/4","title":"Bonfire.GraphQL.QueryHelper.query_with_id/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.QueryHelper.html#run_query_id/6","title":"Bonfire.GraphQL.QueryHelper.run_query_id/6","type":"function"},{"doc":"Encapsulates the flow for resolving a field in the absence of multiple parents.","ref":"Bonfire.GraphQL.ResolveField.html","title":"Bonfire.GraphQL.ResolveField","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.ResolveField.html#run/1","title":"Bonfire.GraphQL.ResolveField.run/1","type":"function"},{"doc":"Encapsulates the flow for resolving a field for potentially multiple parents.","ref":"Bonfire.GraphQL.ResolveFields.html","title":"Bonfire.GraphQL.ResolveFields","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.ResolveFields.html#default_getter/2","title":"Bonfire.GraphQL.ResolveFields.default_getter/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.ResolveFields.html#run/1","title":"Bonfire.GraphQL.ResolveFields.run/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.ResolveFields.html#t:getter/0","title":"Bonfire.GraphQL.ResolveFields.getter/0","type":"type"},{"doc":"","ref":"Bonfire.GraphQL.ResolveFields.html#t:t/0","title":"Bonfire.GraphQL.ResolveFields.t/0","type":"type"},{"doc":"Encapsulates the flow of resolving a page in the presence of a single parent. We also currently use this as a stopgap while we finish implementing some things, trading speed for correctness.","ref":"Bonfire.GraphQL.ResolvePage.html","title":"Bonfire.GraphQL.ResolvePage","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.ResolvePage.html#run/1","title":"Bonfire.GraphQL.ResolvePage.run/1","type":"function"},{"doc":"Encapsulates the flow of resolving a page in the presence of a single parent. We also currently use this as a stopgap while we finish implementing some things, trading speed for correctness.","ref":"Bonfire.GraphQL.ResolvePages.html","title":"Bonfire.GraphQL.ResolvePages","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.ResolvePages.html#run/1","title":"Bonfire.GraphQL.ResolvePages.run/1","type":"function"},{"doc":"Encapsulates the flow of resolving a page in the absence of parents.","ref":"Bonfire.GraphQL.ResolveRootPage.html","title":"Bonfire.GraphQL.ResolveRootPage","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.ResolveRootPage.html#run/1","title":"Bonfire.GraphQL.ResolveRootPage.run/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Router.html","title":"Bonfire.GraphQL.Router","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.SchemaPipelines.html","title":"Bonfire.GraphQL.SchemaPipelines","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.SchemaPipelines.html#pipeline/1","title":"Bonfire.GraphQL.SchemaPipelines.pipeline/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.SchemaPipelines.html#run/2","title":"Bonfire.GraphQL.SchemaPipelines.run/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.SchemaUtils.html","title":"Bonfire.GraphQL.SchemaUtils","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.SchemaUtils.html#context_types/0","title":"Bonfire.GraphQL.SchemaUtils.context_types/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.SchemaUtils.html#hydrations_merge/1","title":"Bonfire.GraphQL.SchemaUtils.hydrations_merge/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html","title":"Bonfire.GraphQL.Test.GraphQLAssertions","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_binary/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_binary/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_boolean/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_boolean/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_created_at/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_created_at/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_cursor/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_cursor/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_cursors/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_cursors/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_datetime/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_datetime/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_datetime/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_datetime/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_display_username/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_display_username/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_email/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_email/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_eq/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_eq/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_field/3","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_field/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_float/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_float/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_int/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_int/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_invalid_credential/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_invalid_credential/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_list/0","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_list/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_list/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_list/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_list/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_list/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_location/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_location/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/3","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_maps_eq/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/4","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_maps_eq/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/5","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_maps_eq/5","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_non_neg/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_non_neg/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_not_found/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_not_logged_in/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_not_logged_in/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_not_permitted/3","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_not_permitted/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_object/4","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_object/4","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_optional/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_optional/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_optional_field/3","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_optional_field/3","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_page/0","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_page/0","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_page/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_page/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_page/6","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_page/6","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_page_info/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_page_info/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_pos/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_pos/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_ulid/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_ulid/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_updated_at/2","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_updated_at/2","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_url/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_url/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_username/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_username/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#assert_uuid/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.assert_uuid/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.Test.GraphQLAssertions.html#uncamel_map/1","title":"Bonfire.GraphQL.Test.GraphQLAssertions.uncamel_map/1","type":"function"},{"doc":"","ref":"Bonfire.GraphQL.UserSocket.html","title":"Bonfire.GraphQL.UserSocket","type":"module"},{"doc":"","ref":"Bonfire.GraphQL.UserSocket.html#build_context_from_params/2","title":"Bonfire.GraphQL.UserSocket.build_context_from_params/2","type":"function"},{"doc":"Callback implementation for Phoenix.Socket.connect/2 .","ref":"Bonfire.GraphQL.UserSocket.html#connect/2","title":"Bonfire.GraphQL.UserSocket.connect/2","type":"function"},{"doc":"Callback implementation for Phoenix.Socket.id/1 .","ref":"Bonfire.GraphQL.UserSocket.html#id/1","title":"Bonfire.GraphQL.UserSocket.id/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddLabelLive.html","title":"Bonfire.UI.ValueFlows.AddLabelLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.AddLabelLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.AddLabelLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.ValueFlows.AddLabelLive.html#mount/1","title":"Bonfire.UI.ValueFlows.AddLabelLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.AddLabelLive.html#render/1","title":"Bonfire.UI.ValueFlows.AddLabelLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html","title":"Bonfire.UI.ValueFlows.AddLocationLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.AddLocationLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html#mount/1","title":"Bonfire.UI.ValueFlows.AddLocationLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html#render/1","title":"Bonfire.UI.ValueFlows.AddLocationLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html#search/1","title":"Bonfire.UI.ValueFlows.AddLocationLive.search/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddLocationLive.html#search/2","title":"Bonfire.UI.ValueFlows.AddLocationLive.search/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html","title":"Bonfire.UI.ValueFlows.AddMilestoneLive","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#all_processes/1","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.all_processes/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#graphql/3","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#liveql/3","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.liveql/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#processes/2","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.processes/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#render/1","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#search/1","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.search/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.html#search/2","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.search/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#process/2","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.process/2","type":"function"},{"doc":"Properties current_user :any is_editable :boolean, default: false field_name :string agent :any pick_event :string remove_event :string context_id :string","ref":"Bonfire.UI.ValueFlows.AssignedItemLive.html","title":"Bonfire.UI.ValueFlows.AssignedItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.AssignedItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.AssignedItemLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.AssignedItemLive.html#update/2","title":"Bonfire.UI.ValueFlows.AssignedItemLive.update/2","type":"function"},{"doc":"Properties current_user :any action :string, required: true remove :string, required: true output_of_id :string units :list changeset :any form_error :string, default: &quot;&quot;","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.html","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.html#mount/1","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.mount/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.html","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.html#handle_event/3","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.handle_event/3","type":"function"},{"doc":"Properties current_user :any intent_url :string, required: false, default: &quot;&quot; action :string, required: false output_of_id :string, required: false title :string, default: &quot;Create a new intent&quot; default_tag :string","ref":"Bonfire.UI.ValueFlows.CreateIntentLive.html","title":"Bonfire.UI.ValueFlows.CreateIntentLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateIntentLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateIntentLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.CreateLabelLive.html","title":"Bonfire.UI.ValueFlows.CreateLabelLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.CreateLabelLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.CreateLabelLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.ValueFlows.CreateLabelLive.html#mount/1","title":"Bonfire.UI.ValueFlows.CreateLabelLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateLabelLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateLabelLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.CreateMilestoneLive.html","title":"Bonfire.UI.ValueFlows.CreateMilestoneLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.CreateMilestoneLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.CreateMilestoneLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateMilestoneLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateMilestoneLive.render/1","type":"function"},{"doc":"Properties current_user :any close :string process_url :string","ref":"Bonfire.UI.ValueFlows.CreateProcessLive.html","title":"Bonfire.UI.ValueFlows.CreateProcessLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateProcessLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateProcessLive.render/1","type":"function"},{"doc":"Properties current_user :any process_url :string, default: &quot;/process/&quot;","ref":"Bonfire.UI.ValueFlows.CreateProcessSmartInputLive.html","title":"Bonfire.UI.ValueFlows.CreateProcessSmartInputLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.CreateProcessSmartInputLive.html#render/1","title":"Bonfire.UI.ValueFlows.CreateProcessSmartInputLive.render/1","type":"function"},{"doc":"Properties current_user :any date :string, required: true is_editable :boolean, default: false","ref":"Bonfire.UI.ValueFlows.DueItemLive.html","title":"Bonfire.UI.ValueFlows.DueItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.DueItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.DueItemLive.render/1","type":"function"},{"doc":"Properties current_user :any item :map","ref":"Bonfire.UI.ValueFlows.EditDescriptionLive.html","title":"Bonfire.UI.ValueFlows.EditDescriptionLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.EditDescriptionLive.html#render/1","title":"Bonfire.UI.ValueFlows.EditDescriptionLive.render/1","type":"function"},{"doc":"Properties current_user :any process :map","ref":"Bonfire.UI.ValueFlows.EditProcessLive.html","title":"Bonfire.UI.ValueFlows.EditProcessLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.EditProcessLive.html#render/1","title":"Bonfire.UI.ValueFlows.EditProcessLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.FiltersLive.html","title":"Bonfire.UI.ValueFlows.FiltersLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.ValueFlows.FiltersLive.html#mount/1","title":"Bonfire.UI.ValueFlows.FiltersLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.FiltersLive.html#render/1","title":"Bonfire.UI.ValueFlows.FiltersLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html","title":"Bonfire.UI.ValueFlows.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html#mailer/0","title":"Bonfire.UI.ValueFlows.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html#repo/0","title":"Bonfire.UI.ValueFlows.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#all_processes/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.all_processes/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#graphql/3","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#handle_event/3","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#liveql/3","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#mount/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.mount/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#processes/2","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.processes/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.html#render/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#process/2","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityLive.html","title":"Bonfire.UI.ValueFlows.IntentCreateActivityLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityLive.html#render/1","title":"Bonfire.UI.ValueFlows.IntentCreateActivityLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.ValueFlows.LikeItemLive.html","title":"Bonfire.UI.ValueFlows.LikeItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.LikeItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.LikeItemLive.render/1","type":"function"},{"doc":"Properties current_user :any location :any","ref":"Bonfire.UI.ValueFlows.LocationWidgetLive.html","title":"Bonfire.UI.ValueFlows.LocationWidgetLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.LocationWidgetLive.html#render/1","title":"Bonfire.UI.ValueFlows.LocationWidgetLive.render/1","type":"function"},{"doc":"Properties current_user :any primary_accountable :any","ref":"Bonfire.UI.ValueFlows.PrimaryAccountableWidgetLive.html","title":"Bonfire.UI.ValueFlows.PrimaryAccountableWidgetLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.PrimaryAccountableWidgetLive.html#render/1","title":"Bonfire.UI.ValueFlows.PrimaryAccountableWidgetLive.render/1","type":"function"},{"doc":"Properties current_user :any process :map","ref":"Bonfire.UI.ValueFlows.ProcessHeroLive.html","title":"Bonfire.UI.ValueFlows.ProcessHeroLive","type":"module"},{"doc":"","ref":"Bonfire.UI.ValueFlows.ProcessHeroLive.html#generate_test_template/1","title":"Bonfire.UI.ValueFlows.ProcessHeroLive.generate_test_template/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.ProcessHeroLive.html#render/1","title":"Bonfire.UI.ValueFlows.ProcessHeroLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.ProcessHeroLive.html#update/2","title":"Bonfire.UI.ValueFlows.ProcessHeroLive.update/2","type":"function"},{"doc":"Properties current_user :any title :string, default: &quot;Lists&quot; process_url :string, default: &quot;/list/&quot;","ref":"Bonfire.UI.ValueFlows.ProcessesListLive.html","title":"Bonfire.UI.ValueFlows.ProcessesListLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.ProcessesListLive.html#render/1","title":"Bonfire.UI.ValueFlows.ProcessesListLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.ProcessesListLive.html#update/2","title":"Bonfire.UI.ValueFlows.ProcessesListLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.ProposalFeedLive.html","title":"Bonfire.UI.ValueFlows.ProposalFeedLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.ProposalFeedLive.html#render/1","title":"Bonfire.UI.ValueFlows.ProposalFeedLive.render/1","type":"function"},{"doc":"Properties current_user :any resource :any","ref":"Bonfire.UI.ValueFlows.ResourceHeroLive.html","title":"Bonfire.UI.ValueFlows.ResourceHeroLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.ResourceHeroLive.html#render/1","title":"Bonfire.UI.ValueFlows.ResourceHeroLive.render/1","type":"function"},{"doc":"Properties current_user :any resource_url_prefix :string resource :map","ref":"Bonfire.UI.ValueFlows.ResourceItemLive.html","title":"Bonfire.UI.ValueFlows.ResourceItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.ResourceItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.ResourceItemLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.ValueFlows.ResourceNavigationLive.html","title":"Bonfire.UI.ValueFlows.ResourceNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.ResourceNavigationLive.html#render/1","title":"Bonfire.UI.ValueFlows.ResourceNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any output_of_id :string units :list","ref":"Bonfire.UI.ValueFlows.SelectEconomicEventLive.html","title":"Bonfire.UI.ValueFlows.SelectEconomicEventLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.SelectEconomicEventLive.html#render/1","title":"Bonfire.UI.ValueFlows.SelectEconomicEventLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.ValueFlows.SidebarLive.html","title":"Bonfire.UI.ValueFlows.SidebarLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.ValueFlows.SidebarLive.html#render/1","title":"Bonfire.UI.ValueFlows.SidebarLive.render/1","type":"function"},{"doc":"Properties current_user :any date :string, required: true is_editable :boolean, default: false","ref":"Bonfire.UI.ValueFlows.SimpleDueItemLive.html","title":"Bonfire.UI.ValueFlows.SimpleDueItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.SimpleDueItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.SimpleDueItemLive.render/1","type":"function"},{"doc":"Properties current_user :any status :string, required: true is_editable :boolean, required: true","ref":"Bonfire.UI.ValueFlows.StatusItemLive.html","title":"Bonfire.UI.ValueFlows.StatusItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.ValueFlows.StatusItemLive.html#render/1","title":"Bonfire.UI.ValueFlows.StatusItemLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Component.AdsPreviewLive.html","title":"Bonfire.Web.Component.AdsPreviewLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Web.Component.AdsPreviewLive.html#render/1","title":"Bonfire.Web.Component.AdsPreviewLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Web.Component.AdsPreviewLive.html#update/2","title":"Bonfire.Web.Component.AdsPreviewLive.update/2","type":"function"},{"doc":"","ref":"ValueFlows.Web.My.PublishAdLive.html","title":"ValueFlows.Web.My.PublishAdLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"ValueFlows.Web.My.PublishAdLive.html#handle_event/3","title":"ValueFlows.Web.My.PublishAdLive.handle_event/3","type":"function"},{"doc":"","ref":"ValueFlows.Web.My.PublishAdLive.html#publish_ad/2","title":"ValueFlows.Web.My.PublishAdLive.publish_ad/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"ValueFlows.Web.My.PublishAdLive.html#render/1","title":"ValueFlows.Web.My.PublishAdLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"ValueFlows.Web.My.PublishAdLive.html#update/2","title":"ValueFlows.Web.My.PublishAdLive.update/2","type":"function"},{"doc":"Properties current_user :any bin :any drop_zone_id :string board_id :string","ref":"Bonfire.UI.Kanban.BinLive.html","title":"Bonfire.UI.Kanban.BinLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.BinLive.html#render/1","title":"Bonfire.UI.Kanban.BinLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.UI.Kanban.BoardLive.html","title":"Bonfire.UI.Kanban.BoardLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.html#graphql/3","title":"Bonfire.UI.Kanban.BoardLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Kanban.BoardLive.html#handle_event/3","title":"Bonfire.UI.Kanban.BoardLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Kanban.BoardLive.html#handle_info/2","title":"Bonfire.UI.Kanban.BoardLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Kanban.BoardLive.html#handle_params/3","title":"Bonfire.UI.Kanban.BoardLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.html#intent_fields/0","title":"Bonfire.UI.Kanban.BoardLive.intent_fields/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.html#liveql/3","title":"Bonfire.UI.Kanban.BoardLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Kanban.BoardLive.html#mount/3","title":"Bonfire.UI.Kanban.BoardLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.html#process/2","title":"Bonfire.UI.Kanban.BoardLive.process/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Kanban.BoardLive.html#render/1","title":"Bonfire.UI.Kanban.BoardLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.html#upstream_tag_id/2","title":"Bonfire.UI.Kanban.BoardLive.upstream_tag_id/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html","title":"Bonfire.UI.Kanban.BoardLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#process/2","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.process/2","type":"function"},{"doc":"Properties current_user :any board :map","ref":"Bonfire.UI.Kanban.BoardPreviewLive.html","title":"Bonfire.UI.Kanban.BoardPreviewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.BoardPreviewLive.html#render/1","title":"Bonfire.UI.Kanban.BoardPreviewLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Kanban.CardDatesLive.html","title":"Bonfire.UI.Kanban.CardDatesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardDatesLive.html#render/1","title":"Bonfire.UI.Kanban.CardDatesLive.render/1","type":"function"},{"doc":"Properties current_user :any card :map board_id :string","ref":"Bonfire.UI.Kanban.CardHeroLive.html","title":"Bonfire.UI.Kanban.CardHeroLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardHeroLive.html#render/1","title":"Bonfire.UI.Kanban.CardHeroLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Kanban.CardLabelsLive.html","title":"Bonfire.UI.Kanban.CardLabelsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardLabelsLive.html#render/1","title":"Bonfire.UI.Kanban.CardLabelsLive.render/1","type":"function"},{"doc":"Properties current_user :any card :map board_id :string","ref":"Bonfire.UI.Kanban.CardLive.html","title":"Bonfire.UI.Kanban.CardLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardLive.html#render/1","title":"Bonfire.UI.Kanban.CardLive.render/1","type":"function"},{"doc":"Properties current_user :any card :map","ref":"Bonfire.UI.Kanban.CardMainLive.html","title":"Bonfire.UI.Kanban.CardMainLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardMainLive.html#render/1","title":"Bonfire.UI.Kanban.CardMainLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Kanban.CardMembersLive.html","title":"Bonfire.UI.Kanban.CardMembersLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardMembersLive.html#render/1","title":"Bonfire.UI.Kanban.CardMembersLive.render/1","type":"function"},{"doc":"Properties current_user :any card :map board_id :string","ref":"Bonfire.UI.Kanban.CardModalLive.html","title":"Bonfire.UI.Kanban.CardModalLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardModalLive.html#render/1","title":"Bonfire.UI.Kanban.CardModalLive.render/1","type":"function"},{"doc":"Properties current_user :any card :map","ref":"Bonfire.UI.Kanban.CardSidebarLive.html","title":"Bonfire.UI.Kanban.CardSidebarLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CardSidebarLive.html#render/1","title":"Bonfire.UI.Kanban.CardSidebarLive.render/1","type":"function"},{"doc":"Properties current_user :any suggested_bins :list","ref":"Bonfire.UI.Kanban.CreateBinLive.html","title":"Bonfire.UI.Kanban.CreateBinLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CreateBinLive.html#render/1","title":"Bonfire.UI.Kanban.CreateBinLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Kanban.CreateBoardLive.html","title":"Bonfire.UI.Kanban.CreateBoardLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CreateBoardLive.html#render/1","title":"Bonfire.UI.Kanban.CreateBoardLive.render/1","type":"function"},{"doc":"Properties current_user :any board_id :string bin_id :string","ref":"Bonfire.UI.Kanban.CreateCardLive.html","title":"Bonfire.UI.Kanban.CreateCardLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.CreateCardLive.html#render/1","title":"Bonfire.UI.Kanban.CreateCardLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any selected_tab :string, default: &quot;publish&quot;","ref":"Bonfire.UI.Kanban.HomeLive.html","title":"Bonfire.UI.Kanban.HomeLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.html#do_handle_params/3","title":"Bonfire.UI.Kanban.HomeLive.do_handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.html#graphql/3","title":"Bonfire.UI.Kanban.HomeLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Kanban.HomeLive.html#handle_event/3","title":"Bonfire.UI.Kanban.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Kanban.HomeLive.html#handle_params/3","title":"Bonfire.UI.Kanban.HomeLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.html#liveql/3","title":"Bonfire.UI.Kanban.HomeLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Kanban.HomeLive.html#mount/3","title":"Bonfire.UI.Kanban.HomeLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.html#processes/2","title":"Bonfire.UI.Kanban.HomeLive.processes/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Kanban.HomeLive.html#render/1","title":"Bonfire.UI.Kanban.HomeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html","title":"Bonfire.UI.Kanban.HomeLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#process/2","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Integration.html","title":"Bonfire.UI.Kanban.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.Kanban.Integration.html#mailer/0","title":"Bonfire.UI.Kanban.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Integration.html#remote_tag_id/0","title":"Bonfire.UI.Kanban.Integration.remote_tag_id/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Integration.html#remote_tag_prefix/0","title":"Bonfire.UI.Kanban.Integration.remote_tag_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Integration.html#repo/0","title":"Bonfire.UI.Kanban.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.LayoutView.html","title":"Bonfire.UI.Kanban.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Kanban.LayoutView.html#__resource__/0","title":"Bonfire.UI.Kanban.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Kanban.LayoutView.html#render/2","title":"Bonfire.UI.Kanban.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Kanban.LayoutView.html#template_not_found/2","title":"Bonfire.UI.Kanban.LayoutView.template_not_found/2","type":"function"},{"doc":"Properties current_user :any page :string","ref":"Bonfire.UI.Kanban.NavigationLive.html","title":"Bonfire.UI.Kanban.NavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.NavigationLive.html#render/1","title":"Bonfire.UI.Kanban.NavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any board :map","ref":"Bonfire.UI.Kanban.PanelLive.html","title":"Bonfire.UI.Kanban.PanelLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Kanban.PanelLive.html#render/1","title":"Bonfire.UI.Kanban.PanelLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Kanban.Routes.html","title":"Bonfire.UI.Kanban.Routes","type":"module"},{"doc":"Properties current_user :any intent_url :string, required: false, default: &quot;&quot; action :string, required: false output_of_id :string, required: false","ref":"Bonfire.UI.Coordination.CreateTaskLive.html","title":"Bonfire.UI.Coordination.CreateTaskLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.CreateTaskLive.html#render/1","title":"Bonfire.UI.Coordination.CreateTaskLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Integration.html","title":"Bonfire.UI.Coordination.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.Integration.html#mailer/0","title":"Bonfire.UI.Coordination.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Integration.html#remote_tag_id/0","title":"Bonfire.UI.Coordination.Integration.remote_tag_id/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Integration.html#repo/0","title":"Bonfire.UI.Coordination.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.LayoutView.html","title":"Bonfire.UI.Coordination.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Coordination.LayoutView.html#__resource__/0","title":"Bonfire.UI.Coordination.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Coordination.LayoutView.html#render/2","title":"Bonfire.UI.Coordination.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Coordination.LayoutView.html#template_not_found/2","title":"Bonfire.UI.Coordination.LayoutView.template_not_found/2","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Coordination.ListNavigationLive.html","title":"Bonfire.UI.Coordination.ListNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.ListNavigationLive.html#render/1","title":"Bonfire.UI.Coordination.ListNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any process_url :string, default: &quot;/list/&quot;","ref":"Bonfire.UI.Coordination.ListsNavigationLive.html","title":"Bonfire.UI.Coordination.ListsNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.ListsNavigationLive.html#render/1","title":"Bonfire.UI.Coordination.ListsNavigationLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.UI.Coordination.MyTasksLive.html","title":"Bonfire.UI.Coordination.MyTasksLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.MyTasksLive.html#graphql/3","title":"Bonfire.UI.Coordination.MyTasksLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Coordination.MyTasksLive.html#handle_event/3","title":"Bonfire.UI.Coordination.MyTasksLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Coordination.MyTasksLive.html#handle_info/2","title":"Bonfire.UI.Coordination.MyTasksLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Coordination.MyTasksLive.html#handle_params/3","title":"Bonfire.UI.Coordination.MyTasksLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.MyTasksLive.html#intents/2","title":"Bonfire.UI.Coordination.MyTasksLive.intents/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.MyTasksLive.html#liveql/3","title":"Bonfire.UI.Coordination.MyTasksLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Coordination.MyTasksLive.html#mount/3","title":"Bonfire.UI.Coordination.MyTasksLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Coordination.MyTasksLive.html#render/1","title":"Bonfire.UI.Coordination.MyTasksLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.html","title":"Bonfire.UI.Coordination.MyTasksLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.html#process/2","title":"Bonfire.UI.Coordination.MyTasksLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html","title":"Bonfire.UI.Coordination.ProcessLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html#graphql/3","title":"Bonfire.UI.Coordination.ProcessLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Coordination.ProcessLive.html#handle_event/3","title":"Bonfire.UI.Coordination.ProcessLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Coordination.ProcessLive.html#handle_info/2","title":"Bonfire.UI.Coordination.ProcessLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Coordination.ProcessLive.html#handle_params/3","title":"Bonfire.UI.Coordination.ProcessLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html#intent_fields/0","title":"Bonfire.UI.Coordination.ProcessLive.intent_fields/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html#liveql/3","title":"Bonfire.UI.Coordination.ProcessLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Coordination.ProcessLive.html#mount/3","title":"Bonfire.UI.Coordination.ProcessLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html#process/2","title":"Bonfire.UI.Coordination.ProcessLive.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.html#process_filtered/2","title":"Bonfire.UI.Coordination.ProcessLive.process_filtered/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Coordination.ProcessLive.html#render/1","title":"Bonfire.UI.Coordination.ProcessLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#process/2","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.html","title":"Bonfire.UI.Coordination.ProcessesLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.html#graphql/3","title":"Bonfire.UI.Coordination.ProcessesLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Coordination.ProcessesLive.html#handle_event/3","title":"Bonfire.UI.Coordination.ProcessesLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Coordination.ProcessesLive.html#handle_info/2","title":"Bonfire.UI.Coordination.ProcessesLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Coordination.ProcessesLive.html#handle_params/3","title":"Bonfire.UI.Coordination.ProcessesLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.html#liveql/3","title":"Bonfire.UI.Coordination.ProcessesLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Coordination.ProcessesLive.html#mount/3","title":"Bonfire.UI.Coordination.ProcessesLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.html#processes/2","title":"Bonfire.UI.Coordination.ProcessesLive.processes/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Coordination.ProcessesLive.html#render/1","title":"Bonfire.UI.Coordination.ProcessesLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#process/2","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.Routes.html","title":"Bonfire.UI.Coordination.Routes","type":"module"},{"doc":"Properties current_user :any page :string, required: true username :string, required: true","ref":"Bonfire.UI.Coordination.SidebarNavigationLive.html","title":"Bonfire.UI.Coordination.SidebarNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.SidebarNavigationLive.html#render/1","title":"Bonfire.UI.Coordination.SidebarNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Coordination.TaskActionsLive.html","title":"Bonfire.UI.Coordination.TaskActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskActionsLive.html#render/1","title":"Bonfire.UI.Coordination.TaskActionsLive.render/1","type":"function"},{"doc":"Properties current_user :any task :map, required: true","ref":"Bonfire.UI.Coordination.TaskActionsMenuLive.html","title":"Bonfire.UI.Coordination.TaskActionsMenuLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskActionsMenuLive.html#render/1","title":"Bonfire.UI.Coordination.TaskActionsMenuLive.render/1","type":"function"},{"doc":"Properties current_user :any task :map","ref":"Bonfire.UI.Coordination.TaskHeroLive.html","title":"Bonfire.UI.Coordination.TaskHeroLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskHeroLive.html#render/1","title":"Bonfire.UI.Coordination.TaskHeroLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.html","title":"Bonfire.UI.Coordination.TaskLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.html#graphql/3","title":"Bonfire.UI.Coordination.TaskLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Coordination.TaskLive.html#handle_event/3","title":"Bonfire.UI.Coordination.TaskLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Coordination.TaskLive.html#handle_info/2","title":"Bonfire.UI.Coordination.TaskLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Coordination.TaskLive.html#handle_params/3","title":"Bonfire.UI.Coordination.TaskLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.html#intent/2","title":"Bonfire.UI.Coordination.TaskLive.intent/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.html#liveql/3","title":"Bonfire.UI.Coordination.TaskLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Coordination.TaskLive.html#mount/3","title":"Bonfire.UI.Coordination.TaskLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Coordination.TaskLive.html#render/1","title":"Bonfire.UI.Coordination.TaskLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html","title":"Bonfire.UI.Coordination.TaskLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#lookup_schema/1","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#pipeline/1","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#process/2","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.process/2","type":"function"},{"doc":"Properties current_user :any object :map, required: true","ref":"Bonfire.UI.Coordination.TaskPreviewLive.html","title":"Bonfire.UI.Coordination.TaskPreviewLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskPreviewLive.html#intent_preloads/0","title":"Bonfire.UI.Coordination.TaskPreviewLive.intent_preloads/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskPreviewLive.html#preloads/1","title":"Bonfire.UI.Coordination.TaskPreviewLive.preloads/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskPreviewLive.html#render/1","title":"Bonfire.UI.Coordination.TaskPreviewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Coordination.TaskPreviewLive.html#update/2","title":"Bonfire.UI.Coordination.TaskPreviewLive.update/2","type":"function"},{"doc":"Properties current_user :any task_id :string redirect_after :string finished :boolean","ref":"Bonfire.UI.Coordination.TaskSetStatusLive.html","title":"Bonfire.UI.Coordination.TaskSetStatusLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskSetStatusLive.html#render/1","title":"Bonfire.UI.Coordination.TaskSetStatusLive.render/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Coordination.TaskThreadLive.html","title":"Bonfire.UI.Coordination.TaskThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Coordination.TaskThreadLive.html#render/1","title":"Bonfire.UI.Coordination.TaskThreadLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Integration.html","title":"Bonfire.Breadpub.Integration","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Integration.html#mailer/0","title":"Bonfire.Breadpub.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Integration.html#remote_tag_id/0","title":"Bonfire.Breadpub.Integration.remote_tag_id/0","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Integration.html#repo/0","title":"Bonfire.Breadpub.Integration.repo/0","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Breadpub.IntentLive.html","title":"Bonfire.Breadpub.IntentLive","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.IntentLive.html#graphql/3","title":"Bonfire.Breadpub.IntentLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Breadpub.IntentLive.html#handle_event/3","title":"Bonfire.Breadpub.IntentLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Breadpub.IntentLive.html#handle_info/2","title":"Bonfire.Breadpub.IntentLive.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.IntentLive.html#intent/2","title":"Bonfire.Breadpub.IntentLive.intent/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.IntentLive.html#liveql/3","title":"Bonfire.Breadpub.IntentLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Breadpub.IntentLive.html#mount/3","title":"Bonfire.Breadpub.IntentLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Breadpub.IntentLive.html#render/1","title":"Bonfire.Breadpub.IntentLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.IntentLive.GraphQL.html","title":"Bonfire.Breadpub.IntentLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.IntentLive.GraphQL.html#lookup_schema/1","title":"Bonfire.Breadpub.IntentLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.Breadpub.IntentLive.GraphQL.html#pipeline/1","title":"Bonfire.Breadpub.IntentLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.Breadpub.IntentLive.GraphQL.html#process/2","title":"Bonfire.Breadpub.IntentLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.html","title":"Bonfire.Breadpub.MapLive","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.html#fetch_place_things/2","title":"Bonfire.Breadpub.MapLive.fetch_place_things/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.html#graphql/3","title":"Bonfire.Breadpub.MapLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Breadpub.MapLive.html#handle_event/3","title":"Bonfire.Breadpub.MapLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.html#liveql/3","title":"Bonfire.Breadpub.MapLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Breadpub.MapLive.html#mount/3","title":"Bonfire.Breadpub.MapLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Breadpub.MapLive.html#render/1","title":"Bonfire.Breadpub.MapLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.GraphQL.html","title":"Bonfire.Breadpub.MapLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.MapLive.GraphQL.html#lookup_schema/1","title":"Bonfire.Breadpub.MapLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.Breadpub.MapLive.GraphQL.html#pipeline/1","title":"Bonfire.Breadpub.MapLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.Breadpub.MapLive.GraphQL.html#process/2","title":"Bonfire.Breadpub.MapLive.GraphQL.process/2","type":"function"},{"doc":"Properties current_user :any hits :list, default: []","ref":"Bonfire.Breadpub.MatchesLive.html","title":"Bonfire.Breadpub.MatchesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Breadpub.MatchesLive.html#render/1","title":"Bonfire.Breadpub.MatchesLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any selected_tab :string, default: &quot;publish&quot;","ref":"Bonfire.Breadpub.Web.HomeLive.html","title":"Bonfire.Breadpub.Web.HomeLive","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.html#do_handle_params/3","title":"Bonfire.Breadpub.Web.HomeLive.do_handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.html#graphql/3","title":"Bonfire.Breadpub.Web.HomeLive.graphql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Breadpub.Web.HomeLive.html#handle_event/3","title":"Bonfire.Breadpub.Web.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Breadpub.Web.HomeLive.html#handle_info/2","title":"Bonfire.Breadpub.Web.HomeLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Breadpub.Web.HomeLive.html#handle_params/3","title":"Bonfire.Breadpub.Web.HomeLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.html#intents/2","title":"Bonfire.Breadpub.Web.HomeLive.intents/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.html#liveql/3","title":"Bonfire.Breadpub.Web.HomeLive.liveql/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Breadpub.Web.HomeLive.html#mount/3","title":"Bonfire.Breadpub.Web.HomeLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Breadpub.Web.HomeLive.html#render/1","title":"Bonfire.Breadpub.Web.HomeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.GraphQL.html","title":"Bonfire.Breadpub.Web.HomeLive.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Breadpub.Web.HomeLive.GraphQL.html#lookup_schema/1","title":"Bonfire.Breadpub.Web.HomeLive.GraphQL.lookup_schema/1","type":"function"},{"doc":"Determine the remaining pipeline for an request with a pre-compiled document. Usually this can be changed simply by setting @compilation_pipeline in your document provider. This may need to be overridden if your compilation phase is not a subset of the full pipeline.","ref":"Bonfire.Breadpub.Web.HomeLive.GraphQL.html#pipeline/1","title":"Bonfire.Breadpub.Web.HomeLive.GraphQL.pipeline/1","type":"function"},{"doc":"Callback implementation for Absinthe.Plug.DocumentProvider.process/2 .","ref":"Bonfire.Breadpub.Web.HomeLive.GraphQL.html#process/2","title":"Bonfire.Breadpub.Web.HomeLive.GraphQL.process/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.LayoutView.html","title":"Bonfire.Breadpub.Web.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.Breadpub.Web.LayoutView.html#__resource__/0","title":"Bonfire.Breadpub.Web.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.Breadpub.Web.LayoutView.html#render/2","title":"Bonfire.Breadpub.Web.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.Breadpub.Web.LayoutView.html#template_not_found/2","title":"Bonfire.Breadpub.Web.LayoutView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.Breadpub.Web.Routes.html","title":"Bonfire.Breadpub.Web.Routes","type":"module"},{"doc":"Properties current_user :any","ref":"Bonfire.UI.Breadpub.BookmarkedLive.html","title":"Bonfire.UI.Breadpub.BookmarkedLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.BookmarkedLive.html#render/1","title":"Bonfire.UI.Breadpub.BookmarkedLive.render/1","type":"function"},{"doc":"Properties current_user :any intent_url :string, required: false, default: &quot;&quot; action_id :string, required: false, default: &quot;work&quot; output_of_id :string, required: false title :string, default: &quot;Create a new intent&quot; intent_type :string, default: &quot;need&quot;","ref":"Bonfire.UI.Breadpub.CreateIntentLive.html","title":"Bonfire.UI.Breadpub.CreateIntentLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.CreateIntentLive.html#render/1","title":"Bonfire.UI.Breadpub.CreateIntentLive.render/1","type":"function"},{"doc":"Properties current_user :any intents :any","ref":"Bonfire.UI.Breadpub.DiscoverLive.html","title":"Bonfire.UI.Breadpub.DiscoverLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.DiscoverLive.html#render/1","title":"Bonfire.UI.Breadpub.DiscoverLive.render/1","type":"function"},{"doc":"Properties current_user :any name :string, default: &quot;&quot; note :string, default: &quot;&quot; intent :any","ref":"Bonfire.UI.Breadpub.IntentLive.html","title":"Bonfire.UI.Breadpub.IntentLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.IntentLive.html#render/1","title":"Bonfire.UI.Breadpub.IntentLive.render/1","type":"function"},{"doc":"Properties current_user :any page :string","ref":"Bonfire.UI.Breadpub.MainNavigationLive.html","title":"Bonfire.UI.Breadpub.MainNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.MainNavigationLive.html#render/1","title":"Bonfire.UI.Breadpub.MainNavigationLive.render/1","type":"function"},{"doc":"Properties current_user :any intents :any","ref":"Bonfire.UI.Breadpub.MyNeedsLive.html","title":"Bonfire.UI.Breadpub.MyNeedsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.MyNeedsLive.html#render/1","title":"Bonfire.UI.Breadpub.MyNeedsLive.render/1","type":"function"},{"doc":"Properties current_user :any intents :any","ref":"Bonfire.UI.Breadpub.MyOffersLive.html","title":"Bonfire.UI.Breadpub.MyOffersLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Breadpub.MyOffersLive.html#render/1","title":"Bonfire.UI.Breadpub.MyOffersLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.AppsPreviewLive.html","title":"Bonfire.Website.AppsPreviewLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.AppsPreviewLive.html#render/1","title":"Bonfire.Website.AppsPreviewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.BlogPreviewLive.html","title":"Bonfire.Website.BlogPreviewLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.BlogPreviewLive.html#render/1","title":"Bonfire.Website.BlogPreviewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.DevicePreviewLive.html","title":"Bonfire.Website.DevicePreviewLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.DevicePreviewLive.html#render/1","title":"Bonfire.Website.DevicePreviewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.FaqLive.html","title":"Bonfire.Website.FaqLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.FaqLive.html#render/1","title":"Bonfire.Website.FaqLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.FooterLive.html","title":"Bonfire.Website.FooterLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.FooterLive.html#render/1","title":"Bonfire.Website.FooterLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.HeaderLive.html","title":"Bonfire.Website.HeaderLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.HeaderLive.html#render/1","title":"Bonfire.Website.HeaderLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.HeroLive.html","title":"Bonfire.Website.HeroLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.HeroLive.html#render/1","title":"Bonfire.Website.HeroLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.HomeGuestLive.html","title":"Bonfire.Website.HomeGuestLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Website.HomeGuestLive.html#mount/3","title":"Bonfire.Website.HomeGuestLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Website.HomeGuestLive.html#render/1","title":"Bonfire.Website.HomeGuestLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Icons.FediverseLive.html","title":"Bonfire.Website.Icons.FediverseLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.Icons.FediverseLive.html#render/1","title":"Bonfire.Website.Icons.FediverseLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Icons.GitLive.html","title":"Bonfire.Website.Icons.GitLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.Icons.GitLive.html#render/1","title":"Bonfire.Website.Icons.GitLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Integration.html","title":"Bonfire.Website.Integration","type":"module"},{"doc":"","ref":"Bonfire.Website.Integration.html#mailer/0","title":"Bonfire.Website.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Website.Integration.html#repo/0","title":"Bonfire.Website.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Website.LayoutView.html","title":"Bonfire.Website.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.Website.LayoutView.html#__resource__/0","title":"Bonfire.Website.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.Website.LayoutView.html#render/2","title":"Bonfire.Website.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.Website.LayoutView.html#template_not_found/2","title":"Bonfire.Website.LayoutView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.Website.MilestonesLive.html","title":"Bonfire.Website.MilestonesLive","type":"module"},{"doc":"","ref":"Bonfire.Website.MilestonesLive.html#milestone_in_progress/1","title":"Bonfire.Website.MilestonesLive.milestone_in_progress/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.MilestonesLive.html#render/1","title":"Bonfire.Website.MilestonesLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.MilestonesLive.html#task_in_progress?/1","title":"Bonfire.Website.MilestonesLive.task_in_progress?/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Website.MilestonesLive.html#update/2","title":"Bonfire.Website.MilestonesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Website.Page.FaqLive.html","title":"Bonfire.Website.Page.FaqLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Website.Page.FaqLive.html#mount/3","title":"Bonfire.Website.Page.FaqLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Website.Page.FaqLive.html#render/1","title":"Bonfire.Website.Page.FaqLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Page.MilestonesLive.html","title":"Bonfire.Website.Page.MilestonesLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Website.Page.MilestonesLive.html#mount/3","title":"Bonfire.Website.Page.MilestonesLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Website.Page.MilestonesLive.html#render/1","title":"Bonfire.Website.Page.MilestonesLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.PreviewLive.html","title":"Bonfire.Website.PreviewLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Website.PreviewLive.html#render/1","title":"Bonfire.Website.PreviewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Website.Web.Routes.html","title":"Bonfire.Website.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.Tag.html","title":"Bonfire.Tag","type":"module"},{"doc":"","ref":"Bonfire.Tag.html#context_module/0","title":"Bonfire.Tag.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#create_changeset/1","title":"Bonfire.Tag.create_changeset/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#follow_filters/0","title":"Bonfire.Tag.follow_filters/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#queries_module/0","title":"Bonfire.Tag.queries_module/0","type":"function"},{"doc":"Add things (Pointer objects) to a tag. You usually want to add tags to a thing instead, see thing_tags_changeset","ref":"Bonfire.Tag.html#tag_things_changeset/2","title":"Bonfire.Tag.tag_things_changeset/2","type":"function"},{"doc":"Add tags to a thing (any Pointer object which defines a many_to_many relation to tag). This function applies to your object schema but is here for convenience.","ref":"Bonfire.Tag.html#thing_tags_changeset/2","title":"Bonfire.Tag.thing_tags_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#update_changeset/2","title":"Bonfire.Tag.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#t:t/0","title":"Bonfire.Tag.t/0","type":"type"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html","title":"Bonfire.Tag.Autocomplete","type":"module"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup/3","title":"Bonfire.Tag.Autocomplete.api_tag_lookup/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup_public/4","title":"Bonfire.Tag.Autocomplete.api_tag_lookup_public/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#filter_results/1","title":"Bonfire.Tag.Autocomplete.filter_results/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#find_all_tags/1","title":"Bonfire.Tag.Autocomplete.find_all_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_search/3","title":"Bonfire.Tag.Autocomplete.maybe_search/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#prefix_index/1","title":"Bonfire.Tag.Autocomplete.prefix_index/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_or_lookup/3","title":"Bonfire.Tag.Autocomplete.search_or_lookup/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_prefix/2","title":"Bonfire.Tag.Autocomplete.search_prefix/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_type/2","title":"Bonfire.Tag.Autocomplete.search_type/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_add_field/4","title":"Bonfire.Tag.Autocomplete.tag_add_field/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/2","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/4","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_lookup_process/4","title":"Bonfire.Tag.Autocomplete.tag_lookup_process/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search/2","title":"Bonfire.Tag.Autocomplete.tag_search/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_tags/1","title":"Bonfire.Tag.Autocomplete.tag_search_from_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_text/2","title":"Bonfire.Tag.Autocomplete.tag_search_from_text/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_suggestion_display/2","title":"Bonfire.Tag.Autocomplete.tag_suggestion_display/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tags_split/1","title":"Bonfire.Tag.Autocomplete.tags_split/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_prefixes/1","title":"Bonfire.Tag.Autocomplete.try_prefixes/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/1","title":"Bonfire.Tag.Autocomplete.try_tag_search/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/2","title":"Bonfire.Tag.Autocomplete.try_tag_search/2","type":"function"},{"doc":"GraphQL tag/category queries","ref":"Bonfire.Tag.GraphQL.TagResolver.html","title":"Bonfire.Tag.GraphQL.TagResolver","type":"module"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#fetch_tag/2","title":"Bonfire.Tag.GraphQL.TagResolver.fetch_tag/2","type":"function"},{"doc":"Turn a Pointer into a Tag. You can use tag_something/2 to tag something with Pointers directly instead.","ref":"Bonfire.Tag.GraphQL.TagResolver.html#make_pointer_tag/2","title":"Bonfire.Tag.GraphQL.TagResolver.make_pointer_tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#name/3","title":"Bonfire.Tag.GraphQL.TagResolver.name/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#summary/3","title":"Bonfire.Tag.GraphQL.TagResolver.summary/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag/2","title":"Bonfire.Tag.GraphQL.TagResolver.tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_prepare/3","title":"Bonfire.Tag.GraphQL.TagResolver.tag_prepare/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_something/2","title":"Bonfire.Tag.GraphQL.TagResolver.tag_something/2","type":"function"},{"doc":"Things associated with a Tag","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tagged_things_edges/3","title":"Bonfire.Tag.GraphQL.TagResolver.tagged_things_edges/3","type":"function"},{"doc":"Tags associated with a Thing","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tags_edges/3","title":"Bonfire.Tag.GraphQL.TagResolver.tags_edges/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagSchema.html","title":"Bonfire.Tag.GraphQL.TagSchema","type":"module"},{"doc":"","ref":"Bonfire.Tag.Migrations.html","title":"Bonfire.Tag.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#down/0","title":"Bonfire.Tag.Migrations.down/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#tagged_down/0","title":"Bonfire.Tag.Migrations.tagged_down/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#tagged_timestamps_down/0","title":"Bonfire.Tag.Migrations.tagged_timestamps_down/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#tagged_timestamps_up/0","title":"Bonfire.Tag.Migrations.tagged_timestamps_up/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#tagged_up/0","title":"Bonfire.Tag.Migrations.tagged_up/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#up/0","title":"Bonfire.Tag.Migrations.up/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html","title":"Bonfire.Tag.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Tag.Queries.html#filter/2","title":"Bonfire.Tag.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#join_to/3","title":"Bonfire.Tag.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#queries/4","title":"Bonfire.Tag.Queries.queries/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#query/1","title":"Bonfire.Tag.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#query/2","title":"Bonfire.Tag.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Simulate.html","title":"Bonfire.Tag.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tagged.html","title":"Bonfire.Tag.Tagged","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tagged.html#all/0","title":"Bonfire.Tag.Tagged.all/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tagged.html#changeset/2","title":"Bonfire.Tag.Tagged.changeset/2","type":"function"},{"doc":"Get the latest tag added to a thing","ref":"Bonfire.Tag.Tagged.html#latest/1","title":"Bonfire.Tag.Tagged.latest/1","type":"function"},{"doc":"Get the things tagged with a certain tag","ref":"Bonfire.Tag.Tagged.html#with_tag/1","title":"Bonfire.Tag.Tagged.with_tag/1","type":"function"},{"doc":"Get the tags of a thing","ref":"Bonfire.Tag.Tagged.html#with_thing/1","title":"Bonfire.Tag.Tagged.with_thing/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html","title":"Bonfire.Tag.Tags","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tags.html#cursor/0","title":"Bonfire.Tag.Tags.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#find/1","title":"Bonfire.Tag.Tags.find/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#get/1","title":"Bonfire.Tag.Tags.get/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format/1","title":"Bonfire.Tag.Tags.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format_name/1","title":"Bonfire.Tag.Tags.indexing_object_format_name/1","type":"function"},{"doc":"Create a tag mixin for an existing poitable object (you usually want to use maybe_make_tag instead)","ref":"Bonfire.Tag.Tags.html#make_tag/3","title":"Bonfire.Tag.Tags.make_tag/3","type":"function"},{"doc":"Retrieves a list of tags by arbitrary filters. Used by: Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#many/1","title":"Bonfire.Tag.Tags.many/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#maybe_find_tag/2","title":"Bonfire.Tag.Tags.maybe_find_tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#maybe_find_tags/2","title":"Bonfire.Tag.Tags.maybe_find_tags/2","type":"function"},{"doc":"Create a Tag from an existing object (eg. Bonfire.Geolocate.Geolocation)","ref":"Bonfire.Tag.Tags.html#maybe_make_tag/2","title":"Bonfire.Tag.Tags.maybe_make_tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#maybe_make_tag/3","title":"Bonfire.Tag.Tags.maybe_make_tag/3","type":"function"},{"doc":"Maybe tag something","ref":"Bonfire.Tag.Tags.html#maybe_tag/4","title":"Bonfire.Tag.Tags.maybe_tag/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#maybe_taxonomy_tag/2","title":"Bonfire.Tag.Tags.maybe_taxonomy_tag/2","type":"function"},{"doc":"Retrieves a single tag by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#one/1","title":"Bonfire.Tag.Tags.one/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#prefix/1","title":"Bonfire.Tag.Tags.prefix/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#tag_ids/1","title":"Bonfire.Tag.Tags.tag_ids/1","type":"function"},{"doc":"tag existing thing with one or multiple Tags, Pointers, or anything that can be made into a tag","ref":"Bonfire.Tag.Tags.html#tag_something/4","title":"Bonfire.Tag.Tags.tag_something/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#test_cursor/0","title":"Bonfire.Tag.Tags.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#update/3","title":"Bonfire.Tag.Tags.update/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html","title":"Bonfire.Tag.TextContent.Formatter","type":"module"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#escape_mention_handler/4","title":"Bonfire.Tag.TextContent.Formatter.escape_mention_handler/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#html_escape/2","title":"Bonfire.Tag.TextContent.Formatter.html_escape/2","type":"function"},{"doc":"Parses a text and replace plain text links with HTML. Returns a tuple with a result text, mentions, and hashtags. If the 'safe_mention' option is given, only consecutive mentions at the start the post are actually mentioned.","ref":"Bonfire.Tag.TextContent.Formatter.html#linkify/2","title":"Bonfire.Tag.TextContent.Formatter.linkify/2","type":"function"},{"doc":"Escapes a special characters in mention names.","ref":"Bonfire.Tag.TextContent.Formatter.html#mentions_escape/2","title":"Bonfire.Tag.TextContent.Formatter.mentions_escape/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#tag_handler/4","title":"Bonfire.Tag.TextContent.Formatter.tag_handler/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Process.html","title":"Bonfire.Tag.TextContent.Process","type":"module"},{"doc":"Formatting text to plain text, HTML, or markdown","ref":"Bonfire.Tag.TextContent.Process.html#format_input/3","title":"Bonfire.Tag.TextContent.Process.format_input/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Process.html#object_text_content/1","title":"Bonfire.Tag.TextContent.Process.object_text_content/1","type":"function"},{"doc":"For use for things like a bio, where we want links but not to actually trigger mentions.","ref":"Bonfire.Tag.TextContent.Process.html#process/3","title":"Bonfire.Tag.TextContent.Process.process/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Pages.Autocomplete.html","title":"Bonfire.Tag.Web.Pages.Autocomplete","type":"module"},{"doc":"","ref":"Bonfire.Tag.Web.Pages.Autocomplete.html#get/2","title":"Bonfire.Tag.Web.Pages.Autocomplete.get/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Pages.Autocomplete.html#prepare/1","title":"Bonfire.Tag.Web.Pages.Autocomplete.prepare/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Routes.html","title":"Bonfire.Tag.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.Web.Component.EnterTags.html","title":"Bonfire.Web.Component.EnterTags","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Web.Component.EnterTags.html#render/1","title":"Bonfire.Web.Component.EnterTags.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Component.TagAutocomplete.html","title":"Bonfire.Web.Component.TagAutocomplete","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Web.Component.TagAutocomplete.html#handle_event/3","title":"Bonfire.Web.Component.TagAutocomplete.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Web.Component.TagAutocomplete.html#mount/1","title":"Bonfire.Web.Component.TagAutocomplete.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Web.Component.TagAutocomplete.html#render/1","title":"Bonfire.Web.Component.TagAutocomplete.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Component.TagAutocomplete.html#tag_suggest/2","title":"Bonfire.Web.Component.TagAutocomplete.tag_suggest/2","type":"function"},{"doc":"Alternative approach to tagging, using JS to directly use Meili's API, rather than passing through Elixir","ref":"Bonfire.Web.Component.TagAutocompleteMeiliDirect.html","title":"Bonfire.Web.Component.TagAutocompleteMeiliDirect","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Web.Component.TagAutocompleteMeiliDirect.html#mount/1","title":"Bonfire.Web.Component.TagAutocompleteMeiliDirect.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Web.Component.TagAutocompleteMeiliDirect.html#render/1","title":"Bonfire.Web.Component.TagAutocompleteMeiliDirect.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.html","title":"Bonfire.Classify","type":"module"},{"doc":"","ref":"Bonfire.Classify.Categories.html","title":"Bonfire.Classify.Categories","type":"module"},{"doc":"","ref":"Bonfire.Classify.Categories.html#attrs_with_parent_category/1","title":"Bonfire.Classify.Categories.attrs_with_parent_category/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#attrs_with_username/1","title":"Bonfire.Classify.Categories.attrs_with_username/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#by_username/1","title":"Bonfire.Classify.Categories.by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#clean_username/1","title":"Bonfire.Classify.Categories.clean_username/1","type":"function"},{"doc":"Create a brand-new category object, with info stored in profile and character mixins","ref":"Bonfire.Classify.Categories.html#create/3","title":"Bonfire.Classify.Categories.create/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#create_remote/1","title":"Bonfire.Classify.Categories.create_remote/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#federation_module/0","title":"Bonfire.Classify.Categories.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#format_actor/1","title":"Bonfire.Classify.Categories.format_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#get/1","title":"Bonfire.Classify.Categories.get/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format/1","title":"Bonfire.Classify.Categories.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_name/1","title":"Bonfire.Classify.Categories.indexing_object_format_name/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_parent/1","title":"Bonfire.Classify.Categories.indexing_object_format_parent/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#list/0","title":"Bonfire.Classify.Categories.list/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#many/1","title":"Bonfire.Classify.Categories.many/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#maybe_create_hashtag/2","title":"Bonfire.Classify.Categories.maybe_create_hashtag/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#maybe_index/1","title":"Bonfire.Classify.Categories.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#name_already_taken?/1","title":"Bonfire.Classify.Categories.name_already_taken?/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#one/1","title":"Bonfire.Classify.Categories.one/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#put_attrs_with_parent_category/2","title":"Bonfire.Classify.Categories.put_attrs_with_parent_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#put_generated_username/2","title":"Bonfire.Classify.Categories.put_generated_username/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#soft_delete/1","title":"Bonfire.Classify.Categories.soft_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#try_several_usernames/4","title":"Bonfire.Classify.Categories.try_several_usernames/4","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#update/3","title":"Bonfire.Classify.Categories.update/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#update_local_actor/2","title":"Bonfire.Classify.Categories.update_local_actor/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#username_with_parent/2","title":"Bonfire.Classify.Categories.username_with_parent/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html","title":"Bonfire.Classify.Category","type":"module"},{"doc":"","ref":"Bonfire.Classify.Category.html#context_module/0","title":"Bonfire.Classify.Category.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#create_changeset/3","title":"Bonfire.Classify.Category.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#follow_filters/0","title":"Bonfire.Classify.Category.follow_filters/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#queries_module/0","title":"Bonfire.Classify.Category.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#update_changeset/2","title":"Bonfire.Classify.Category.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#t:t/0","title":"Bonfire.Classify.Category.t/0","type":"type"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html","title":"Bonfire.Classify.Category.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Classify.Category.Queries.html#filter/2","title":"Bonfire.Classify.Category.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#join_to/3","title":"Bonfire.Classify.Category.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#queries/4","title":"Bonfire.Classify.Category.Queries.queries/4","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/1","title":"Bonfire.Classify.Category.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/2","title":"Bonfire.Classify.Category.Queries.query/2","type":"function"},{"doc":"GraphQL tag/category queries","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html","title":"Bonfire.Classify.GraphQL.CategoryResolver","type":"module"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#categories/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.categories/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#categories_toplevel/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.categories_toplevel/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.category/2","type":"function"},{"doc":"List child categories","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#category_children/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.category_children/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#create_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.create_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#cursor/0","title":"Bonfire.Classify.GraphQL.CategoryResolver.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#ensure_update_allowed/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.ensure_update_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories_children/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories_children/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories_toplevel/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories_toplevel/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_parent_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_parent_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#name/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.name/3","type":"function"},{"doc":"Retrieves an Page of categorys according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#page/5","title":"Bonfire.Classify.GraphQL.CategoryResolver.page/5","type":"function"},{"doc":"Retrieves an Pages of categorys according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#pages/6","title":"Bonfire.Classify.GraphQL.CategoryResolver.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#parent_category/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.parent_category/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#summary/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.summary/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#test_cursor/0","title":"Bonfire.Classify.GraphQL.CategoryResolver.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#update_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.update_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.ClassifySchema.html","title":"Bonfire.Classify.GraphQL.ClassifySchema","type":"module"},{"doc":"","ref":"Bonfire.Classify.Migrations.html","title":"Bonfire.Classify.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Classify.Migrations.html#down/0","title":"Bonfire.Classify.Migrations.down/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Migrations.html#up/0","title":"Bonfire.Classify.Migrations.up/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Simulate.html","title":"Bonfire.Classify.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Classify.Simulate.html#category/1","title":"Bonfire.Classify.Simulate.category/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Simulate.html#fake_category!/3","title":"Bonfire.Classify.Simulate.fake_category!/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#category_link/1","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.category_link/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#render/1","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#update/2","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#fetch/2","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.fetch/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#render/1","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#update/2","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive.html","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive.html#mount/3","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive.html#render/1","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesPageLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html","title":"Bonfire.Classify.Web.My.NewCategoryLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#handle_event/3","title":"Bonfire.Classify.Web.My.NewCategoryLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#render/1","title":"Bonfire.Classify.Web.My.NewCategoryLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#update/2","title":"Bonfire.Classify.Web.My.NewCategoryLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Page.Category.html","title":"Bonfire.Classify.Web.Page.Category","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Classify.Web.Page.Category.html#handle_params/3","title":"Bonfire.Classify.Web.Page.Category.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Classify.Web.Page.Category.html#mount/3","title":"Bonfire.Classify.Web.Page.Category.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Classify.Web.Page.Category.html#render/1","title":"Bonfire.Classify.Web.Page.Category.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.html","title":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.html#fetch/2","title":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.fetch/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.html#render/1","title":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.html#update/2","title":"Bonfire.Classify.Web.Page.Category.SubcategoriesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Routes.html","title":"Bonfire.Classify.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.Search.html","title":"Bonfire.Search","type":"module"},{"doc":"","ref":"Bonfire.Search.html#facet_from_map/1","title":"Bonfire.Search.facet_from_map/1","type":"function"},{"doc":"","ref":"Bonfire.Search.html#public_index/0","title":"Bonfire.Search.public_index/0","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search/2","title":"Bonfire.Search.search/2","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search/4","title":"Bonfire.Search.search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search_by_type/2","title":"Bonfire.Search.search_by_type/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html","title":"Bonfire.Search.Fuzzy","type":"module"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#do_search/4","title":"Bonfire.Search.Fuzzy.do_search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#search/4","title":"Bonfire.Search.Fuzzy.search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#search_filtered/2","title":"Bonfire.Search.Fuzzy.search_filtered/2","type":"function"},{"doc":"","ref":"Bonfire.Search.HTTP.html","title":"Bonfire.Search.HTTP","type":"module"},{"doc":"","ref":"Bonfire.Search.HTTP.html#http_error/5","title":"Bonfire.Search.HTTP.http_error/5","type":"function"},{"doc":"","ref":"Bonfire.Search.HTTP.html#http_request/4","title":"Bonfire.Search.HTTP.http_request/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html","title":"Bonfire.Search.Indexer","type":"module"},{"doc":"","ref":"Bonfire.Search.Indexer.html#host/1","title":"Bonfire.Search.Indexer.host/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#index_objects/3","title":"Bonfire.Search.Indexer.index_objects/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#index_public_object/1","title":"Bonfire.Search.Indexer.index_public_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#init_index/2","title":"Bonfire.Search.Indexer.init_index/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_delete_object/2","title":"Bonfire.Search.Indexer.maybe_delete_object/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_index_object/1","title":"Bonfire.Search.Indexer.maybe_index_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_indexable_object/1","title":"Bonfire.Search.Indexer.maybe_indexable_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html","title":"Bonfire.Search.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html#handle_event/3","title":"Bonfire.Search.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html#live_search/4","title":"Bonfire.Search.LiveHandler.live_search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html","title":"Bonfire.Search.Meili","type":"module"},{"doc":"","ref":"Bonfire.Search.Meili.html#api/4","title":"Bonfire.Search.Meili.api/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#create_index/2","title":"Bonfire.Search.Meili.create_index/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#delete/3","title":"Bonfire.Search.Meili.delete/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#get/1","title":"Bonfire.Search.Meili.get/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#get/3","title":"Bonfire.Search.Meili.get/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#index_exists/1","title":"Bonfire.Search.Meili.index_exists/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#list_facets/1","title":"Bonfire.Search.Meili.list_facets/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#post/3","title":"Bonfire.Search.Meili.post/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#put/3","title":"Bonfire.Search.Meili.put/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#search/2","title":"Bonfire.Search.Meili.search/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#set_facets/2","title":"Bonfire.Search.Meili.set_facets/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#settings/2","title":"Bonfire.Search.Meili.settings/2","type":"function"},{"doc":"Handles matching of needs &amp; offers","ref":"Bonfire.Search.Stopwords.html","title":"Bonfire.Search.Stopwords","type":"module"},{"doc":"Filters out pre-defined stop words.","ref":"Bonfire.Search.Stopwords.html#filter/2","title":"Bonfire.Search.Stopwords.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#split_sentences/1","title":"Bonfire.Search.Stopwords.split_sentences/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#split_words/1","title":"Bonfire.Search.Stopwords.split_words/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#stop_words/1","title":"Bonfire.Search.Stopwords.stop_words/1","type":"function"},{"doc":"Properties current_user :any","ref":"Bonfire.Search.Web.FormLive.html","title":"Bonfire.Search.Web.FormLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Search.Web.FormLive.html#render/1","title":"Bonfire.Search.Web.FormLive.render/1","type":"function"},{"doc":"Properties current_user :any hits :list","ref":"Bonfire.Search.Web.ResultsLive.html","title":"Bonfire.Search.Web.ResultsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Search.Web.ResultsLive.html#render/1","title":"Bonfire.Search.Web.ResultsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Web.Routes.html","title":"Bonfire.Search.Web.Routes","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_user :any","ref":"Bonfire.Search.Web.SearchLive.html","title":"Bonfire.Search.Web.SearchLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Search.Web.SearchLive.html#handle_event/3","title":"Bonfire.Search.Web.SearchLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Search.Web.SearchLive.html#handle_params/3","title":"Bonfire.Search.Web.SearchLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Search.Web.SearchLive.html#mount/3","title":"Bonfire.Search.Web.SearchLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Search.Web.SearchLive.html#render/1","title":"Bonfire.Search.Web.SearchLive.render/1","type":"function"},{"doc":"","ref":"DummyAdapter.html","title":"DummyAdapter","type":"module"},{"doc":"A mixin for shared user personas (which multiple accounts can use)","ref":"Bonfire.Data.SharedUser.html","title":"Bonfire.Data.SharedUser","type":"module"},{"doc":"","ref":"Bonfire.Data.SharedUser.html#changeset/2","title":"Bonfire.Data.SharedUser.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html","title":"Bonfire.Data.SharedUser.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#create_shared_user_table/0","title":"Bonfire.Data.SharedUser.Migration.create_shared_user_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#create_shared_user_table/1","title":"Bonfire.Data.SharedUser.Migration.create_shared_user_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#drop_shared_user_table/0","title":"Bonfire.Data.SharedUser.Migration.drop_shared_user_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#migrate_shared_user/0","title":"Bonfire.Data.SharedUser.Migration.migrate_shared_user/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#migrate_shared_user/1","title":"Bonfire.Data.SharedUser.Migration.migrate_shared_user/1","type":"macro"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html","title":"ValueFlows.Observe.Classifications","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#create/4","title":"ValueFlows.Observe.Classifications.create/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#flatten/1","title":"ValueFlows.Observe.Classifications.flatten/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#from_classification/1","title":"ValueFlows.Observe.Classifications.from_classification/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#one/1","title":"ValueFlows.Observe.Classifications.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#preload/2","title":"ValueFlows.Observe.Classifications.preload/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#to_classification/2","title":"ValueFlows.Observe.Classifications.to_classification/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#to_ecto_struct/2","title":"ValueFlows.Observe.Classifications.to_ecto_struct/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Classifications.html#update/4","title":"ValueFlows.Observe.Classifications.update/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.GraphQL.html","title":"ValueFlows.Observe.GraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Hydration.html","title":"ValueFlows.Observe.Hydration","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Hydration.html#hydrate/0","title":"ValueFlows.Observe.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Integration.html","title":"ValueFlows.Observe.Integration","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Integration.html#is_admin/1","title":"ValueFlows.Observe.Integration.is_admin/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Migrations.html","title":"ValueFlows.Observe.Migrations","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Migrations.html#down/0","title":"ValueFlows.Observe.Migrations.down/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Migrations.html#up/0","title":"ValueFlows.Observe.Migrations.up/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html","title":"ValueFlows.Observe.ObservablePhenomenons","type":"module"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#create/3","title":"ValueFlows.Observe.ObservablePhenomenons.create/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#facet/0","title":"ValueFlows.Observe.ObservablePhenomenons.facet/0","type":"function"},{"doc":"See ValueFlows.Observe.Classifications.one/1 .","ref":"ValueFlows.Observe.ObservablePhenomenons.html#one/1","title":"ValueFlows.Observe.ObservablePhenomenons.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#update/3","title":"ValueFlows.Observe.ObservablePhenomenons.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#choice_of_edge/3","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.choice_of_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#create_observable_phenomenon/2","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.create_observable_phenomenon/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#delete_observable_phenomenon/2","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.delete_observable_phenomenon/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#formula_quantifier_edge/3","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.formula_quantifier_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#get/2","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.get/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#observable_phenomenons/2","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.observable_phenomenons/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#update_observable_phenomenon/2","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.update_observable_phenomenon/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservableProperties.html","title":"ValueFlows.Observe.ObservableProperties","type":"module"},{"doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#create/2","title":"ValueFlows.Observe.ObservableProperties.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#facet/0","title":"ValueFlows.Observe.ObservableProperties.facet/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#id/0","title":"ValueFlows.Observe.ObservableProperties.id/0","type":"function"},{"doc":"See ValueFlows.Observe.Classifications.one/1 .","ref":"ValueFlows.Observe.ObservableProperties.html#one/1","title":"ValueFlows.Observe.ObservableProperties.one/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#update/3","title":"ValueFlows.Observe.ObservableProperties.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html","title":"ValueFlows.Observe.ObservablePropertiesGraphQL","type":"module"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#create_observable_property/2","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.create_observable_property/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#delete_observable_property/2","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.delete_observable_property/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#observable_properties/2","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.observable_properties/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#observable_property/2","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.observable_property/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#phenomenons_edge/3","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.phenomenons_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#update_observable_property/2","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.update_observable_property/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html","title":"ValueFlows.Observe.Observation","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#context_module/0","title":"ValueFlows.Observe.Observation.context_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#create_changeset/2","title":"ValueFlows.Observe.Observation.create_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#create_changeset_validate/1","title":"ValueFlows.Observe.Observation.create_changeset_validate/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#follow_filters/0","title":"ValueFlows.Observe.Observation.follow_filters/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#queries_module/0","title":"ValueFlows.Observe.Observation.queries_module/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#update_changeset/2","title":"ValueFlows.Observe.Observation.update_changeset/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.html#t:t/0","title":"ValueFlows.Observe.Observation.t/0","type":"type"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html","title":"ValueFlows.Observe.Observation.Queries","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#filter/2","title":"ValueFlows.Observe.Observation.Queries.filter/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#join_to/3","title":"ValueFlows.Observe.Observation.Queries.join_to/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#queries/5","title":"ValueFlows.Observe.Observation.Queries.queries/5","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#query/1","title":"ValueFlows.Observe.Observation.Queries.query/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#query/2","title":"ValueFlows.Observe.Observation.Queries.query/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html","title":"ValueFlows.Observe.Observations","type":"module"},{"doc":"Create an observation","ref":"ValueFlows.Observe.Observations.html#create/2","title":"ValueFlows.Observe.Observations.create/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#create/3","title":"ValueFlows.Observe.Observations.create/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#cursor/0","title":"ValueFlows.Observe.Observations.cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#fields/2","title":"ValueFlows.Observe.Observations.fields/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#indexing_object_format/1","title":"ValueFlows.Observe.Observations.indexing_object_format/1","type":"function"},{"doc":"Retrieves a list of them by arbitrary filters. Used by: Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Observe.Observations.html#many/1","title":"ValueFlows.Observe.Observations.many/1","type":"function"},{"doc":"Retrieves a single one by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Observe.Observations.html#one/1","title":"ValueFlows.Observe.Observations.one/1","type":"function"},{"doc":"Retrieves an Page of observations according to various filters Used by: GraphQL resolver single-parent resolution","ref":"ValueFlows.Observe.Observations.html#page/5","title":"ValueFlows.Observe.Observations.page/5","type":"function"},{"doc":"Retrieves an Pages of observations according to various filters Used by: GraphQL resolver bulk resolution","ref":"ValueFlows.Observe.Observations.html#pages/6","title":"ValueFlows.Observe.Observations.pages/6","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#preload_all/1","title":"ValueFlows.Observe.Observations.preload_all/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#soft_delete/1","title":"ValueFlows.Observe.Observations.soft_delete/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#test_cursor/0","title":"ValueFlows.Observe.Observations.test_cursor/0","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.html#update/3","title":"ValueFlows.Observe.Observations.update/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html","title":"ValueFlows.Observe.Observations.ObservationsResolvers","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#all_observations/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.all_observations/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#create_observation/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.create_observation/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#delete_observation/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.delete_observation/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#fetch_observation/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.fetch_observation/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#fetch_observations/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.fetch_observations/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#has_feature_of_interest/3","title":"ValueFlows.Observe.Observations.ObservationsResolvers.has_feature_of_interest/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#has_result_edge/3","title":"ValueFlows.Observe.Observations.ObservationsResolvers.has_result_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#list_observations/4","title":"ValueFlows.Observe.Observations.ObservationsResolvers.list_observations/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#made_by_edge/3","title":"ValueFlows.Observe.Observations.ObservationsResolvers.made_by_edge/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#name_as_label/3","title":"ValueFlows.Observe.Observations.ObservationsResolvers.name_as_label/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#observation/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.observation/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#observations/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.observations/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observable_object_type/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observable_object_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observable_result_type/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observable_result_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observer_type/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observer_type/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#update_observation/2","title":"ValueFlows.Observe.Observations.ObservationsResolvers.update_observation/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Seeds.html","title":"ValueFlows.Observe.Seeds","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Seeds.html#down/1","title":"ValueFlows.Observe.Seeds.down/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Seeds.html#up/1","title":"ValueFlows.Observe.Seeds.up/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html","title":"ValueFlows.Observe.Simulate","type":"module"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observable_phenomenon!/3","title":"ValueFlows.Observe.Simulate.fake_observable_phenomenon!/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observable_property!/2","title":"ValueFlows.Observe.Simulate.fake_observable_property!/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observation!/3","title":"ValueFlows.Observe.Simulate.fake_observation!/3","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_phenomenon/1","title":"ValueFlows.Observe.Simulate.observable_phenomenon/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_phenomenon_input/2","title":"ValueFlows.Observe.Simulate.observable_phenomenon_input/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_property/1","title":"ValueFlows.Observe.Simulate.observable_property/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_property_input/1","title":"ValueFlows.Observe.Simulate.observable_property_input/1","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observation/4","title":"ValueFlows.Observe.Simulate.observation/4","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observation_input/2","title":"ValueFlows.Observe.Simulate.observation_input/2","type":"function"},{"doc":"","ref":"ValueFlows.Observe.Simulate.html#observation_with_req_fields/2","title":"ValueFlows.Observe.Simulate.observation_with_req_fields/2","type":"function"},{"doc":"Supports use of GraphQL documents from with app containing the Absinthe schema Example First, use AbsintheClient , passing your schema and notifying Absinthe to operate in internal mode: defmodule MyAppWeb.UserController do use MyAppWeb , :controller use AbsintheClient , schema : MyAppWeb.Schema , action : [ mode : :internal ] # ... actions end For each action you want Absinthe to process, provide a GraphQL document using the @graphql module attribute (before the action): @graphql &quot;&quot;&quot; query ($filter: UserFilter) { users(filter: $filter, limit: 10) } &quot;&quot;&quot; def index ( conn_or_socket , %{ data : data } ) do render conn_or_socket , &quot;index.html&quot; , data end The params for the action will be intercepted by the AbsintheClient.Action plug, and used as variables for the GraphQL document you've specified. For instance, given a definition for a :user_filter input object type like this: input_object :user_filter do field :name_matches , :string field :age_above , :integer field :age_below , :integer end And a query that looks like this (assuming you have the normal Plug.Parsers configuration for param parsing): ?f ilter [ name_matches ] = joe &amp; filter [ age_above ] = 42 Then Absinthe will receive variable definitions of: %{ &quot;filter&quot; =&gt; %{ &quot;name_matches&quot; =&gt; &quot;joe&quot; , &quot;age_above&quot; =&gt; 42 } } (For how the string &quot;42&quot; was converted into 42 , see cast_param/3 ). The params on the conn_or_socket will then be replaced by the result of the execution by Absinthe. The action function can then match against that result to respond correctly to the user: It's up to you to handle the three possible results: When there's :data but no :errors , everything went perfectly. When there's :errors but no :data , a validation error occurred and the document could not be executed. When there's :data and :errors , partial data is available but some fields reported errors during execution. Notice the keys are atoms, not strings as in normal Phoenix action invocations. Differences with the GraphQL Specification There are some important differences between GraphQL documents as processed in an HTTP API and the GraphQL documents that this module supports. In an effort to make use of GraphQL ergonomic in Elixir, Absinthe supports some slight structural modifications to the GraphQL documents provided using the @graphql module attribute in controller modules. In a way, you can think of these changes as a specialized GraphQL dialect. The following are the differences you need to keep in mind. Objects can be leaf nodes Let's look at the users example mentioned before: @graphql &quot;&quot;&quot; query ($filter: UserFilter) { users(filter: $filter, limit: 10) } &quot;&quot;&quot; You'll notice that in the above example, users doesn't have an accompanying selection set (that is, a set of child fields bounded by { ... } ). The GraphQL specification dictates that only scalar values can be &quot;leaf nodes&quot; in a GraphQL document... but to support unmodified struct values being returned (for example, Ecto schemas), if no selection set is provided for an object value (or list thereof), the entire value is returned. The template can then use users as needed: &lt; ul &gt; &lt; % = for user &lt;- @users do % &gt; &lt; li &gt; &lt; % = link user . full_name , to : user_path ( @conn_or_socket , :show , user ) % &gt; &lt; / li &gt; &lt; % end % &gt; &lt; / ul &gt; This is useful for Phoenix.HTML helper functions that expect structs with specific fields (especially form_for ). One way to think of this change is that, for objects, no selection set is equivalent to a &quot;splat&quot; operator (except, of course, even fields not defined in your GraphQL schema are returned as part of the value). But, never fear, nothing is stopping you from ignoring this behavior and providing a selection set if you want a traditionally narrow set of fields: @graphql &quot;&quot;&quot; query ($filter: UserFilter) { users(filter: $filter, limit: 10) { id full_name } } &quot;&quot;&quot; Scalar values aren't serialized To remove the need for reparsing values, scalar values aren't serialized; Phoenix actions receive the original, unserialized values of GraphQL fields. This is especially useful for custom scalar types. Using a couple of the additional types packaged in Absinthe.Type.Custom , for example: :decimal values are returned as %Decimal{} structs, not strings. :datetime values are returned as %DateTime{} structs, not strings. In short, GraphQL used in controllers is a query language to retrieve the values requested---there's no need to serialize the values to send them across HTTP. Fields use snake_case Unlike in the GraphQL notation scheme we prefer for GraphQL APIs (that is, camelCase fields, which better match up with the expectations of JavaScript clients), fields used in documents provided as @graphql should use snake_case naming, as Elixir conventions use that notation style for atoms, etc. Atom keys Because you are writing the GraphQL document in your controller and Absinthe is validating the document against your schema, atom keys are returned for field names.","ref":"AbsintheClient.html","title":"AbsintheClient","type":"behaviour"},{"doc":"Customize the Absinthe processing pipeline. Only implement this function if you need to change the pipeline used to process documents.","ref":"AbsintheClient.html#c:absinthe_pipeline/2","title":"AbsintheClient.absinthe_pipeline/2","type":"callback"},{"doc":"Cast string param values to values Absinthe expects for variable input. Some scalar types, like :integer (GraphQL Int ) require that raw, incoming value be a non-string type. This isn't a problem in GraphQL-over-HTTP because the variable values are provided as a JSON payload (which supports, i.e., integer values). To support converting incoming param values to the format that certain scalars expect, we support a cast_param/3 callback function that takes a raw value, target type (e.g., the scalar type), and the schema, and returns the transformed value. cast_param/3 is overridable and the implementation already supports :integer and :float types. If you override cast_param/3 , make sure you super or handle lists, non-nulls, and input object values yourself; they're also processed using the function. Important: In the event that a value is invalid , just return it unchanged so that Absinthe's usual validation logic can report it as invalid.","ref":"AbsintheClient.html#c:cast_param/3","title":"AbsintheClient.cast_param/3","type":"callback"},{"doc":"","ref":"AbsintheClient.html#default_pipeline/2","title":"AbsintheClient.default_pipeline/2","type":"function"},{"doc":"","ref":"AbsintheClient.html#variables/1","title":"AbsintheClient.variables/1","type":"function"},{"doc":"","ref":"AbsintheClient.Helpers.html","title":"AbsintheClient.Helpers","type":"module"},{"doc":"","ref":"AbsintheClient.Helpers.html#assign/3","title":"AbsintheClient.Helpers.assign/3","type":"function"},{"doc":"","ref":"AbsintheClient.Helpers.html#error/2","title":"AbsintheClient.Helpers.error/2","type":"function"},{"doc":"","ref":"AbsintheClient.Helpers.html#maybe_str_to_atom/1","title":"AbsintheClient.Helpers.maybe_str_to_atom/1","type":"function"},{"doc":"Configuration-driven Ecto Schemata.","ref":"Flexto.html","title":"Flexto","type":"module"},{"doc":"Adds additional associations dynamically from app config. Reads config for the given OTP application, under the name of the current module. Each key maps to an Ecto.Schema function: belongs_to field has_many has_one many_to_many Each of these keys should map to a keyword list where the key is the name of the field or association and the value is one of: A type A tuple of type and options (keyword list) Example Schema: defmodule My.Schema do use Ecto.Schema import Flexto , only : [ flex_schema : 1 ] schema &quot;my_table&quot; do field :name , :string # just normal schema things flex_schema ( :my_app ) # boom! give me the stuff end end Example configuration: config :my_app , My.Schema , belongs_to : [ foo : Foo , # belongs_to :foo, Foo bar : { Bar , type : :integer } , # belongs_to :bar, Bar, type: :integer ] , field : [ foo : :string , # field :foo, :string bar : { :integer , default : 4 } , # field :foo, :integer, default: 4 ] , has_one : [ foo : Foo , # has_one :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_one :bar, Bar, foreign_key: :the_bar_id ] has_many : [ foo : Foo , # has_many :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_many :bar, Bar, foreign_key: :the_bar_id ] many_to_many : [ foo : Foo , # many_to_many :foo, Foo bar : { Bar , join_through : FooBar } , # many_to_many :bar, Bar, :join_through: FooBar ] This one won't work very well because we define foo and bar 5 times each, but I think you get the point. Reading of configuration is done during compile time. The relations will be baked in during compilation, thus: Do not expect this to work in release config. You will need to rebuild all dependencies which use this macro when you change their configuration.","ref":"Flexto.html#flex_schema/1","title":"Flexto.flex_schema/1","type":"macro"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html","title":"Bonfire.Federate.ActivityPub","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html#is_admin/1","title":"Bonfire.Federate.ActivityPub.is_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html#repo/0","title":"Bonfire.Federate.ActivityPub.repo/0","type":"function"},{"doc":"Module for publishing ActivityPub activities. Intended entry point for this module is the __MODULE__.enqueue/2 function provided by ActivityPub.Workers.WorkerHelper module. Note that the &quot;context_id&quot; argument refers to the ID of the object being federated and not to the ID of the object context, if present.","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html","title":"Bonfire.Federate.ActivityPub.APPublishWorker","type":"module"},{"doc":"Enqueues a number of jobs provided a verb and a list of string IDs.","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html#batch_enqueue/2","title":"Bonfire.Federate.ActivityPub.APPublishWorker.batch_enqueue/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html#enqueue/3","title":"Bonfire.Federate.ActivityPub.APPublishWorker.enqueue/3","type":"function"},{"doc":"Process queued-up incoming activities using Bonfire.Federate.ActivityPub.Receiver","ref":"Bonfire.Federate.ActivityPub.APReceiverWorker.html","title":"Bonfire.Federate.ActivityPub.APReceiverWorker","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APReceiverWorker.html#enqueue/3","title":"Bonfire.Federate.ActivityPub.APReceiverWorker.enqueue/3","type":"function"},{"doc":"Adapter functions delegated from the ActivityPub Library","ref":"Bonfire.Federate.ActivityPub.Adapter.html","title":"Bonfire.Federate.ActivityPub.Adapter","type":"module"},{"doc":"Callback implementation for ActivityPub.Adapter.base_url/0 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#base_url/0","title":"Bonfire.Federate.ActivityPub.Adapter.base_url/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#character_module/1","title":"Bonfire.Federate.ActivityPub.Adapter.character_module/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_ap_id/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_id/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_id/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_id/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_username/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_username/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_username/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_follower_local_ids/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_follower_local_ids/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_follower_local_ids/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_following_local_ids/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_following_local_ids/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_following_local_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_object_url/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_object_url/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_redirect_url/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_redirect_url/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_redirect_url/1","type":"function"},{"doc":"Queue-up incoming activities to be processed by Bonfire.Federate.ActivityPub.APReceiverWorker","ref":"Bonfire.Federate.ActivityPub.Adapter.html#handle_activity/1","title":"Bonfire.Federate.ActivityPub.Adapter.handle_activity/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.maybe_create_remote_actor/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#maybe_create_remote_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.maybe_create_remote_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#redirect_to_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.redirect_to_actor/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_local_actor/2 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_local_actor/2","title":"Bonfire.Federate.ActivityPub.Adapter.update_local_actor/2","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_remote_actor/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_remote_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.update_remote_actor/1","type":"function"},{"doc":"A Global cache of known federation modules to be queried by activity and/or object type. Use of the FederationModules Service requires: Exporting federation_module/0 in relevant modules (in context modules indicating what activity or object types the module can handle) To populate :bonfire, :federation_search_path in config with the list of OTP applications where federation modules are declared. Start the Bonfire.Federate.ActivityPub.FederationModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html","title":"Bonfire.Federate.ActivityPub.FederationModules","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#child_spec/1","title":"Bonfire.Federate.ActivityPub.FederationModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#data/0","title":"Bonfire.Federate.ActivityPub.FederationModules.data/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_function_error/3","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_function_error/3","type":"function"},{"doc":"Get a Federation Module identified by activity and/or object type, as string or {activity, object} tuple.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module/1","type":"function"},{"doc":"Look up a Federation Module, throw :not_found if not found.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module!/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module!/1","type":"function"},{"doc":"Look up many types at once, throw :not_found if any of them are not found","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_modules/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_modules/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#maybe_federation_module/1","title":"Bonfire.Federate.ActivityPub.FederationModules.maybe_federation_module/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#populate/0","title":"Bonfire.Federate.ActivityPub.FederationModules.populate/0","type":"function"},{"doc":"Populates the global cache with federation_module data via introspection.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#start_link/1","title":"Bonfire.Federate.ActivityPub.FederationModules.start_link/1","type":"function"},{"doc":"A query is either a federation_module name atom or (Pointer) id binary","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#t:query/0","title":"Bonfire.Federate.ActivityPub.FederationModules.query/0","type":"type"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html","title":"Bonfire.Federate.ActivityPub.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html#migrate_activity_pub/0","title":"Bonfire.Federate.ActivityPub.Migrations.migrate_activity_pub/0","type":"macro"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html#migrate_activity_pub/1","title":"Bonfire.Federate.ActivityPub.Migrations.migrate_activity_pub/1","type":"macro"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter","type":"module"},{"doc":"Callback implementation for Nodeinfo.Adapter.base_url/0 .","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#base_url/0","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.base_url/0","type":"function"},{"doc":"Callback implementation for Nodeinfo.Adapter.gather_nodeinfo_data/0 .","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#gather_nodeinfo_data/0","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.gather_nodeinfo_data/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#user_count/0","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.user_count/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html","title":"Bonfire.Federate.ActivityPub.Peered","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#create/3","title":"Bonfire.Federate.ActivityPub.Peered.create/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get/1","title":"Bonfire.Federate.ActivityPub.Peered.get/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get_canonical_uri/1","title":"Bonfire.Federate.ActivityPub.Peered.get_canonical_uri/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#save_canonical_uri/2","title":"Bonfire.Federate.ActivityPub.Peered.save_canonical_uri/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peers.html","title":"Bonfire.Federate.ActivityPub.Peers","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peers.html#get_or_create/1","title":"Bonfire.Federate.ActivityPub.Peers.get_or_create/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html","title":"Bonfire.Federate.ActivityPub.Publisher","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html#error/2","title":"Bonfire.Federate.ActivityPub.Publisher.error/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html#publish/2","title":"Bonfire.Federate.ActivityPub.Publisher.publish/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html","title":"Bonfire.Federate.ActivityPub.Receiver","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#activity_character/1","title":"Bonfire.Federate.ActivityPub.Receiver.activity_character/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#error/2","title":"Bonfire.Federate.ActivityPub.Receiver.error/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_activity/1","title":"Bonfire.Federate.ActivityPub.Receiver.receive_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_activity/2","title":"Bonfire.Federate.ActivityPub.Receiver.receive_activity/2","type":"function"},{"doc":"Create an object without an activity","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_object/2","title":"Bonfire.Federate.ActivityPub.Receiver.receive_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html","title":"Bonfire.Federate.ActivityPub.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#actor_json/1","title":"Bonfire.Federate.ActivityPub.Simulate.actor_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html","title":"Bonfire.Federate.ActivityPub.Utils","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#ap_base_url/0","title":"Bonfire.Federate.ActivityPub.Utils.ap_base_url/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#character_to_actor/1","title":"Bonfire.Federate.ActivityPub.Utils.character_to_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#check_local/1","title":"Bonfire.Federate.ActivityPub.Utils.check_local/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#create_author_object/1","title":"Bonfire.Federate.ActivityPub.Utils.create_author_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/2","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/3","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/4","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/4","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#format_actor/2","title":"Bonfire.Federate.ActivityPub.Utils.format_actor/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#generate_actor_url/1","title":"Bonfire.Federate.ActivityPub.Utils.generate_actor_url/1","type":"function"},{"doc":"Generate canonical URL for local object","ref":"Bonfire.Federate.ActivityPub.Utils.html#generate_object_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.generate_object_ap_id/1","type":"function"},{"doc":"Get canonical URL if set, or generate one","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_actor_canonical_url/1","title":"Bonfire.Federate.ActivityPub.Utils.get_actor_canonical_url/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_actor_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_actor_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_author/1","title":"Bonfire.Federate.ActivityPub.Utils.get_author/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_by_url_ap_id_or_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_by_url_ap_id_or_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_cached_actor_by_local_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_cached_actor_by_local_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_context_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_context_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_creator_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_creator_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_different_creator_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_different_creator_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_in_reply_to/1","title":"Bonfire.Federate.ActivityPub.Utils.get_in_reply_to/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_ap_id!/1","type":"function"},{"doc":"Get canonical URL for object","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_canonical_url/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_canonical_url/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_or_actor_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_or_actor_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_or_fetch_actor_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_or_fetch_actor_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_pointer_id_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_pointer_id_by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#log/1","title":"Bonfire.Federate.ActivityPub.Utils.log/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_icon_object/2","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_icon_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_image_object/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_image_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_image_object/2","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_image_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_image_object_from_path/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_image_object_from_path/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_fix_image_object/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_fix_image_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#public_uri/0","title":"Bonfire.Federate.ActivityPub.Utils.public_uri/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#validate_url/1","title":"Bonfire.Federate.ActivityPub.Utils.validate_url/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html","title":"Bonfire.Boundaries","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.html#mailer/0","title":"Bonfire.Boundaries.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#repo/0","title":"Bonfire.Boundaries.repo/0","type":"function"},{"doc":"an access can be granted many times","ref":"Bonfire.Boundaries.Accesses.html","title":"Bonfire.Boundaries.Accesses","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Accesses.html#accesses/0","title":"Bonfire.Boundaries.Accesses.accesses/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Accesses.html#accesses_fixture/0","title":"Bonfire.Boundaries.Accesses.accesses_fixture/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Accesses.html#changeset/2","title":"Bonfire.Boundaries.Accesses.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Accesses.html#create/1","title":"Bonfire.Boundaries.Accesses.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Accesses.html#list/0","title":"Bonfire.Boundaries.Accesses.list/0","type":"function"},{"doc":"acls represent fully populated access control rules that can be reused","ref":"Bonfire.Boundaries.Acls.html","title":"Bonfire.Boundaries.Acls","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#acls/0","title":"Bonfire.Boundaries.Acls.acls/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#acls_fixture/0","title":"Bonfire.Boundaries.Acls.acls_fixture/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#changeset/2","title":"Bonfire.Boundaries.Acls.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#create/1","title":"Bonfire.Boundaries.Acls.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#list/0","title":"Bonfire.Boundaries.Acls.list/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html","title":"Bonfire.Boundaries.Circles","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#by_id/1","title":"Bonfire.Boundaries.Circles.by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#changeset/2","title":"Bonfire.Boundaries.Circles.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circle_ids/1","title":"Bonfire.Boundaries.Circles.circle_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circle_names/0","title":"Bonfire.Boundaries.Circles.circle_names/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circles/0","title":"Bonfire.Boundaries.Circles.circles/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circles_fixture/0","title":"Bonfire.Boundaries.Circles.circles_fixture/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circles_named_fixture/0","title":"Bonfire.Boundaries.Circles.circles_named_fixture/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#create/1","title":"Bonfire.Boundaries.Circles.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_id/1","title":"Bonfire.Boundaries.Circles.get_id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_name/1","title":"Bonfire.Boundaries.Circles.get_name/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_tuple/1","title":"Bonfire.Boundaries.Circles.get_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#list/0","title":"Bonfire.Boundaries.Circles.list/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#list_builtins/0","title":"Bonfire.Boundaries.Circles.list_builtins/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#to_circle_ids/1","title":"Bonfire.Boundaries.Circles.to_circle_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html","title":"Bonfire.Boundaries.Controlleds","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#changeset/2","title":"Bonfire.Boundaries.Controlleds.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#create/1","title":"Bonfire.Boundaries.Controlleds.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list/0","title":"Bonfire.Boundaries.Controlleds.list/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html","title":"Bonfire.Boundaries.Fixtures","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html#insert/0","title":"Bonfire.Boundaries.Fixtures.insert/0","type":"function"},{"doc":"a grant applies to a subject","ref":"Bonfire.Boundaries.Grants.html","title":"Bonfire.Boundaries.Grants","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#changeset/2","title":"Bonfire.Boundaries.Grants.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#create/1","title":"Bonfire.Boundaries.Grants.create/1","type":"function"},{"doc":"Grant takes three parameters: subject_id: who we are granting access to acl_id: what (list of) things we are granting access to access_id: what level of access","ref":"Bonfire.Boundaries.Grants.html#grant/3","title":"Bonfire.Boundaries.Grants.grant/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#grants/0","title":"Bonfire.Boundaries.Grants.grants/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#list/0","title":"Bonfire.Boundaries.Grants.list/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html","title":"Bonfire.Boundaries.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_boundaries/0","title":"Bonfire.Boundaries.Migrations.migrate_boundaries/0","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_boundaries/1","title":"Bonfire.Boundaries.Migrations.migrate_boundaries/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_functions/0","title":"Bonfire.Boundaries.Migrations.migrate_functions/0","type":"function"},{"doc":"Helpers for writing common queries. In particular, access control. Most of this stuff will probably move at some point when we figure out how to better organise it. Unfortunately, ecto is against the sort of thing we take for granted in the bonfire ecosystem, so some of these patterns are a bit convoluted to make ecto generate acceptable sql. In particular the lateral join and the macro is a bit loltastic when we could just return an arbitrary tuple if ecto would support inferring (or us providing) the return type of a subquery.","ref":"Bonfire.Boundaries.Queries.html","title":"Bonfire.Boundaries.Queries","type":"module"},{"doc":"Call the add_perms(bool?, bool?) postgres function for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#add_perms/2","title":"Bonfire.Boundaries.Queries.add_perms/2","type":"macro"},{"doc":"Call the agg_perms(bool?) postgres aggregate for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#agg_perms/1","title":"Bonfire.Boundaries.Queries.agg_perms/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#can?/3","title":"Bonfire.Boundaries.Queries.can?/3","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#can_delete?/2","title":"Bonfire.Boundaries.Queries.can_delete?/2","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#can_edit?/2","title":"Bonfire.Boundaries.Queries.can_edit?/2","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#can_read?/2","title":"Bonfire.Boundaries.Queries.can_read?/2","type":"macro"},{"doc":"A subquery to join to which filters out results the current user is not permitted to see. Parameters are the alias for the controlled item in the parent query and an expression evaluating to the current user. Currently requires a lateral join, but this shouldn't be necessary once we've figured out how to make ecto support what we do better.","ref":"Bonfire.Boundaries.Queries.html#can_see?/2","title":"Bonfire.Boundaries.Queries.can_see?/2","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#object_only_visible_for/2","title":"Bonfire.Boundaries.Queries.object_only_visible_for/2","type":"function"},{"doc":"FIXME Lists permitted interactions on something for the current user. Parameters are the alias for the controlled item in the parent query and an expression evaluating to the current user. Currently requires a left lateral join. The final version may or may not, depending on how it is used. Does not recognise admins correctly right now, they're treated as regular users.","ref":"Bonfire.Boundaries.Queries.html#permitted_on/2","title":"Bonfire.Boundaries.Queries.permitted_on/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html","title":"Bonfire.Boundaries.Verbs","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#changeset/2","title":"Bonfire.Boundaries.Verbs.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#create/1","title":"Bonfire.Boundaries.Verbs.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#declare_verbs/0","title":"Bonfire.Boundaries.Verbs.declare_verbs/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#id/1","title":"Bonfire.Boundaries.Verbs.id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#id!/1","title":"Bonfire.Boundaries.Verbs.id!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#ids/1","title":"Bonfire.Boundaries.Verbs.ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#list/1","title":"Bonfire.Boundaries.Verbs.list/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#list_verbs_debug/0","title":"Bonfire.Boundaries.Verbs.list_verbs_debug/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#verbs/0","title":"Bonfire.Boundaries.Verbs.verbs/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#verbs_fixture/0","title":"Bonfire.Boundaries.Verbs.verbs_fixture/0","type":"function"},{"doc":"An uploader definition must be provided for each new upload. A few uploaders exist as defaults inside of this namespace, but you can also define your own. defmodule MyUploader do use Bonfire.Files.Definition @versions [ :original , :thumb ] def transform ( :thumb , _ ) do { :convert , &quot;-thumbnail 100x100 -format png&quot; , :png } end def filename ( version , _ ) do version end def storage_dir ( _ , { file , user_id } ) do &quot;uploads/my/&quot; &lt;&gt; user_id end def allowed_media_types do [ &quot;image/png&quot; , &quot;image/jpeg&quot; ] end end You may have noticed that this definition is very similar to what a definition would look like in waffle . A Bonfire.Files.Definition is functionally the same as a Waffle.Definition , however the allowed_media_types/0 callback is added, forcing you to define what media types are accepted for these types of uploads. (You can also return :all to accept everything). To use the uploader: iex&gt; { :ok , media } = Bonfire.Files . upload ( MyUploader , user , %{ path : &quot;./150.png&quot; } ) iex&gt; media . media_type &quot;image/png&quot; iex&gt; Bonfire.Files . remote_url ( MyUploader , media ) &quot;/uploads/my/01F3AY6JV30G06BY4DR9BTW5EH&quot;","ref":"Bonfire.Files.html","title":"Bonfire.Files","type":"module"},{"doc":"Delete an upload, removing any associated files.","ref":"Bonfire.Files.html#hard_delete/2","title":"Bonfire.Files.hard_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Files.html#many/1","title":"Bonfire.Files.many/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#one/1","title":"Bonfire.Files.one/1","type":"function"},{"doc":"Return the URL that a local file has.","ref":"Bonfire.Files.html#remote_url/2","title":"Bonfire.Files.remote_url/2","type":"function"},{"doc":"Delete an upload, removing it from indexing, but the files remain available.","ref":"Bonfire.Files.html#soft_delete/1","title":"Bonfire.Files.soft_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#update_by/2","title":"Bonfire.Files.update_by/2","type":"function"},{"doc":"Attempt to store a file, returning an upload, for any parent item that participates in the meta abstraction, providing the actor responsible for the upload.","ref":"Bonfire.Files.html#upload/4","title":"Bonfire.Files.upload/4","type":"function"},{"doc":"Extension to Waffle.Definition, adding support for checking against media types parsed through magic bytes instead of file extensions, which can be modified by the user. You can still use validate/2 and other waffle callbacks.","ref":"Bonfire.Files.Definition.html","title":"Bonfire.Files.Definition","type":"behaviour"},{"doc":"","ref":"Bonfire.Files.Definition.html#c:allowed_media_types/0","title":"Bonfire.Files.Definition.allowed_media_types/0","type":"callback"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html","title":"Bonfire.Files.DocumentUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#acl/2","title":"Bonfire.Files.DocumentUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.DocumentUploader.html#allowed_media_types/0","title":"Bonfire.Files.DocumentUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#asset_host/0","title":"Bonfire.Files.DocumentUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#async/0","title":"Bonfire.Files.DocumentUploader.async/0","type":"function"},{"doc":"Definition for any type of document, allows most media types that support documents, archives, video and audio.","ref":"Bonfire.Files.DocumentUploader.html#bucket/0","title":"Bonfire.Files.DocumentUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/1","title":"Bonfire.Files.DocumentUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/2","title":"Bonfire.Files.DocumentUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#delete/1","title":"Bonfire.Files.DocumentUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#filename/2","title":"Bonfire.Files.DocumentUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_file_headers/1","title":"Bonfire.Files.DocumentUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_url/1","title":"Bonfire.Files.DocumentUploader.remote_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#s3_object_headers/2","title":"Bonfire.Files.DocumentUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir/2","title":"Bonfire.Files.DocumentUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.DocumentUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#store/1","title":"Bonfire.Files.DocumentUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#transform/2","title":"Bonfire.Files.DocumentUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#upload/3","title":"Bonfire.Files.DocumentUploader.upload/3","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/1","title":"Bonfire.Files.DocumentUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/2","title":"Bonfire.Files.DocumentUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/3","title":"Bonfire.Files.DocumentUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#urls/2","title":"Bonfire.Files.DocumentUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#validate/1","title":"Bonfire.Files.DocumentUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FileDenied.html","title":"Bonfire.Files.FileDenied","type":"module"},{"doc":"","ref":"Bonfire.Files.FileDenied.html#new/1","title":"Bonfire.Files.FileDenied.new/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FileDenied.html#t:t/0","title":"Bonfire.Files.FileDenied.t/0","type":"type"},{"doc":"","ref":"Bonfire.Files.IconUploader.html","title":"Bonfire.Files.IconUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#acl/2","title":"Bonfire.Files.IconUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.IconUploader.html#allowed_media_types/0","title":"Bonfire.Files.IconUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#asset_host/0","title":"Bonfire.Files.IconUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#async/0","title":"Bonfire.Files.IconUploader.async/0","type":"function"},{"doc":"Uploader for smaller image icons, usually used as avatars. TODO: Support resizing.","ref":"Bonfire.Files.IconUploader.html#bucket/0","title":"Bonfire.Files.IconUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/1","title":"Bonfire.Files.IconUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/2","title":"Bonfire.Files.IconUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#delete/1","title":"Bonfire.Files.IconUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#filename/2","title":"Bonfire.Files.IconUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#remote_file_headers/1","title":"Bonfire.Files.IconUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#remote_url/1","title":"Bonfire.Files.IconUploader.remote_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#s3_object_headers/2","title":"Bonfire.Files.IconUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir/2","title":"Bonfire.Files.IconUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.IconUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#store/1","title":"Bonfire.Files.IconUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#transform/2","title":"Bonfire.Files.IconUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#upload/3","title":"Bonfire.Files.IconUploader.upload/3","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/1","title":"Bonfire.Files.IconUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/2","title":"Bonfire.Files.IconUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/3","title":"Bonfire.Files.IconUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#urls/2","title":"Bonfire.Files.IconUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#validate/1","title":"Bonfire.Files.IconUploader.validate/1","type":"function"},{"doc":"Uploader for larger images, for example, a profile page banner. Does not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.ImageUploader.html","title":"Bonfire.Files.ImageUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#acl/2","title":"Bonfire.Files.ImageUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.ImageUploader.html#allowed_media_types/0","title":"Bonfire.Files.ImageUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#asset_host/0","title":"Bonfire.Files.ImageUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#async/0","title":"Bonfire.Files.ImageUploader.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/0","title":"Bonfire.Files.ImageUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/1","title":"Bonfire.Files.ImageUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/2","title":"Bonfire.Files.ImageUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#delete/1","title":"Bonfire.Files.ImageUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#filename/2","title":"Bonfire.Files.ImageUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_file_headers/1","title":"Bonfire.Files.ImageUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_url/1","title":"Bonfire.Files.ImageUploader.remote_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#s3_object_headers/2","title":"Bonfire.Files.ImageUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir/2","title":"Bonfire.Files.ImageUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.ImageUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#store/1","title":"Bonfire.Files.ImageUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#transform/2","title":"Bonfire.Files.ImageUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#upload/3","title":"Bonfire.Files.ImageUploader.upload/3","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/1","title":"Bonfire.Files.ImageUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/2","title":"Bonfire.Files.ImageUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/3","title":"Bonfire.Files.ImageUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#urls/2","title":"Bonfire.Files.ImageUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#validate/1","title":"Bonfire.Files.ImageUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html","title":"Bonfire.Files.Media","type":"module"},{"doc":"","ref":"Bonfire.Files.Media.html#changeset/2","title":"Bonfire.Files.Media.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#t:t/0","title":"Bonfire.Files.Media.t/0","type":"type"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html","title":"Bonfire.Files.Media.Migration","type":"module"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#create_media_table/0","title":"Bonfire.Files.Media.Migration.create_media_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#create_media_table/1","title":"Bonfire.Files.Media.Migration.create_media_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#drop_media_path_index/1","title":"Bonfire.Files.Media.Migration.drop_media_path_index/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#drop_media_table/0","title":"Bonfire.Files.Media.Migration.drop_media_table/0","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#migrate_media/0","title":"Bonfire.Files.Media.Migration.migrate_media/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migration.html#migrate_media/1","title":"Bonfire.Files.Media.Migration.migrate_media/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Queries.html","title":"Bonfire.Files.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Files.Queries.html#filter/2","title":"Bonfire.Files.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Queries.html#query/1","title":"Bonfire.Files.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Queries.html#query/2","title":"Bonfire.Files.Queries.query/2","type":"function"},{"doc":"","ref":"Voodoo.html","title":"Voodoo","type":"module"},{"doc":"Generates a reverse router function with the given name based upon a compiled(!) phoenix router module. Must be used outside of the router module, or else the router won't be compiled yet and we won't be able to look up the routes. Generated function wraps the existing phoenix helpers. defmodule MyAppWeb.Router do use MyAppWeb , :router # ... end defmodule MyAppWeb.Router.Reverse do import Voodoo , only : [ def_reverse_router : 2 ] def_reverse_router :path , for : MyAppWeb.Router end","ref":"Voodoo.html#def_reverse_router/2","title":"Voodoo.def_reverse_router/2","type":"macro"},{"doc":"Turns a Conn or Socket into the name of the router that routed it.","ref":"Voodoo.html#router/1","title":"Voodoo.router/1","type":"function"},{"doc":"Ecto Shorts is a library created to help shorten ecto queries Common filters available include: preload - Preloads fields onto the query results start_date - Query for items inserted after this date end_date - Query for items inserted before this date before - Get items with IDs before this value after - Get items with IDs after this value ids - Get items with a list of ids first - Gets the first n items last - Gets the last n items limit - Gets the first n items offset - Offsets limit by n items search - Warning: This requires schemas using this to have a &amp;by_search(query, val) function join_preload - WIP: Joins an associations and preloads its fields onto the query results (using only one query) You are also able to filter on any natural field of a model, as well as use gte/gt lte/lt like/ilike is_nil/not(is_nil) EctoShorts . filter ( User , %{ name : %{ ilike : &quot;steve&quot; } } ) EctoShorts . filter ( User , %{ name : %{ age : %{ gte : 18 , lte : 30 } } } ) EctoShorts . filter ( User , %{ name : %{ is_banned : %{ != : nil } } } ) EctoShorts . filter ( User , %{ name : %{ is_banned : %{ == : nil } } } ) my_query = EctoShorts . filter ( User , %{ name : &quot;Billy&quot; } ) EctoShorts . filter ( my_query , %{ last_name : &quot;Joe&quot; } )","ref":"EctoShorts.html","title":"EctoShorts","type":"module"},{"doc":"","ref":"EctoShorts.html#filter/4","title":"EctoShorts.filter/4","type":"function"},{"doc":"Calls a collection of common schema filters, which are found in:any() EctoShorts.QueryBuilder.Common EctoShorts.QueryBuilder.Schema","ref":"EctoShorts.CommonFilters.html","title":"EctoShorts.CommonFilters","type":"module"},{"doc":"","ref":"EctoShorts.CommonFilters.html#filter/2","title":"EctoShorts.CommonFilters.filter/2","type":"function"},{"doc":"Converts filter params into a query","ref":"EctoShorts.CommonFilters.html#query_params/4","title":"EctoShorts.CommonFilters.query_params/4","type":"function"},{"doc":"Behaviour for query building from filter tuples","ref":"EctoShorts.QueryBuilder.html","title":"EctoShorts.QueryBuilder","type":"behaviour"},{"doc":"Adds to accumulator query with filter_type and value","ref":"EctoShorts.QueryBuilder.html#c:filter/2","title":"EctoShorts.QueryBuilder.filter/2","type":"callback"},{"doc":"","ref":"EctoShorts.QueryBuilder.html#filter/3","title":"EctoShorts.QueryBuilder.filter/3","type":"function"},{"doc":"","ref":"EctoShorts.QueryBuilder.html#filter/4","title":"EctoShorts.QueryBuilder.filter/4","type":"function"},{"doc":"Pulls the schema from a query","ref":"EctoShorts.QueryBuilder.html#query_schema/1","title":"EctoShorts.QueryBuilder.query_schema/1","type":"function"},{"doc":"","ref":"EctoShorts.QueryBuilder.html#t:accumulator_query/0","title":"EctoShorts.QueryBuilder.accumulator_query/0","type":"type"},{"doc":"","ref":"EctoShorts.QueryBuilder.html#t:filter_tuple/0","title":"EctoShorts.QueryBuilder.filter_tuple/0","type":"type"},{"doc":"This module contains query building parts for common things such as preload, start/end date and others","ref":"EctoShorts.QueryBuilder.Common.html","title":"EctoShorts.QueryBuilder.Common","type":"module"},{"doc":"","ref":"EctoShorts.QueryBuilder.Common.html#filters/0","title":"EctoShorts.QueryBuilder.Common.filters/0","type":"function"},{"doc":"This module contains query building parts for schemas themselves, when passed a query it can pull the schema from it and attempt to filter on any natural field","ref":"EctoShorts.QueryBuilder.Schema.html","title":"EctoShorts.QueryBuilder.Schema","type":"module"},{"doc":"","ref":"EctoShorts.QueryBuilder.Schema.html#filter/3","title":"EctoShorts.QueryBuilder.Schema.filter/3","type":"function"},{"doc":"A module for preloading associations using joins. Based on https://hexdocs.pm/ecto_preloader (licensed under WTFPL) By default, Ecto preloads associations using a separate query for each association, which can degrade performance. You could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see example below). With Ecto.Preloader , you can accomplish this with just one line of code. Example using just Ecto It requires calling Query.join/4 , Query.assoc/3 and Query.preload/2 import Ecto.Query Invoice |&gt; join ( :left , [ i ] , assoc ( i , :customer ) , as : :customer ) |&gt; join ( :left , [ i , c ] , assoc ( c , :account ) , as : :account ) |&gt; join ( :left , [ i ] , assoc ( i , :lines ) , as : :lines ) |&gt; preload ( [ lines : v , customers : c , account : a ] , lines : v , customer : { c , [ a : account ] } ) |&gt; Repo . all ( ) Example using Ecto.Preloader Just one method call: import Ecto.Query import Ecto.Preloader Invoice |&gt; join_preload ( [ :customer , :account ] ) |&gt; join_preload ( [ :lines ] ) |&gt; Repo . all ( )","ref":"EctoSparkles.JoinPreload.html","title":"EctoSparkles.JoinPreload","type":"module"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#do_preload_join/6","title":"EctoSparkles.JoinPreload.do_preload_join/6","type":"macro"},{"doc":"Join + Preload (up to three nested levels of) associations","ref":"EctoSparkles.JoinPreload.html#join_preload/2","title":"EctoSparkles.JoinPreload.join_preload/2","type":"macro"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#preload_join/2","title":"EctoSparkles.JoinPreload.preload_join/2","type":"macro"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#preload_join/3","title":"EctoSparkles.JoinPreload.preload_join/3","type":"macro"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#preload_join/4","title":"EctoSparkles.JoinPreload.preload_join/4","type":"macro"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#preload_join/5","title":"EctoSparkles.JoinPreload.preload_join/5","type":"macro"},{"doc":"","ref":"EctoSparkles.JoinPreload.html#preload_join/6","title":"EctoSparkles.JoinPreload.preload_join/6","type":"macro"},{"doc":"","ref":"EctoSparkles.ReusableJoin.html","title":"EctoSparkles.ReusableJoin","type":"module"},{"doc":"","ref":"EctoSparkles.ReusableJoin.html#do_reusable_join_as/6","title":"EctoSparkles.ReusableJoin.do_reusable_join_as/6","type":"macro"},{"doc":"Similar to Ecto.Query.join/{4,5} , but can be called multiple times with the same alias. Note that only the first join operation is performed, the subsequent ones that use the same alias are just ignored. Also note that because of this behaviour, its mandatory to specify an alias when using this function. This is helpful when you need to perform a join while building queries one filter at a time, because the same filter could be used multiple times or you could have multiple filters that require the same join, which poses a problem with how the filter/3 callback work, as you need to return a dynamic with the filtering, which means that the join must have an alias, and by default Ecto raises an error when you add multiple joins with the same alias. To solve this, it is recommended to use this macro instead of the default Ecto.Query.join/{4,5} , in which case there will be only one join in the query that can be reused by multiple filters.","ref":"EctoSparkles.ReusableJoin.html#reusable_join/5","title":"EctoSparkles.ReusableJoin.reusable_join/5","type":"macro"},{"doc":"Module for converting emoticons and emoji names to real emojis","ref":"Emote.html","title":"Emote","type":"module"},{"doc":"Converts text in a way that it replaces mapped emojis to real emojis.","ref":"Emote.html#convert_text/1","title":"Emote.convert_text/1","type":"function"},{"doc":"Converts mapping to emoji, eg &quot;:face_with_ok_gesture:&quot; to 🙆, returns original text when emoji not found, helper function for convert_text.","ref":"Emote.html#convert_word/1","title":"Emote.convert_word/1","type":"function"},{"doc":"Converts emoticon or name to emoji, eg &quot;:face_with_ok_gesture:&quot; to 🙆, with fallback returning nil if emoji not found.","ref":"Emote.html#lookup/1","title":"Emote.lookup/1","type":"function"},{"doc":"Defines a paginator. This module adds a paginate/3 function to your Ecto.Repo so that you can paginate through results using opaque cursors. Usage defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app use Paginator end Options Paginator can take any options accepted by paginate/3 . This is useful when you want to enforce some options globally across your project. Example defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app use Paginator , limit : 10 , # sets the default limit to 10 maximum_limit : 100 , # sets the maximum limit to 100 include_total_count : true , # include total count by default total_count_primary_key_field : :uuid # sets the total_count_primary_key_field to uuid for calculate total_count end Note that these values can be still be overriden when paginate/3 is called. Use without macros If you wish to avoid use of macros or you wish to use a different name for the pagination function you can define your own function like so: defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app def my_paginate_function ( queryable , opts \\ [ ] , repo_opts \\ [ ] ) do defaults = [ limit : 10 ] # Default options of your choice here opts = Keyword . merge ( defaults , opts ) Paginator . paginate ( queryable , opts , __MODULE__ , repo_opts ) end end","ref":"Paginator.html","title":"Paginator","type":"behaviour"},{"doc":"Generate a cursor for the supplied record, in the same manner as the before and after cursors generated by paginate/3 . For the cursor to be compatible with paginate/3 , cursor_fields must have the same value as the cursor_fields option passed to it. Example iex&gt; Paginator . cursor_for_record ( % Paginator.Customer { id : 1 } , [ :id ] ) &quot;g3QAAAABZAACaWRhAQ==&quot; iex&gt; Paginator . cursor_for_record ( % Paginator.Customer { id : 1 , name : &quot;Alice&quot; } , [ id : :asc , name : :desc ] ) &quot;g3QAAAACZAACaWRhAWQABG5hbWVtAAAABUFsaWNl&quot;","ref":"Paginator.html#cursor_for_record/3","title":"Paginator.cursor_for_record/3","type":"function"},{"doc":"Default function used to get the value of a cursor field from the supplied map. This function can be overriden in the Paginator.Config using the fetch_cursor_value_fun key. When using named bindings to sort on joined columns it will attempt to get the value of joined column by using the named binding as the name of the relationship on the original Ecto.Schema. Example iex&gt; Paginator . default_fetch_cursor_value ( % Paginator.Customer { id : 1 } , :id ) 1 iex&gt; Paginator . default_fetch_cursor_value ( % Paginator.Customer { id : 1 , address : % Paginator.Address { city : &quot;London&quot; } } , { :address , :city } ) &quot;London&quot;","ref":"Paginator.html#default_fetch_cursor_value/2","title":"Paginator.default_fetch_cursor_value/2","type":"function"},{"doc":"Fetches all the results matching the query within the cursors. Options :after - Fetch the records after this cursor. :before - Fetch the records before this cursor. :cursor_fields - The fields with sorting direction used to determine the cursor. In most cases, this should be the same fields as the ones used for sorting in the query. When you use named bindings in your query they can also be provided. :fetch_cursor_value_fun function of arity 2 to lookup cursor values on returned records. Defaults to Paginator.default_fetch_cursor_value/2 :include_total_count - Set this to true to return the total number of records matching the query. Note that this number will be capped by :total_count_limit . Defaults to false . :total_count_primary_key_field - Running count queries on specified column of the table :limit - Limits the number of records returned per page. Note that this number will be capped by :maximum_limit . Defaults to 50 . :maximum_limit - Sets a maximum cap for :limit . This option can be useful when :limit is set dynamically (e.g from a URL param set by a user) but you still want to enfore a maximum. Defaults to 500 . :sort_direction - The direction used for sorting. Defaults to :asc . It is preferred to set the sorting direction per field in :cursor_fields . :total_count_limit - Running count queries on tables with a large number of records is expensive so it is capped by default. Can be set to :infinity in order to count all the records. Defaults to 10,000 . Repo options This will be passed directly to Ecto.Repo.all/2 , as such any option supported by this function can be used here. Simple example query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] , select : p ) Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) Example with using custom sort directions per field query = from ( p in Post , order_by : [ asc : p . inserted_at , desc : p . id ] , select : p ) Repo . paginate ( query , cursor_fields : [ inserted_at : :asc , id : :desc ] , limit : 50 ) Example with sorting on columns in joined tables from ( p in Post , as : :posts , join : a in assoc ( p , :author ) , as : :author , preload : [ author : a ] , select : p , order_by : [ { :asc , a . name } , { :asc , p . id } ] ) Repo . paginate ( query , cursor_fields : [ { { :author , :name } , :asc } , id : :asc ] , limit : 50 ) When sorting on columns in joined tables it is necessary to use named bindings. In this case we name it author . In the cursor_fields we refer to this named binding and its column name. To build the cursor Paginator uses the returned Ecto.Schema. When using a joined column the returned Ecto.Schema won't have the value of the joined column unless we preload it. E.g. in this case the cursor will be build up from post.id and post.author.name . This presupposes that the named of the binding is the same as the name of the relationship on the original struct. One level deep joins are supported out of the box but if we join on a second level, e.g. post.author.company.name a custom function can be supplied to handle the cursor value retrieval. This also applies when the named binding does not map to the name of the relationship. Example from ( p in Post , as : :posts , join : a in assoc ( p , :author ) , as : :author , join : c in assoc ( a , :company ) , as : :company , preload : [ author : a ] , select : p , order_by : [ { :asc , a . name } , { :asc , p . id } ] ) Repo . paginate ( query , cursor_fields : [ { { :company , :name } , :asc } , id : :asc ] , fetch_cursor_value_fun : fn post , { { :company , name } , _ } -&gt; post . author . company . name post , field -&gt; Paginator . default_fetch_cursor_value ( post , field ) end , limit : 50 )","ref":"Paginator.html#c:paginate/3","title":"Paginator.paginate/3","type":"callback"},{"doc":"","ref":"Paginator.html#paginated_query/2","title":"Paginator.paginated_query/2","type":"function"},{"doc":"Defines a page. Fields edges - a list of entries contained in this page. page_info - meta-data attached to this page.","ref":"Paginator.Page.html","title":"Paginator.Page","type":"module"},{"doc":"","ref":"Paginator.Page.html#t:t/0","title":"Paginator.Page.t/0","type":"type"},{"doc":"Defines page page_info. Fields start_cursor - an opaque cursor representing the first row of the current page, to be used with the before query parameter. end_cursor - an opaque cursor representing the last row of the current page, to be used with the after query parameter. limit - the maximum number of edges that can be contained in this page. total_count - the total number of edges matching the query. total_count_cap_exceeded - a boolean indicating whether the :total_count_limit was exceeded.","ref":"Paginator.PageInfo.html","title":"Paginator.PageInfo","type":"module"},{"doc":"","ref":"Paginator.PageInfo.html#t:opaque_cursor/0","title":"Paginator.PageInfo.opaque_cursor/0","type":"type"},{"doc":"","ref":"Paginator.PageInfo.html#t:t/0","title":"Paginator.PageInfo.t/0","type":"type"},{"doc":"A reusable table to link child or related items and also rank sibling items. Usage (for global ranking, otherwise you should specify scope): { :ok , first } = Bonfire.Data.Assort.Ranked . changeset ( %{ item_id : &quot;01FGTH48ZZD08ADBHQ260KYJHW&quot; } ) |&gt; Bonfire.Repo . insert second = Bonfire.Data.Assort.Ranked . changeset ( %{ item_id : &quot;01FGTH0N3YPBS5MNNAEAEVV54J&quot; } ) |&gt; Bonfire.Repo . insert import Ecto.Query Bonfire.Data.Assort.Ranked |&gt; order_by ( :rank ) |&gt; Bonfire.Repo . all first |&gt; Bonfire.Data.Assort.Ranked . changeset ( %{ rank_set : :last } ) |&gt; Bonfire.Repo . update Bonfire.Data.Assort.Ranked |&gt; order_by ( :rank ) |&gt; Bonfire.Repo . all","ref":"Bonfire.Data.Assort.Ranked.html","title":"Bonfire.Data.Assort.Ranked","type":"module"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.html#changeset/2","title":"Bonfire.Data.Assort.Ranked.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html","title":"Bonfire.Data.Assort.Ranked.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_ranked_table/0","title":"Bonfire.Data.Assort.Ranked.Migration.create_ranked_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_ranked_table/1","title":"Bonfire.Data.Assort.Ranked.Migration.create_ranked_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_unique_index/1","title":"Bonfire.Data.Assort.Ranked.Migration.create_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#drop_ranked_table/0","title":"Bonfire.Data.Assort.Ranked.Migration.drop_ranked_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#drop_unique_index/1","title":"Bonfire.Data.Assort.Ranked.Migration.drop_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#migrate_ranked/0","title":"Bonfire.Data.Assort.Ranked.Migration.migrate_ranked/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#migrate_ranked/1","title":"Bonfire.Data.Assort.Ranked.Migration.migrate_ranked/1","type":"macro"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view.","ref":"Surface.Catalogue.Components.PlaygroundTools.html","title":"Surface.Catalogue.Components.PlaygroundTools","type":"module"},{"doc":"","ref":"Surface.Catalogue.Components.PlaygroundTools.html#clear_event_log/1","title":"Surface.Catalogue.Components.PlaygroundTools.clear_event_log/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Surface.Catalogue.Components.PlaygroundTools.html#handle_event/3","title":"Surface.Catalogue.Components.PlaygroundTools.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Surface.Catalogue.Components.PlaygroundTools.html#handle_info/2","title":"Surface.Catalogue.Components.PlaygroundTools.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Surface.Catalogue.Components.PlaygroundTools.html#mount/3","title":"Surface.Catalogue.Components.PlaygroundTools.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Surface.Catalogue.Components.PlaygroundTools.html#render/1","title":"Surface.Catalogue.Components.PlaygroundTools.render/1","type":"function"},{"doc":"","ref":"Surface.Catalogue.Components.PlaygroundTools.html#tab_click_callback/1","title":"Surface.Catalogue.Components.PlaygroundTools.tab_click_callback/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view.","ref":"Surface.Catalogue.ExampleLive.html","title":"Surface.Catalogue.ExampleLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Surface.Catalogue.ExampleLive.html#handle_params/3","title":"Surface.Catalogue.ExampleLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Surface.Catalogue.ExampleLive.html#mount/3","title":"Surface.Catalogue.ExampleLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Surface.Catalogue.ExampleLive.html#render/1","title":"Surface.Catalogue.ExampleLive.render/1","type":"function"},{"doc":"","ref":"Surface.Catalogue.LayoutView.html","title":"Surface.Catalogue.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Surface.Catalogue.LayoutView.html#__resource__/0","title":"Surface.Catalogue.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Surface.Catalogue.LayoutView.html#render/2","title":"Surface.Catalogue.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Surface.Catalogue.LayoutView.html#template_not_found/2","title":"Surface.Catalogue.LayoutView.template_not_found/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view.","ref":"Surface.Catalogue.PageLive.html","title":"Surface.Catalogue.PageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Surface.Catalogue.PageLive.html#handle_event/3","title":"Surface.Catalogue.PageLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Surface.Catalogue.PageLive.html#handle_info/2","title":"Surface.Catalogue.PageLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Surface.Catalogue.PageLive.html#handle_params/3","title":"Surface.Catalogue.PageLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Surface.Catalogue.PageLive.html#mount/3","title":"Surface.Catalogue.PageLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Surface.Catalogue.PageLive.html#render/1","title":"Surface.Catalogue.PageLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view.","ref":"Surface.Catalogue.PlaygroundLive.html","title":"Surface.Catalogue.PlaygroundLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Surface.Catalogue.PlaygroundLive.html#handle_params/3","title":"Surface.Catalogue.PlaygroundLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Surface.Catalogue.PlaygroundLive.html#mount/3","title":"Surface.Catalogue.PlaygroundLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Surface.Catalogue.PlaygroundLive.html#render/1","title":"Surface.Catalogue.PlaygroundLive.render/1","type":"function"},{"doc":"","ref":"Surface.Catalogue.Router.html","title":"Surface.Catalogue.Router","type":"module"},{"doc":"","ref":"Surface.Catalogue.Router.html#surface_catalogue/2","title":"Surface.Catalogue.Router.surface_catalogue/2","type":"macro"},{"doc":"A simple catalogue server that can be used to load catalogues from projects that don't initialize their own Phoenix endpoint. In case your project already have an endpoint set up, you should provide a new route for catalogue instead. See https://github.com/surface-ui/surface_catalogue/#installation for details. This server is for development only usage.","ref":"Surface.Catalogue.Server.html","title":"Surface.Catalogue.Server","type":"module"},{"doc":"","ref":"Surface.Catalogue.Server.html#start/1","title":"Surface.Catalogue.Server.start/1","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Endpoint.html","title":"Surface.Catalogue.Server.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"Surface.Catalogue.Server.Endpoint.html#broadcast/3","title":"Surface.Catalogue.Server.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"Surface.Catalogue.Server.Endpoint.html#broadcast!/3","title":"Surface.Catalogue.Server.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"Surface.Catalogue.Server.Endpoint.html#broadcast_from/4","title":"Surface.Catalogue.Server.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"Surface.Catalogue.Server.Endpoint.html#broadcast_from!/4","title":"Surface.Catalogue.Server.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"Surface.Catalogue.Server.Endpoint.html#call/2","title":"Surface.Catalogue.Server.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"Surface.Catalogue.Server.Endpoint.html#child_spec/1","title":"Surface.Catalogue.Server.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"Surface.Catalogue.Server.Endpoint.html#config/2","title":"Surface.Catalogue.Server.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"Surface.Catalogue.Server.Endpoint.html#config_change/2","title":"Surface.Catalogue.Server.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"Surface.Catalogue.Server.Endpoint.html#host/0","title":"Surface.Catalogue.Server.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"Surface.Catalogue.Server.Endpoint.html#init/1","title":"Surface.Catalogue.Server.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"Surface.Catalogue.Server.Endpoint.html#local_broadcast/3","title":"Surface.Catalogue.Server.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"Surface.Catalogue.Server.Endpoint.html#local_broadcast_from/4","title":"Surface.Catalogue.Server.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"Surface.Catalogue.Server.Endpoint.html#path/1","title":"Surface.Catalogue.Server.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"Surface.Catalogue.Server.Endpoint.html#script_name/0","title":"Surface.Catalogue.Server.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"Surface.Catalogue.Server.Endpoint.html#start_link/1","title":"Surface.Catalogue.Server.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"Surface.Catalogue.Server.Endpoint.html#static_integrity/1","title":"Surface.Catalogue.Server.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"Surface.Catalogue.Server.Endpoint.html#static_lookup/1","title":"Surface.Catalogue.Server.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"Surface.Catalogue.Server.Endpoint.html#static_path/1","title":"Surface.Catalogue.Server.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"Surface.Catalogue.Server.Endpoint.html#static_url/0","title":"Surface.Catalogue.Server.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"Surface.Catalogue.Server.Endpoint.html#struct_url/0","title":"Surface.Catalogue.Server.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"Surface.Catalogue.Server.Endpoint.html#subscribe/2","title":"Surface.Catalogue.Server.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"Surface.Catalogue.Server.Endpoint.html#unsubscribe/1","title":"Surface.Catalogue.Server.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"Surface.Catalogue.Server.Endpoint.html#url/0","title":"Surface.Catalogue.Server.Endpoint.url/0","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.ErrorView.html","title":"Surface.Catalogue.Server.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Surface.Catalogue.Server.ErrorView.html#__resource__/0","title":"Surface.Catalogue.Server.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Surface.Catalogue.Server.ErrorView.html#render/2","title":"Surface.Catalogue.Server.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Surface.Catalogue.Server.ErrorView.html#template_not_found/2","title":"Surface.Catalogue.Server.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.html","title":"Surface.Catalogue.Server.Router","type":"module"},{"doc":"","ref":"Surface.Catalogue.Server.Router.html#browser/2","title":"Surface.Catalogue.Server.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"Surface.Catalogue.Server.Router.html#call/2","title":"Surface.Catalogue.Server.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"Surface.Catalogue.Server.Router.html#init/1","title":"Surface.Catalogue.Server.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from Surface.Catalogue.Server.Router.","ref":"Surface.Catalogue.Server.Router.Helpers.html","title":"Surface.Catalogue.Server.Router.Helpers","type":"module"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_path/2","title":"Surface.Catalogue.Server.Router.Helpers.live_path/2","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_path/3","title":"Surface.Catalogue.Server.Router.Helpers.live_path/3","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_path/4","title":"Surface.Catalogue.Server.Router.Helpers.live_path/4","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_path/5","title":"Surface.Catalogue.Server.Router.Helpers.live_path/5","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_url/2","title":"Surface.Catalogue.Server.Router.Helpers.live_url/2","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_url/3","title":"Surface.Catalogue.Server.Router.Helpers.live_url/3","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_url/4","title":"Surface.Catalogue.Server.Router.Helpers.live_url/4","type":"function"},{"doc":"","ref":"Surface.Catalogue.Server.Router.Helpers.html#live_url/5","title":"Surface.Catalogue.Server.Router.Helpers.live_url/5","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"Surface.Catalogue.Server.Router.Helpers.html#path/2","title":"Surface.Catalogue.Server.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"Surface.Catalogue.Server.Router.Helpers.html#static_integrity/2","title":"Surface.Catalogue.Server.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"Surface.Catalogue.Server.Router.Helpers.html#static_path/2","title":"Surface.Catalogue.Server.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"Surface.Catalogue.Server.Router.Helpers.html#static_url/2","title":"Surface.Catalogue.Server.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"Surface.Catalogue.Server.Router.Helpers.html#url/1","title":"Surface.Catalogue.Server.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.html","title":"Bonfire.Editor.Ck","type":"module"},{"doc":"Properties current_user :any field_name :string content_placeholder :string textarea_class :string","ref":"Bonfire.Editor.Ck.Bubble.html","title":"Bonfire.Editor.Ck.Bubble","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Editor.Ck.Bubble.html#render/1","title":"Bonfire.Editor.Ck.Bubble.render/1","type":"function"},{"doc":"Properties current_user :any field_name :string content_placeholder :string","ref":"Bonfire.Editor.Ck.TextArea.html","title":"Bonfire.Editor.Ck.TextArea","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Editor.Ck.TextArea.html#render/1","title":"Bonfire.Editor.Ck.TextArea.render/1","type":"function"},{"doc":"Bonfire - a place your community is happy to call home. Self-host your online community and shape your experience at the most granular level: add and remove features, change behaviours and appearance, tune, swap or turn off algorithms. You are in total control. Empower your community with tools to perform social, economic and political activities. Create safe and private spaces, and connect with the fediverse on your own terms. Flavours This repo includes configurations to run two main flavours of Bonfire you can choose from: Classic for basic social networking Cooperation with a bunch more extensions and features As well as app flavours being built by others, including: Haha Academy by haha.academy Reflow by reflowproject.eu and dyne.org","ref":"readme.html","title":"Bonfire","type":"extras"},{"doc":"Website Set up an instance Hacking on Bonfire Code reference Community chat","ref":"readme.html#documentation","title":"Bonfire - Documentation","type":"extras"},{"doc":"Copyright (c) 2021 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"readme.html#copyright-and-license","title":"Bonfire - Copyright and License","type":"extras"},{"doc":"These instructions are for hacking on Bonfire. If you wish to deploy in production, please refer to our Deployment Guide ! Hello, potential contributor! :-) This is a work in progress guide to getting up and running as a developer. Please ask questions in the issue tracker if something is not clear. Happy hacking!","ref":"hacking.html","title":"Development guide","type":"extras"},{"doc":"There are three main options depending on your needs and preferences. Either way, you need to first clone this repository and change into the directory and then do some configuration: $ git clone https://github.com/bonfire-networks/bonfire-app.git bonfire $ cd bonfire Configuration The first thing to do is choosing what flavour of Bonfire you want to hack on (the default is classic ), as each flavour has its own config. For example if you want to run the cooperation flavour: export FLAVOUR=cooperation Once you've picked a flavour, run this command to initialise some default config (.env files which won't be checked into git): make pre-config Edit the config (especially the secrets) for the current flavour in these files: config/dev/secrets.env config/dev/public.env Option A - the entry way (fully managed via docker-compose, recommended when you're first exploring) Dependencies: make Recent versions of Docker &amp; docker-compose Make sure you've edited your .env files (see above) before getting started and proceed to Hello world! Option B - the easy way (with docker-managed database &amp; search index, recommended for active development) Dependencies: make Recent versions of Elixir (1.12+) and OTP/erlang (24+) Recent versions of Rust and Cargo pnpm Recent versions of Docker &amp; docker-compose Set an environment variable to indicate your choice: export WITH_DOCKER=partial Make sure you've edited your .env files (see above) before getting started and proceed to Hello world! Option C - the bare metal (if you don't use docker) Dependencies: make Recent versions of Elixir (1.12+) and OTP/erlang (24+) Recent versions of Rust and Cargo pnpm Postgres 12+ (or rather Postgis if using the bonfire_geolocate extension) Meili Search (optional) You will need to set the relevant environment variables in the .env files (see above) to match your local install of Postgres. If you want search capabilities, you'll also need to setup a Meili server and set the relevant env variables as well. Set an environment variable to indicate your choice: export WITH_DOCKER=no and proceed to Hello world! Option D - the experimental one (dev environment with Nix) run a recent version of Nix or NixOS: https://nixos.wiki enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes add sandbox = false in your nix.conf If you use direnv, just cd in the directory and you will have all the dependencies. If you just have nix, running nix shell . (inside the repository) will set you up with a shell. You will need to create and init the db directory (keeping all your Postgres data inside this directory): create the db directory initdb ./db create the postgres user createuser postgres -ds create the db createdb bonfire_dev start the postgres instance pg_ctl -l &quot;$PGDATA/server.log&quot; start mix deps.get to get elixir dependencies pushd assets &amp;&amp; npm install &amp;&amp; popd to get the frontend dependencies mix ecto.migrate to compile &amp; get an up to date database iex -S mix phx.server to start the server check out the app on localhost:4000 in your browser","ref":"hacking.html#getting-set-up","title":"Development guide - Getting set up","type":"extras"},{"doc":"From a fresh checkout of this repository, this command will fetch the app's dependencies and setup the database (the same commands apply for all three options above): make setup You should then be able to run the app with: make dev See the make commands below for more things you may want to do.","ref":"hacking.html#hello-world","title":"Development guide - Hello world!","type":"extras"},{"doc":"By default, the back-end listens on port 4000 (TCP), so you can access it on http://localhost:4000/ If you haven't set up transactional emails, while in development, you will see a signup confirmation path appear in the iex console. Note that the first account to be registered is automatically an instance admin.","ref":"hacking.html#onboarding","title":"Development guide - Onboarding","type":"extras"},{"doc":"The code is somewhat documented inline. You can generate HTML docs (using Exdoc ) by running mix docs .","ref":"hacking.html#documentation","title":"Development guide - Documentation","type":"extras"},{"doc":"messctl is a little utility for programmatically updating the .deps files from which the final elixir dependencies list is compiled by the mess script. The only use of it is in the dep-* tasks of the Makefile. It is used by some of the project developers and the build does not rely on it. ./forks/ is used to hack on local copies of dependencies. You can clone a dependency from its git repo (like a bonfire extension) and use the local version during development, eg: make dep.clone.local dep=bonfire_me repo=https://github.com/bonfire-networks/bonfire_me You can migrate the DB when the app is running (useful in a release): Bonfire.Repo.ReleaseTasks.migrate Usage under Windows (MSYS or CYGWIN) If you plan on using the Makefile (its rather handy), you must have symlinks enabled. You must enable developer mode, and set core.symlink = true , see link.","ref":"hacking.html#additional-information","title":"Development guide - Additional information","type":"extras"},{"doc":"Run make followed by any of these commands when appropriate rather than directly using the equivalent commands like mix , docker , docker-compose , etc. For example, make setup will get you started, and make dev will run the app. You can first set an env variable to control which mode these commands will assume you're using. Here are your options: WITH_DOCKER=total : use docker for everything (default) WITH_DOCKER=partial : use docker for services like the DB WITH_DOCKER=easy : use docker for services like the DB &amp; compiled utilities like messctl WITH_DOCKER=no : please no make help Makefile commands help * * ( run this to get more up - to - date commands and help information than available in this document ) * * make mix ~ help Help info for elixir &#39;s mix commands make env.exports Display the vars from dotenv files that you need to load in your environment make setup First run - prepare environment and dependencies make dev Run the app in development make dev.bg Run the app in dev mode, as a background service make db.reset Reset the DB (caution: this means DATA LOSS) make db.rollback Rollback previous DB migration (caution: this means DATA LOSS) make db.rollback.all Rollback ALL DB migrations (caution: this means DATA LOSS) make update Update the app and all dependencies/extensions/forks, and run migrations make update.app Update the app and Bonfire extensions in ./deps make update.deps.bonfire Update to the latest Bonfire extensions in ./deps make update.deps.all Update evey single dependency (use with caution) make update.dep~% Update a specify dep (eg. `make update.dep~pointers`) make update.forks Pull the latest commits from all ./forks make deps.get Fetch locked version of non-forked deps make dep.clone.local Clone a git dep and use the local version, eg: `make dep.clone.local dep=bonfire_me repo=https://github.com/bonfire-networks/bonfire_me` make deps.clone.local.all Clone all bonfire deps / extensions make dep.go.local~% Switch to using a local path, eg: make dep.go.local~pointers make dep.go.local.path Switch to using a local path, specifying the path, eg: make dep.go.local dep=pointers path=./libs/pointers make dep.go.git Switch to using a git repo, eg: make dep.go.git dep=pointers repo=https://github.com/bonfire-networks/pointers (specifying the repo is optional if previously specified) make dep.go.hex Switch to using a library from hex.pm, eg: make dep.go.hex dep=pointers version=&quot;~&gt; 0.2&quot; (specifying the version is optional if previously specified) make dep.hex~% add/enable/disable/delete a hex dep with messctl command, eg: `make dep.hex.enable dep=pointers version=&quot;~&gt; 0.2&quot; make dep.git~% add/enable/disable/delete a git dep with messctl command, eg: `make dep.hex.enable dep=pointers repo=https://github.com/bonfire-networks/pointers#main make dep.local~% add/enable/disable/delete a local dep with messctl command, eg: `make dep.hex.enable dep=pointers path=./libs/pointers make messctl~% Utility to manage the deps in deps.hex, deps.git, and deps.path (eg. `make messctl~help`) make contrib.forks Push all changes to the app and extensions in ./forks make contrib.release Push all changes to the app and extensions in ./forks, increment the app version number, and push a new version/release make contrib.app.up Update ./deps and push all changes to the app make contrib.app.release Update ./deps, increment the app version number and push make git.forks.add Run the git add command on each fork make git.forks~% Run a git command on each fork (eg. `make git.forks~pull` pulls the latest version of all local deps from its git remote make test Run tests. You can also run only specific tests, eg: `make test only=forks/bonfire_social/test` make test.stale Run only stale tests make test.remote Run tests (ignoring changes in local forks) make test.watch Run stale tests, and wait for changes to any module&#39; s code , and re - run affected tests make test . db . reset Create or reset the test DB make rel . build Build the Docker image using previous cache make rel . tag . latest Add latest tag to last build make rel . push Add latest tag to last build and push to Docker Hub make rel . run Run the app in Docker &amp; starts a new ` iex ` console make rel . run . bg Run the app in Docker , and keep running in the background make rel . stop Run the app in Docker , and keep running in the background make rel . shell Runs a simple shell inside of the container , useful to explore the image make services Start background docker services ( eg . db and search backends ) . This is automatically done for you if using Docker . make build Build the docker image make cmd ~ % Run a specific command in the container , eg : ` make cmd - messclt ` or ` make cmd ~ time ` or ` make cmd ~ echo args = hello ` make shell Open the shell of the Docker web container , in dev mode make mix ~ % Run a specific mix command , eg : ` make mix ~ deps . get ` or ` make mix ~ deps . update args = pointers ` make mix . remote ~ % Run a specific mix command , while ignoring any deps cloned into . / forks , eg : ` make mix ~ deps . get ` or ` make mix ~ deps . update args = pointers ` make deps . git . fix Run a git command on each dep , to ignore chmod changes make git . merge ~ % Draft - merge another branch , eg ` make git - merge - with - valueflows - api ` to merge branch ` with - valueflows - api ` into the current one make git . conflicts Find any git conflicts in . / forks","ref":"hacking.html#make-commands","title":"Development guide - Make commands","type":"extras"},{"doc":"EACCES Permissions Error If you get a permissions error when following any of the steps, run the following command and it should be fixed: cd bonfire &amp;&amp; sudo chown -R yourusername:yourusername . Note that the command should be modified so your shell is pointing to wherever you have bonfire installed. If you are already in the bonfire directory then you only need to worry about running the chown portion of the command. Unable to access Postgres database If you are getting any :nxdomain errors, check if you have any firewalls that may be blocking the port on your system. For example, if you are running UFW (a lot of Linux distros do), run the following command to allow access to port 4000: sudo ufw allow 4000 (Mix) Package fetch failed Example: ** (Mix) Package fetch failed and no cached copy available (https://repo.hex.pm/tarballs/distillery-2.0.12.tar) In this case, distillery (as an example of a dependency) made a new release and retired the old release from hex. The new version ( 2.0.14 ) is quite close to the version we were depending on ( 2.0.12 ), so we chose to upgrade: mix deps.update distillery This respects the version bounds in mix.exs ( ~&gt; 2.0 ), so increment that if required. (DBConnection.ConnectionError) tcp recv: closed Example: ** (DBConnection.ConnectionError) tcp recv: closed (the connection was closed by the pool, possibly due to a timeout or because the pool has been terminated) In this case, the seeds were unable to complete because a query took too long to execute on your machine. You can configure the timeout to be larger in the dev environment: Open config/dev.exs in your editor. Find the database configuration (search for Bonfire.Repo ). Add timeout: 60_000 to the list of options: config :bonfire , Bonfire.Repo , timeout : 60_000 , [ ... ]","ref":"hacking.html#troubleshooting","title":"Development guide - Troubleshooting","type":"extras"},{"doc":"WARNING: Bonfire is still under development and deploying is only recommended for development and testing purposes. These instructions are for setting up Bonfire in production. If you want to run the backend in development, please refer to our Developer Guide !","ref":"deploy.html","title":"Backend Configuration and Deployment","type":"extras"},{"doc":"You must provide a postgresql database for data storage. We require postgres 12 or above (or Postgis). If you are running in a restricted environment such as Amazon RDS, you will need to execute some sql against the database: CREATE EXTENSION IF NOT EXISTS citext ;","ref":"deploy.html#step-0-configure-your-database","title":"Backend Configuration and Deployment - Step 0 - Configure your database","type":"extras"},{"doc":"Clone this repository and change into the directory: $ git clone https://github.com/bonfire-networks/bonfire-app.git bonfire $ cd bonfire The first thing to do is choosing what flavour of Bonfire you want to deploy (the default is classic ), as each flavour has its own Docker image and config. For example if you want to run the cooperation flavour (you may want to use direnv or something similar to persist this): export FLAVOUR=cooperation MIX_ENV=prod Once you've picked a flavour, run this command to initialise some default config (.env files which won't be checked into git): make pre-config Edit the config (especially the secrets) for the current flavour in these files: config/prod/secrets.env config/prod/public.env These are the config keys you should especially pay attention to, in secrets.env: SECRET_KEY_BASE SIGNING_SALT ENCRYPTION_SALT POSTGRES_PASSWORD MEILI_MASTER_KEY You can use make secrets to generate some secrets keys to use. And in public.env: HOSTNAME PUBLIC_PORT Further information on config The app needs some environment variables to be configured in order to work. The easy way to manage that is whit the make commands which take care of loading the environment for you. In the ${FLAVOUR_PATH}/config/ (depending on which flavour you choose to run) directory of the codebase, there are following default config files: config.exs : default base configuration, which itself loads many other config files, such as one for each installed Bonfire extension. dev.exs : default extra configuration for MIX_ENV=dev prod.exs : default extra configuration for MIX_ENV=prod runtime.exs : extra configuration which is loaded at runtime (vs the others which are only loaded once at compile time, i.e. when you build a release) bonfire_*.exs : configs specific to different extensions, which are automatically imported by config.exs You should not have to modify the files above. Instead, overload any settings from the above files using env variables (a list of which can be found in the file ${FLAVOUR_PATH}/config/templates/public.env and ${FLAVOUR_PATH}/config/templates/secrets.env in this same repository, both in the main and release branches). MAIL_DOMAIN and MAIL_KEY are needed to configure transactional email, you can for example sign up at Mailgun and then configure the domain name and key.","ref":"deploy.html#step-1-download-and-configure-the-app","title":"Backend Configuration and Deployment - Step 1 - Download and configure the app","type":"extras"},{"doc":"Option A - Install using Docker comtainers (recommended) The easiest way to launch the docker image is using the make commands. The docker-compose.release.yml uses config/prod/public.env and config/prod/secrets.env to launch a container with the necessary environment variables along with its dependencies, currently that means an extra postgres container, along with a reverse proxy (Caddy server, which you may want to replace with nginx or whatever you prefer). Install with docker-compose Make sure you have Docker , a recent docker-compose (which supports v3 configs), and make installed: $ docker version Docker version 18.09.1-ce $ docker-compose -v docker-compose version 1.23.2 $ make --version GNU Make 4.2.1 ... Now that your tooling is set up, you have the choice of using pre-built images or building your own. For example if your flavour does not have a prebuilt image on Docker Hub, or if you want to customise any of the extensions, you can build one yourself - see option A2 below. Option A1 - Using pre-built Docker images (recommend to start with) The image entry in docker-compose.release.yml will by default use the image on Docker Hub which corresponds to your chosen flavour (see step 1 above for choosing your flavour). You can see the images available per flavour, version (we currently recommend using the latest tag), and architecture at https://hub.docker.com/r/bonfirenetworks/bonfire/tags Start the docker containers with docker-compose: make rel . run The backend should now be running at http://localhost:4000/ . If that worked, start the app as a daemon next time: make rel . run . bg Docker-related handy commands docker-compose pull to update to the latest release of Bonfire (only if using a Docker Hub image) and other services (Postgres &amp; Meili) make rel.run Run the app in Docker, in the foreground make rel.run.bg Run the app in Docker, and keep running in the background make rel.stop Stop the running release make rel.shell Runs a simple shell inside of the container, useful to explore the image Once in the shell, you can run bin/bonfire with the following commands: Usage: bonfire COMMAND [ARGS] The known commands are: start Starts the system start_iex Starts the system with IEx attached daemon Starts the system as a daemon daemon_iex Starts the system as a daemon with IEx attached eval &quot;EXPR&quot; Executes the given expression on a new, non-booted system rpc &quot;EXPR&quot; Executes the given expression remotely on the running system remote Connects to the running system via a IEx remote shell restart Restarts the running system via a remote command stop Stops the running system via a remote command pid Prints the operating system PID of the running system via a remote command version Prints the release name and version to be booted There are some useful database-related release tasks under Bonfire.Repo.ReleaseTasks. that can be run in an iex console (which you get to with make rel.shell followed by bin/bonfire remote , assuming the app is already running): migrate runs all up migrations rollback(step) roll back to step X rollback_to(version) roll back to a specific version rollback_all rolls back all migrations back to zero (caution: this means loosing all data) For example: iex&gt; Bonfire.Repo.ReleaseTasks.migrate to create your database if it doesn't already exist. Option A2 - Building your own Docker image Dockerfile.release uses the multistage build feature to make the image as small as possible. It generates the OTP release which is later copied into the final image packaged in an Alpine linux container. There is a Makefile with relevant commands (make sure you set the MIX_ENV=prod env first): make rel.build which builds the docker image make rel.tag.latest adds the &quot;latest&quot; tag to your last build, so that it will be used when running make rel.push if you want to push your latest build to Docker Hub Once you've built and tagged your image, you may need to update the image name in docker-compose.release.yml to match (either your local image name if running on the same machine you used for the build, or a remote image on Docker Hub if you pushed it) and then follow the same steps as for option A1. For production, we recommend to set up a CI workflow to automate this, for an example you can look at the one we currently use . Option B - Manual installation (without Docker) Dependencies Postgres (or Postgis) version 12 or newer Build tools Elixir version 1.11.0 with OTP 23 (or newer). If your distribution only has an old version available, check Elixir's install page or use a tool like asdf (run asdf install in this directory). B-1. Building the release Make sure you have erlang and elixir installed (check Dockerfile for what version we're currently using) Run mix deps.get --only prod to install elixir dependencies. Prepare assets with make js.deps.get , make assets.release and mix phx.digest Run mix release to create an elixir release. This will create an executable in your _build/prod/rel/bonfire directory. We will be using the bin/bonfire executable from here on. B-2. Running the release cd _build/prod/rel/bonfire/ Create a database and run the migrations with bin/bonfire eval 'Bonfire.Repo.ReleaseTasks.migrate()' . If you’re using RDS or some other locked down DB, you may need to run CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public; on your database with elevated privileges. You can check if your instance is configured correctly by running it with bin/bonfire start To run the instance as a daemon, use bin/bonfire start daemon . Option C - with Nix This repo is a Flake and includes a Nix module. Here are the detailed steps to deploy it: run a recent version of Nix or NixOS: https://nixos.wiki enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes add sandbox = false in your nix.conf fetch and build the app and dependencies: nix run github:bonfire-networks/bonfire-app start_iex add it as an input to your system flake. add an overlay to make the package available add the required configuration in your system Your flake.nix file would look like the following. Remember to replace myHostName with your actual hostname or however your deployed system is called. { inputs.bonfire.url = &quot;github:happysalada/bonfire-app/main&quot;; outputs = { self, nixpkgs, bonfire }: { overlay = final: prev: with final;{ # a package named bonfire already exists on nixpkgs so we put it under a different name elixirBonfire = bonfire.defaultPackage.x86_64-linux; }; nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem { system = &quot;x86_64-linux&quot;; modules = [ { environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ]; nixpkgs.overlays = [ self.overlay ]; } ./myHostName.nix bonfire.nixosModules.bonfire ]; }; }; } Then your myHostName.nix would look like the following: TODO: add caddy reverse proxy config { config, lib, pkgs, ... }: { services.bonfire = { # you will additionally need to expose bonfire with a reverse proxy, for example caddy port = 4000; package = pkgs.elixirBonfire; dbName = &quot;bonfire&quot;; # the environment should contain a minimum of # SECRET_KEY_BASE # SIGNING_SALT # ENCRYPTION_SALT # RELEASE_COOKIE # have a look into nix/module.nix for more details # the way to deploy secrets is beyond this readme, but I would recommend agenix environmentFile = &quot;/run/secrets/bonfireEnv&quot;; dbSocketDir = &quot;/var/run/postgresql&quot;; }; # this is uniquely for database backup purposes # replace myBackupUserName with the user name that will do the backups # if you want to do backups differently, feel free to remove this part of the config services.postgresql = { ensureDatabases = [ &quot;bonfire&quot; ]; ensureUsers = [{ name = &quot;myBackupUserName&quot;; ensurePermissions = { &quot;DATABASE bonfire&quot; = &quot;ALL PRIVILEGES&quot;; }; }]; }; } Option C with nixos this repo is a flake and includes a nixos module. Here are the detailed steps to deploy it. add it as an input to your system flake. add an overlay to make the package available add the required configuration in your system Your flake.nix file would look like the following. Remember to replace myHostName with your actual hostname or however your deployed system is called. { inputs.bonfire.url = &quot;github:happysalada/bonfire-app/main&quot;; outputs = { self, nixpkgs, bonfire }: { overlay = final: prev: with final;{ # a package named bonfire already exists on nixpkgs so we put it under a different name elixirBonfire = bonfire.defaultPackage.x86_64-linux; }; nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem { system = &quot;x86_64-linux&quot;; modules = [ { environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ]; nixpkgs.overlays = [ self.overlay ]; } ./myHostName.nix bonfire.nixosModules.bonfire ]; }; }; } then in myHostName.nix would look like the following TODO: add the caddy config { config, lib, pkgs, ... }: { services.bonfire = { # you will need to expose bonfire with a reverse proxy, for example caddy port = 4000; package = pkgs.elixirBonfire; dbName = &quot;bonfire&quot;; # the environment should contain a minimum of # SECRET_KEY_BASE # SIGNING_SALT # ENCRYPTION_SALT # RELEASE_COOKIE # have a look into nix/module.nix for more details # the way to deploy secrets is beyond this readme, but I would recommend agenix environmentFile = &quot;/run/secrets/bonfireEnv&quot;; dbSocketDir = &quot;/var/run/postgresql&quot;; }; # this is uniquely for database backup purposes # replace myBackupUserName with the user name that will do the backups # if you want to do backups differently, feel free to remove this part of the config services.postgresql = { ensureDatabases = [ &quot;bonfire&quot; ]; ensureUsers = [{ name = &quot;myBackupUserName&quot;; ensurePermissions = { &quot;DATABASE bonfire&quot; = &quot;ALL PRIVILEGES&quot;; }; }]; }; }","ref":"deploy.html#step-2-install","title":"Backend Configuration and Deployment - Step 2 - Install","type":"extras"},{"doc":"By default, the backend listens on port 4000 (TCP), so you can access it on http://localhost:4000/ (if you are on the same machine). In case of an error it will restart automatically. Once you've signed up, you will automatically be an instance admin if you were the first to register. Step 4 - Adding HTTPS The common and convenient way for adding HTTPS is by using a reverse proxy like Nginx or Caddyserver (the latter of which is bundled as part of the docker-compose setup). Caddyserver and other servers can handle generating and setting up HTTPS certificates automatically, but if you need TLS/SSL certificates for nginx, you can look get some for free with letsencrypt . The simplest way to obtain and install a certificate is to use Certbot. . Depending on your specific setup, certbot may be able to get a certificate and configure your web server automatically.","ref":"deploy.html#step-3-run","title":"Backend Configuration and Deployment - Step 3 - Run","type":"extras"},{"doc":"","ref":"architecture.html","title":"Bonfire Architecture","type":"extras"},{"doc":"Bonfire is an unusual piece of software, developed in an unusual way. It originally started with requests by Moodle users to be able to share and collaborate on educational resources with their peers and has been forked and evolved a lot since then. Hacking on it is actually pretty fun. The codebase has a unique feeling to work with and we've relentlessly refactored to manage the ever-growing complexity that a distributed social networking toolkit implies. That said, it is not easy to understand without context, which is what this document is here to provide.","ref":"architecture.html#hacking","title":"Bonfire Architecture - Hacking","type":"extras"},{"doc":"Feature goals: Flexibility for developers and users. Extreme configurability and extensibility. Integrated federation with the existing fediverse. Operational goals: Easy to set up and run. Light on resources for small deployments. Scalable for large deployments.","ref":"architecture.html#design-decisions","title":"Bonfire Architecture - Design Decisions","type":"extras"},{"doc":"Our main implementation language is Elixir , which is designed for building reliable systems. We use the Phoenix web framework with LiveView and Surface for UI components and views. Some extensions use the Absinthe GraphQL library to expose an API.","ref":"architecture.html#stack","title":"Bonfire Architecture - Stack","type":"extras"},{"doc":"The code is broadly composed of these namespaces: Bonfire.* - Core application logic (very little code). Bonfire.*.* - Bonfire extensions (eg Bonfire.Social.Posts ) containing mostly context modules, APIs, and routes Bonfire.Data.* - Extensions containing database schemas and migrations Bonfire.UI.* - UI component extensions Bonfire.*.*.LiveHandler - Backend logic to handle events in the frontend Bonfire.Editor.* (pluggable text editors, eg. CKEditor for WYSIWYG markdown input) Bonfire.GraphQL.* - Optional GraphQL API Bonfire.Federate.* - Optional Federation hooks ActivityPub - ActivityPub S2S models, logic and various helper modules ActivityPubWeb - ActivityPub S2S REST endpoints, activity ingestion and push federation facilities ValueFlows.* - economic extensions implementing the ValueFlows vocabulary Contexts are were we put any core logic. A context often is circumscribed to providing logic for a particular object type (e. g. Bonfire.Social.Posts implements Bonfire.Data.Social.Post ). All Bonfire objects use an ULID as their primary key. We use the Pointers library (with extra logic in Bonfire.Common.Pointers ) to reference any object by its primary key without knowing what type it is beforehand. This is very useful as it allows for example following or liking many different types of objects (as opposed to say only a user or a post) and this approach allows us to store the context of the like/follow by only storing its primary key (see Bonfire.Data.Social.Follow ) for an example. Context modules usually have one/2 , many/2 , and many_paginated/1 functions for fetching objects, which in turn call a query/2 function. These take a keyword list as filters (and an optional opts argument) allowing objects to be fetched by arbitrary criteria. Examples: Users . one ( username : &quot;bob&quot; ) # Fetching by username Posts . many_paginated ( by : &quot;01E9TQP93S8XFSV2ZATX1FQ528&quot; ) # List a page of posts by its author EconomicResources . many ( deleted : true ) # List any deleted resources Context modules also have functions for creating, updating and deleting objects, as well as hooks for federating or indexing in the search engine. Here is an incomplete sample of some of current extensions and modules: Bonfire.Me.Accounts (for managing and querying local user accounts) Bonfire.Me.Users (for managing and querying both local and remote user identities and profiles) Bonfire.Boundaries (for managing and querying circles, ACLs, permissions...) Bonfire.Social.FeedActivities , Bonfire.Social.Feeds and Bonfire.Social.Activities (for managing and querying activities and feeds) Bonfire.Social.Posts and Bonfire.Social.PostContents (for managing and querying posts) Bonfire.Social.Threads (for managing and querying threads and comments) Bonfire.Social.Flags (for managing and querying flags) Bonfire.Social.Follows (for managing and querying follows) Bonfire.Classify (for managing and querying categories, topics, and the like) Bonfire.Tag (for managing and querying tags and mentions) Bonfire.Geolocate (for managing and querying locations and geographical coordinates) Bonfire.Quantify (for managing and querying units and measures) Additional extensions, libraries, and modules Bonfire.Common and Bonfire.Common.Utils (stuff that gets used everywhere) Bonfire.Application (OTP application) Bonfire.MixProject (Mix application configuration and helpers) Bonfire.Me.Characters (a shared abstraction over users, organisations, categories, and other objects that need to have feeds and behave as an actor in ActivityPub land) Bonfire.Federate.ActivityPub and ActivityPub (ActivityPub integration) Bonfire.Search (local search indexing and search API, powered by Meili) Bonfire.Mailer , Bonfire.Me.Mails , and Bamboo (for rendering and sending emails) Bonfire.Files , Waffle , TreeMagic and TwinkleStar (for managing uploaded content) Bonfire.GraphQL (GraphQL API abstractions) Queery and Bonfire.Repo.Query (Helpers for making queries on the database) Bonfire.Repo (Ecto repository) Flexto (to extend DB schemas in config, especially useful for adding associations) AbsintheClient (for querying the API from within the server) General structure Bonfire app A flavour running Bonfire.Application as supervisor Configs assembled from extensions at flavour/$FLAVOUR/config Phoenix at Bonfire.Web.Endpoint Routes assembled from extensions at Bonfire.Web.Router GraphQL schema assembled from extensions at Bonfire.GraphQL.Schema Database migrations assembled from extensions at flavour/$FLAVOUR/repo/migrations Data seeds assembled from extensions at flavour/$FLAVOUR/repo/seeds Extensions and libraries as listed in flavour/$FLAVOUR/config/deps.* Extensions defining schemas and migrations (usually Bonfire.Data.* ) Schemas Migrations defined as functions in the schema modules in lib/ Migration templates calling those functions in priv/repo/migrations which are then copied into an app flavour's migrations Extensions implementing features or groups of features (eg. Bonfire.Me ) Config template which is then copied into an app flavour's config (eg config/bonfire_me.exs ) Contexts (eg Bonfire.Me.Users ) Sometimes LiveHandlers for handling frontend events in the backend (eg Bonfire.Me.Users.LiveHandler ) Routes (eg Bonfire.Me.Web.Routes ) Controllers and/or Views (eg Bonfire.Me.Web.CreateUserController and Bonfire.Me.Web.CreateUserLive ) API (eg Bonfire.Me.API.GraphQL ), refer to GraphQL API documentation Schemas Resolvers Sometimes Plugs (eg Bonfire.Web.Plugs.UserRequired and Bonfire.Web.LivePlugs.UserRequired ) Other extensions or libraries (eg Pointers or Bonfire.Common which are used by most other extensions)","ref":"architecture.html#code-structure","title":"Bonfire Architecture - Code Structure","type":"extras"},{"doc":"It is said that naming is one of the four hard problems of computer science (along with cache management and off-by-one errors). We don't claim our scheme is the best, but we do strive for consistency. Naming guidelines Module names mostly begin with Bonfire. unless they belong to a more generic library (eg Pointers or ValueFlows ) Everything within an extension begins with the context name and a . (eg Bonfire.Social.Migrations ) Database schemas should be named in the singular (eg Bonfire.Data.Social.Post ) Context modules are named in plural where possible (eg Bonfire.Social.Posts ) Other modules within a context begins with the context name and a . (eg Bonfire.Social.Posts.LiveHandler ) Modules use UpperCamelCase while functions use snake_case Acronyms in module names should be all uppercase (eg Bonfire.Social.APActivities )","ref":"architecture.html#naming","title":"Bonfire Architecture - Naming","type":"extras"},{"doc":"ActivityPub This namespace handles the ActivityPub logic and stores AP activities. It is largely adapted Pleroma code with some modifications, for example merging of the activity and object tables and new actor object abstraction. Also refer to MRF documentation to learn how to rewrite or discard messages. ActivityPub contains the main API and is documented there. ActivityPub.Adapter defines callback functions for the AP library. ActivityPub also contains some functionality that isn't part of the AP spec but is required for federation: ActivityPub.Keys - Generating and handling RSA keys for messagage signing ActivityPub.Signature - Adapter for the HTTPSignature library ActivityPub.WebFinger - Implementation of the WebFinger protocol ActivityPub.HTTP - Module for making HTTP requests (wrapper around tesla) ActivityPub.Instances - Module for storing reachability information about remote instances ActivityPubWeb This namespace contains the AP S2S REST API, the activity ingestion pipeline ( ActivityPubWeb.Transmogrifier ) and the push federation facilities ( ActivityPubWeb.Federator , ActivityPubWeb.Publisher and others). The outgoing federation module is designed in a modular way allowing federating through different protocols in the future. ActivityPub interaction in our application logic The callback functions defined in ActivityPub.Adapter are implemented in Bonfire.ActivityPub.Adapter . Facilities for calling the ActivityPub API are implemented in Bonfire.ActivityPub.Publisher . When implementing federation for a new object type it needs to be implemented both ways: both for outgoing federation in Bonfire.ActivityPub.Publisher and for incoming federation in Bonfire.ActivityPub.Adapter .","ref":"architecture.html#federation-libraries","title":"Bonfire Architecture - Federation libraries","type":"extras"},{"doc":"","ref":"graphql.html","title":"Bonfire GraphQL Guide","type":"extras"},{"doc":"Go to http://your-app-url/api/ to start playing with the GraphQL API. The GraphiQL UI should autocomplete types, queries and mutations for you, and you can also explore the schema there. Let's start with a simple GraphQL thoeretical query: query { greetings(limit: 10) { greeting to { name } } } Let's break this apart: query {} is how you retrieve information from GraphQL. greetings is a field within the query. greetings takes a limit argument, a positive integer. greetings has two fields, greeting and to . to has one field , name . This query is asking for a list of (up to) 10 greetings and the people they are for. Notice that the result of both greetings and to are map/object structures with their own fields and that if the type has multiple fields, we can select more than one field. Here is some possible data we could get returned %{ greetings : [ %{ greeting : &quot;hello&quot; , to : %{ name : &quot;dear reader&quot; } } , # english %{ greeting : &quot;hallo&quot; , to : %{ name : &quot;beste lezer&quot; } } , # dutch ] } Where is the magic? Typically an object type will reside in its own table in the database, so this query is actually querying two tables in one go. In fact, given a supporting schema, you can nest queries arbitrarily and the backend will figure out how to run them. The fact that you can represent arbitrarily complex queries puts quite a lot of pressure on the backend to make it all efficient. This is still a work in progress at this time.","ref":"graphql.html#graphql-introduction","title":"Bonfire GraphQL Guide - GraphQL Introduction","type":"extras"},{"doc":"Every field is filled by a resolver. Let's take our existing query and define a schema for it in Absinthe's query DSL: defmodule MyApp.Schema do # the schema macro language use Absinthe.Schema.Notation # where we will actually resolve the fields alias MyApp.Resolver # Our user object is pretty simple, just a name object :user do field :name , non_null ( :string ) end # This one is slightly more complicated, we have that nested `to` object :greeting do # the easy one field :greeting , non_null ( :string ) # the hard one. `edge` is the term for when we cross an object boundary. field :to , non_null ( :user ) , do : resolve ( &amp; Resolver . to_edge / 3 ) end # something to put our top level queries in, because they&#39;re just fields too! object :queries do field :greetings , non_null ( list_of ( non_null ( :string ) ) ) do arg :limit , :integer # optional resolve &amp; Resolver . greetings / 2 # we need to manually process this one end end end There are a couple of interesting things about this: Sprinklings of not_null to require that values be present (if you don't return them, absinthe will get upset). Only two fields have explicit resolvers. Anything else will default to a map key lookup (which is more often than not what you want). greeting.to_edge has a /3 resolver and queries.greetings a /2 resolver. To understand the last one (and partially the middle one), we must understand how resolution works and what a parent is. The best way of doing that is probably to look at the resolver code: defmodule MyApp.Resolver do # For purposes of this, we will just fake the data out defp greetings_data ( ) do [ %{ greeting : &quot;hello&quot; , to : %{ name : &quot;dear reader&quot; } } , # english %{ greeting : &quot;hallo&quot; , to : %{ name : &quot;beste lezer&quot; } } , # dutch ] end # the /2 resolver takes only arguments (which in this case is just limit) # and an info (which we&#39;ll explain later) def greetings ( %{ limit : limit } , _info ) when is_integer ( limit ) and limit &gt; 0 do { :ok , Enum . take ( greetings_data ( ) , limit ) } # absinthe expects an ok/error tuple end def greetings ( _args , _info ) , do : { :ok , greetings_data ( ) } # no limit # the /3 resolver takes an additional parent argument in first position. # `parent` here will be the `greeting` we are resolving `to` for. def to_edge ( parent , args , info ) , do : Map . get ( parent , :to ) end The keen-eyed amongst you may have noticed I said the default resolver is a map lookup and our to_edge/3 is a map lookup too, so technically we didn't need to write it. But then you wouldn't have an example of a /3 resolver! In most of the app, these will be querying from the database, not looking up in a constant. So for every field, a resolver function is run. It defaults to a map lookup, but you can override it with resolve/1 . It may or may not have arguments. And all absinthe resolvers return an ok/error tuple.","ref":"graphql.html#absinthe-introduction","title":"Bonfire GraphQL Guide - Absinthe Introduction","type":"extras"},{"doc":"","ref":"graphql.html#patterns","title":"Bonfire GraphQL Guide - Patterns","type":"extras"},{"doc":"WARNING: Due to how this app currently handles its configuration, MRF is only usable if you're building your own docker image. The Message Rewrite Facility (MRF) is a subsystem that is implemented as a series of hooks that allows the administrator to rewrite or discard messages. Possible uses include: marking incoming messages with media from a given account or instance as sensitive rejecting messages from a specific instance rejecting reports (flags) from a specific instance removing/unlisting messages from the public timelines removing media from messages sending only public messages to a specific instance The MRF provides user-configurable policies. The default policy is NoOpPolicy , which disables the MRF functionality. Bonfire also includes an easy to use policy called SimplePolicy which maps messages matching certain pre-defined criterion to actions built into the policy module. It is possible to use multiple, active MRF policies at the same time.","ref":"mrf.html","title":"Message Rewrite Facility","type":"extras"},{"doc":"SimplePolicy is capable of handling most common admin tasks. To use SimplePolicy , you must enable it. Do so by adding the following to your :instance config object, so that it looks like this: config :bonfire , :instance , [ ... ] rewrite_policy : ActivityPub.MRF.SimplePolicy Once SimplePolicy is enabled, you can configure various groups in the :mrf_simple config object. These groups are: media_removal : Servers in this group will have media stripped from incoming messages. media_nsfw : Servers in this group will have the #nsfw tag and sensitive setting injected into incoming messages which contain media. reject : Servers in this group will have their messages rejected. report_removal : Servers in this group will have their reports (flags) rejected. Servers should be configured as lists. Example This example will enable SimplePolicy , block media from illegalporn.biz , mark media as NSFW from porn.biz and porn.business , reject messages from spam.com and block reports (flags) from whiny.whiner : config :bonfire , :instance , rewrite_policy : [ ActivityPub.MRF.SimplePolicy ] config :bonfire , :mrf_simple , media_removal : [ &quot;illegalporn.biz&quot; ] , media_nsfw : [ &quot;porn.biz&quot; , &quot;porn.business&quot; ] , reject : [ &quot;spam.com&quot; ] , report_removal : [ &quot;whiny.whiner&quot; ] Use with Care The effects of MRF policies can be very drastic. It is important to use this functionality carefully. Always try to talk to an admin before writing an MRF policy concerning their instance.","ref":"mrf.html#using-simplepolicy","title":"Message Rewrite Facility - Using SimplePolicy","type":"extras"},{"doc":"As discussed above, the MRF system is a modular system that supports pluggable policies. This means that an admin may write a custom MRF policy in Elixir or any other language that runs on the Erlang VM, by specifying the module name in the rewrite_policy config setting. For example, here is a sample policy module which rewrites all messages to &quot;new message content&quot;: # This is a sample MRF policy which rewrites all Notes to have &quot;new message # content.&quot; defmodule Site.RewritePolicy do @behavior ActivityPub.MRF # Catch messages which contain Note objects with actual data to filter. # Capture the object as `object`, the message content as `content` and the # message itself as `message`. @impl true def filter ( % { &quot;type&quot; =&gt; Create &quot;, &quot; object &quot; =&gt; {&quot; type &quot; =&gt; &quot; Note &quot;, &quot; content &quot; =&gt; content} = object} = message) when is_binary(content) do # Subject / CW is stored as summary instead of `name` like other AS2 objects # because of Mastodon doing it that way. summary = object[&quot; summary &quot;] # Message edits go here. content = &quot; new message content &quot; # Assemble the mutated object. object = object |&gt; Map.put(&quot; content &quot;, content) |&gt; Map.put(&quot; summary &quot;, summary) # Assemble the mutated message. message = Map.put(message, &quot; object &quot; , object ) { :ok , message } end # Let all other messages through without modifying them. @impl true def filter ( message ) , do : { :ok , message } end If you save this file as lib/site/mrf/rewrite_policy.ex , it will be included when you next rebuild Bonfire. You can enable it in the configuration like so: config :bonfire , :instance , rewrite_policy : [ ActivityPub.MRF.SimplePolicy , Site.RewritePolicy ]","ref":"mrf.html#writing-your-own-mrf-policy","title":"Message Rewrite Facility - Writing your own MRF Policy","type":"extras"},{"doc":"This app is part of the Bonfire ecosystem and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places","ref":"classic.html","title":"Bonfire Classic","type":"extras"},{"doc":"See the main docs .","ref":"classic.html#more-information","title":"Bonfire Classic - More information","type":"extras"},{"doc":"This app is a flavour of Bonfire and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places Bonfire.Quantify - units &amp; measures Bonfire.ValueFlows - economic activities with ValueFlows Bonfire.ValueFlows.Observe - observation of economic resources Bonfire.API.GraphQL - a GraphQL client API Bonfire.UI.ValueFlows - reusable frontend components for economic activities Bonfire.UI.Coordination - basic coordination UI for projects and communities Bonfire.Kanban - coordination tools with drag-and-drop card UI Bonfire.Breadpub - needs &amp; offers for mutual aid","ref":"cooperation.html","title":"Bonfire Cooperation","type":"extras"},{"doc":"See the main docs .","ref":"cooperation.html#more-information","title":"Bonfire Cooperation - More information","type":"extras"},{"doc":"This app is part of the Bonfire ecosystem and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places","ref":"haha.html","title":"Haha Academy","type":"extras"},{"doc":"See the main docs .","ref":"haha.html#more-information","title":"Haha Academy - More information","type":"extras"},{"doc":"This app is part of the Bonfire and ValueFlows ecosystems and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places Bonfire.Quantify - units &amp; measures Bonfire.ValueFlows - economic activities with ValueFlows Bonfire.ValueFlows.Observe - observation of economic resources Bonfire.API.GraphQL - a GraphQL client API Bonfire.UI.ValueFlows - reusable frontend components for economic activities Bonfire.UI.Reflow - frontend for the Reflow project","ref":"reflow.html","title":"Reflow","type":"extras"},{"doc":"See the main docs .","ref":"reflow.html#more-information","title":"Reflow - More information","type":"extras"},{"doc":"ActivityPub Library for elixir. HEAVY WORK IN PROGRESS, BREAKING API CHANGES EXPECTED","ref":"activity_pub.html","title":"ActivityPub","type":"extras"},{"doc":"Add this library to your dependencies in mix.exs defp deps do [ ... ] { :activity_pub : git , &quot;https://github.com/bonfire-networks/activity_pub.git&quot; , branch : &quot;stable&quot; } # branch can &quot;stable&quot;, or &quot;develop&quot; for the bleeding edge end Create an adapter module (more on that later) and set it in config config :activity_pub , :adapter , MyApp.MyAdapter Set your application repo in config config :activity_pub , :repo , MyApp.Repo Create a new ecto migration and call ActivityPub.Migration.up/0 from it Inject AP routes to your router by adding use ActivityPubWeb.Router to your app's router module Copy the default AP config to your app's confix.exs config :activity_pub , :mrf_simple , media_removal : [ ] , media_nsfw : [ ] , report_removal : [ ] , accept : [ ] , avatar_removal : [ ] , banner_removal : [ ] config :activity_pub , :instance , hostname : &quot;example.com&quot; , federation_publisher_modules : [ ActivityPubWeb.Publisher ] , federation_reachability_timeout_days : 7 , federating : true , rewrite_policy : [ ] config :activity_pub , :http , proxy_url : nil , send_user_agent : true , adapter : [ ssl_options : [ # Workaround for remote server certificate chain issues partial_chain : &amp; :hackney_connect . partial_chain / 1 , # We don&#39;t support TLS v1.3 yet versions : [ :tlsv1 , :&quot;tlsv1.1&quot; , :&quot;tlsv1.2&quot; ] ] ] Change the hostname value in the instance config block to your instance's hostname If you don't already have Oban set up, follow the Oban installation intructions and add the AP queues: config :my_app , Oban , queues : [ federator_incoming : 50 , federator_outgoing : 50 ] Now you should be able to compile and run your app and move over to integration.","ref":"activity_pub.html#installation","title":"ActivityPub - Installation","type":"extras"},{"doc":"Bonfire.Common is an extension for Bonfire that contains: Many common functions in Bonfire.Common.Utils Path and URL generators in Bonfire.Common.URIs Date and time helpers in Bonfire.Common.DateTimes Etc","ref":"bonfire_common.html","title":"Bonfire.Common","type":"extras"},{"doc":"","ref":"bonfire_common.html#handy-commands","title":"Bonfire.Common - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_common.html#copyright-and-license","title":"Bonfire.Common - Copyright and License","type":"extras"},{"doc":"","ref":"bonfire_data_access_control.html","title":"Bonfire.Data.AccessControl","type":"extras"},{"doc":"Copyright (c) 2020 James Laver, bonfire_data_access_control Contributors This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"bonfire_data_access_control.html#copyright-and-license","title":"Bonfire.Data.AccessControl - Copyright and License","type":"extras"},{"doc":"Actor schema.","ref":"bonfire_data_activity_pub.html","title":"Bonfire.Data.ActivityPub","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_activity_pub Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"bonfire_data_activity_pub.html#copyright-and-license","title":"Bonfire.Data.ActivityPub - Copyright and License","type":"extras"},{"doc":"Schemas for accounts, users, etc.","ref":"bonfire_data_identity.html","title":"Bonfire.Data.Identity","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_identity Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"bonfire_data_identity.html#copyright-and-license","title":"Bonfire.Data.Identity - Copyright and License","type":"extras"},{"doc":"Schemas for social activities, posts, feeds, etc","ref":"bonfire_data_social.html","title":"Bonfire.Data.Social","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_social Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"bonfire_data_social.html#copyright-and-license","title":"Bonfire.Data.Social - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Account creation Email verification Authentication User/Profile creation User/Profile switching User Profile Settings","ref":"bonfire_me.html","title":"Bonfire.Me","type":"extras"},{"doc":"","ref":"bonfire_me.html#handy-commands","title":"Bonfire.Me - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_me.html#copyright-and-license","title":"Bonfire.Me - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Posting Following Feeds / Timelines Discussions Boosting Liking Flagging etc","ref":"bonfire_social.html","title":"Bonfire.Social","type":"extras"},{"doc":"","ref":"bonfire_social.html#handy-commands","title":"Bonfire.Social - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_social.html#copyright-and-license","title":"Bonfire.Social - Copyright and License","type":"extras"},{"doc":"An library for Bonfire that contains: Sending email (using Bamboo ) Checking hypothetical email or domain validity","ref":"bonfire_mailer.html","title":"Bonfire.Mailer","type":"extras"},{"doc":"","ref":"bonfire_mailer.html#handy-commands","title":"Bonfire.Mailer - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_mailer.html#copyright-and-license","title":"Bonfire.Mailer - Copyright and License","type":"extras"},{"doc":"hexdocs pointers Ecto's missing universal foreign key One foreign key to rule them all and in the darkness, bind them. -- Gandalf, paraphrased. A means of foreign keying many tables in one field. Designed for highly interlinked data in highly dynamic schemata where tracking all the foreign keys is neither desired nor practical. Note: a universal foreign key is actually a hard problem. Many approaches are on offer with a variety of tradeoffs. You should carefully consider a variety of approaches rather than just blindly adopting the one that fitted our project's needs the best!","ref":"pointers.html","title":"README","type":"extras"},{"doc":"A Table is a record of a table that may be linked to by a pointer. A Pointer is a pointer id and a table id. With these two ingredients, we can construct a means of pointing to any table that has a Table entry. Pointer and Table IDs are both Pointers.ULID , a UUID-like type that combines a millisecond-precision timestamp and some randomness to reduce the likelihood of a clash. It naturally sorts both in binary and text form by time and as far as postgres is concerned, it's a UUID.","ref":"pointers.html#background","title":"README - Background","type":"extras"},{"doc":"Aside from the hex dependency, you will also need to write a simple migration to set up the database before you can start writing your regular migrations: defmodule MyApp.Repo.Migrations.InitPointers do use Ecto.Migration import Pointers.Migration def up ( ) , do : inits ( :up ) def down ( ) , do : inits ( :down ) defp inits ( dir ) do init_pointers_ulid_extra ( dir ) # this one is optional but recommended init_pointers ( dir ) # this one is not optional end end","ref":"pointers.html#installation","title":"README - Installation","type":"extras"},{"doc":"Pointable tables require a unique sentinel ULID to identify them. These must be 26 characters long and in the alphabet of Crockford's Base32 . They should be easy to identify in a printout and might be silly. There is a helper function, synthesise!/1 in Pointers.ULID to assist with this process - give it a 26-character long binary of ascii alphanumerics and it will give you the closest ULID that matches back. Let's look at a simple schema: defmodule MyApp.Greeting do use Pointers.Pointable , otp_app : :my_app , source : &quot;myapp_greeting&quot; , table_id : &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; pointable_schema do field :greeting , :string end end To declare a pointable schema, we start by using Pointers.Pointable , providing the name of our otp application, the source table's name in the database and our chosen sentinel ULID. We then call pointable_schema and define any fields we wish to put directly in the table. For the most part, pointable_schema is like Ecto's schema macro, except you do not provide the table name and let it handle the primary key. If for some reason you wished to turn autogeneration off, you could pass autogenerate: false to the options provided when using Pointers.Pointable . Now let's define the migration for our schema: defmodule MyApp.Repo.Migrations.Greeting do use Ecto.Migration import Pointers.Migration def up ( ) do create_pointable_table ( :greeting , &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; ) do add :greeting , :text , null : false end end def down ( ) do drop_pointable_table ( :greeting , &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; ) end end As you can see, it's pretty similar to defining a regular migration, except you use create_pointable_table and drop_pointable_table . Notice that our sentinel ULID makes an appearance again here. It's very important that these match what we declared in the schema.","ref":"pointers.html#defining-a-pointable-type","title":"README - Defining a Pointable Type","type":"extras"},{"doc":"Ecto does not know anything about our scheme, so unless we specifically want something to reference one of the pointed tables, we typically belongs_to with Pointers.Pointer . The table in which we do this does not itself need to be pointable. defmodule MyApp.Foo do use Ecto.Schema alias Pointers.Pointer # regular ecto table, not pointable! schema &quot;hello&quot; do belongs_to :pointer , Pointer # who knows what it points to? end end You may choose to reference a specific schema rather than Pointer if it will only point to a single table. If you do this, you must ensure that the referenced record exists in that table in the normal way. There may be some performance benefit, we didn't benchmark it. The migration is slightly more complex, we have to decide what type of a pointer it is. Pointers come in three categories: A strong pointer is not nullable and is deleted when the object it points to is deleted. A weak pointer is nullable and is nilified when the object it points to is deleted. An unbreakable pointer will raise when you attempt to delete the object it points to. Type Nullable? On Delete Strong No Cascade Weak Yes Set Null Unbreakable No Raise In this case we will use a strong pointer, because we want it to be deleted if the pointed object is deleted. defmodule MyApp.Repo.Migrations.Hello do use Ecto.Migration import Pointers.Migration def change ( ) do create_if_not_exists table ( :hello ) do add :pointer , strong_pointer ( ) , null : false add :greeting , :text , null : false end end end If you are pointing to a specific table instead of pointer, strong_pointer/1 allows you to pass the name of that module ( strong_pointer/0 calls this with Pointers.Pointer ).","ref":"pointers.html#referencing-pointers","title":"README - Referencing Pointers","type":"extras"},{"doc":"It is common that even though you have a universal foreign key, you will want to issue different queries based upon the type that is being pointed to. For this reason, it is up to you to decide how to perform an onward query. Pointers.schema/1 turns a Pointer into an Ecto schema module name you can switch against. Pointers.plan breaks down a list of Pointers into a map of ids keyed by schema module. It is handy to define some functions in your (non-library) application that can load any type of pointer in given contexts.","ref":"pointers.html#dereferencing-pointers","title":"README - Dereferencing Pointers","type":"extras"},{"doc":"Since Pointer has a table, you can use its table_id field to filter by pointed type. Pointers.Tables.id!/1 (or ids!/1 for a list) can be used to obtain the IDs for a table or tables. Then you run into another problem, that even though you know all of the tables you're working with will have a certain field, you need to know which table they are to work with them! The solution to this is what we are calling 'mixin tables' for convenience. A mixin table has a Pointer primary key along with any other fields you wish to store in this mixin. By moving fields out to mixin tables, you gain knowledge of the table name to which you need to join. An example mixin schema: defmodule My.Creator do use Pointers.Mixin , otp_app : :my_app , source : &quot;creator&quot; mixin_schema do belongs_to :creator , My.User end end Mixin tables are not themselves pointable, so there is no need to specify a table id as when defining a pointable schema. The migration for this is slightly more complicated: defmodule My.Creator.Migration do import Ecto.Migration import Pointers.Migration defp creator_table ( ) , do : My.Creator . __schema__ ( :source ) defp user_table ( ) , do : My.User . __schema__ ( :source ) def migrate_creator ( index_opts \\\\ [ ] ) , do : migrate_creator ( index_opts , direction ( ) ) defp migrate_creator ( index_opts , :up ) do create_mixin_table ( creator_table ( ) ) do add :creator_id , strong_pointer ( user_table ( ) ) , null : false end create_if_not_exists ( unique_index ( creator_table ( ) , [ :creator_id ] , index_opts ) ) end defp migrate_creator ( index_opts , :down ) do drop_if_exists ( unique_index ( creator_table ( ) , [ :creator_id ] , index_opts ) ) drop_mixin_table ( creator_table ( ) ) end end","ref":"pointers.html#querying-pointers","title":"README - Querying Pointers","type":"extras"},{"doc":"The practical result of pointers is that it pushes a certain amount of validation and consistency logic back into elixir land. It is therefore your elixir code's responsibility to ensure that data is inserted into the appropriate mixin tables when inserting a pointable object and to manage deletions as appropriate. When assembling queries with mixin tables, pay careful attention to the type of join you are performing. An inner join is explicitly asking not to be shown objects that do not have a record for that mixin. You quite possibly wanted to left join.","ref":"pointers.html#elixir-based-logic","title":"README - Elixir-based logic","type":"extras"},{"doc":"Every pointable or mixin schema is overrideable with configuration during compilation (this is why using them requires an :otp_app to be specified). For example, we could override Pointers.Table (which is a pointable table) thus: config :pointers , Pointers.Table , source : &quot;my_pointers_table&quot; The table_id is also configurable, but we don't recommend you change it. In addition, all pointable and mixin schemas permit extension with Flexto . See the Flexto docs for more information about how to extend schemas via configuration. You will probably at the very least want to insert some has_one for mixins off your pointables.","ref":"pointers.html#configuration-and-overrides","title":"README - Configuration and overrides","type":"extras"},{"doc":"All solutions to the universal foreign key problem have tradeofs. Here are what we see as the deficiencies in our approach: It forces a ULID on you. This is great for us, but not everyone. ULID exposes a timestamp with millisecond precision. If the time of creation of a resource is sensitive information for your purposes, ULIDs are not going to be suitable for you. Ecto has no knowledge of the specialty of Pointer , e.g. Repo.preload does not work and you need to specify a join condition to join through a pointer. Use our functions. Dereferencing a list of pointers requires a select query per table type that occurs in the input set. Reliance on user attention. You have to follow the instructions correctly to make the system work at all. There is likely some performance impact from postgres not understanding the relationships between the various tables properly. It's hard to gauge and we haven't even tried. These are not likely to change. If you're going to pick this library, do so in the full knowledge of the tradeoffs it makes. Alternatives include (I'm sure you can think of others): Storing the table name in a second column alongside every foreign key. A compound datatype of id and table name. Byte/String manipulation tricks. Evil SQL hacks based upon compile time configuration. While we have our gripes with this approach, once you've gotten the hang of using it, it works out pretty well for most purposes and it's one of the simpler options to work with.","ref":"pointers.html#tradeoffs","title":"README - Tradeoffs","type":"extras"},{"doc":"Docs! Tests! mix pointers.gen.migration.init task to generate an init migration. mix pointers.gen.schema.pointable task to generate a pointable schema. mix pointers.gen.schema.mixin task to generate a mixin schema.","ref":"pointers.html#todo","title":"README - TODO","type":"extras"},{"doc":"Copyright (c) 2020 pointers Contributors Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"pointers.html#copyright-and-license","title":"README - Copyright and License","type":"extras"},{"doc":"hexdocs pointers_ulid A ULID datatype and some postgres support for ULID operations ( min and max functions and aggregates) Includes a maintained fork of ecto-ulid . Also optional definitions for which probably ought to ship with postgres by","ref":"pointers_ulid.html","title":"README","type":"extras"},{"doc":"{ :pointers_ulid , &quot;~&gt; 0.2&quot; }","ref":"pointers_ulid.html#installation","title":"README - Installation","type":"extras"},{"doc":"Copyright (c) 2018 The RealReal, Inc. Copyright (c) 2020 pointers_ulid contributors. Licensed under the terms of the MIT License. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","ref":"pointers_ulid.html#copyright-and-license","title":"README - Copyright and License","type":"extras"},{"doc":"To start your Phoenix server: Install dependencies with mix deps.get Create and migrate your database with mix ecto.setup Start Phoenix endpoint with mix phx.server Now you can visit localhost:4000 from your browser. Ready to run in production? Please check our deployment guides .","ref":"nodeinfo.html","title":"Nodeinfo","type":"extras"},{"doc":"Official website: https://www.phoenixframework.org/ Guides: https://hexdocs.pm/phoenix/overview.html Docs: https://hexdocs.pm/phoenix Forum: https://elixirforum.com/c/phoenix-forum Source: https://github.com/phoenixframework/phoenix","ref":"nodeinfo.html#learn-more","title":"Nodeinfo - Learn more","type":"extras"},{"doc":"Bonfire.UI.Social is an extension that includes the main User Interfaces (both assembled pages and single components) required to have a fully working federated social network app. This extension is meant to be used by other extensions like Bonfire.Social and Bonfire.Me , which both provide logic for the UI to work with, and define the routes and top-level views which in turn embed the components from this extension. It also provides components used by other extensions including: Bonfire.Common , Bonfire.Search , Bonfire.Tag , Bonfire.Boundaries . Stack So far, Bonfire UI extensions are built with the PETALS stack (note that is not a requirement), which means: Phoenix Elixir TailwindCSS Alpine.js LiveView Surface We're currently in the middle of a refactor to convert all components and templates from LiveView to Surface, which is a server-side rendering component library (built on top of Phoenix and LiveView) that inherits a lot of design patterns from popular JS framework like Vue.js and React, while being almost JavaScript-free compared to common SPAs. Scaffolding The relevant folders are: Components : Surface stateless and stateful components. Layout : Main app templates, they include guest, logged or specific view templates (eg. the setting layout) Views : The main pages that are rendered when navigating to a specific route Test : All the unit tests for the specific module. Other resources A blog post that introduces the concept of themeable bonfire apps","ref":"bonfire_ui_social.html","title":"Bonfire.UI.Social","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_ui_social.html#copyright-and-license","title":"Bonfire.UI.Social - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Units Measures","ref":"bonfire_quantify.html","title":"Bonfire.Quantify","type":"extras"},{"doc":"","ref":"bonfire_quantify.html#handy-commands","title":"Bonfire.Quantify - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_quantify.html#copyright-and-license","title":"Bonfire.Quantify - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Geolocation schema Optional GraphQL API for geolocations Geocoding of addresses Reverse geocoding","ref":"bonfire_geolocate.html","title":"Bonfire.Geolocate","type":"extras"},{"doc":"If you want to use the map LiveView component, you will need to npm add leaflet --save --prefix assets/ in your app, and import","ref":"bonfire_geolocate.html#usage","title":"Bonfire.Geolocate - Usage","type":"extras"},{"doc":"","ref":"bonfire_geolocate.html#handy-commands","title":"Bonfire.Geolocate - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_geolocate.html#copyright-and-license","title":"Bonfire.Geolocate - Copyright and License","type":"extras"},{"doc":"ValueFlows is a Bonfire extension that implements ValueFlows for federated networks to conduct economic activities. Implemented so far: Intent Proposal Economic Event Types of Action Resource Specification Economic Resource Process Specification Process Claim (WIP) Value Calculations (WIP) As well as an optional GraphQL API for all of the above...","ref":"bonfire_valueflows.html","title":"ValueFlows","type":"extras"},{"doc":"","ref":"bonfire_valueflows.html#handy-commands","title":"ValueFlows - Handy commands","type":"extras"},{"doc":"Copyright (c) 2021 ValueFlows, CommonsPub, Reflow &amp; Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_valueflows.html#copyright-and-license","title":"ValueFlows - Copyright and License","type":"extras"},{"doc":"An library for Bonfire that contains: GraphQL API utilities","ref":"bonfire_api_graphql.html","title":"Bonfire.API.GraphQL","type":"extras"},{"doc":"","ref":"bonfire_api_graphql.html#handy-commands","title":"Bonfire.API.GraphQL - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_api_graphql.html#copyright-and-license","title":"Bonfire.API.GraphQL - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: UI components and views for ValueFlows","ref":"bonfire_ui_valueflows.html","title":"Bonfire.UI.ValueFlows","type":"extras"},{"doc":"","ref":"bonfire_ui_valueflows.html#handy-commands","title":"Bonfire.UI.ValueFlows - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_ui_valueflows.html#copyright-and-license","title":"Bonfire.UI.ValueFlows - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: UI components and views for a kanban app","ref":"bonfire_ui_kanban.html","title":"Bonfire.UI.Kanban","type":"extras"},{"doc":"","ref":"bonfire_ui_kanban.html#handy-commands","title":"Bonfire.UI.Kanban - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_ui_kanban.html#copyright-and-license","title":"Bonfire.UI.Kanban - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: UI components and views for ValueFlows","ref":"bonfire_ui_coordination.html","title":"Bonfire.UI.Coordination","type":"extras"},{"doc":"","ref":"bonfire_ui_coordination.html#handy-commands","title":"Bonfire.UI.Coordination - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_ui_coordination.html#copyright-and-license","title":"Bonfire.UI.Coordination - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: UI components and views for ValueFlows","ref":"bonfire_breadpub.html","title":"Bonfire.Breadpub","type":"extras"},{"doc":"","ref":"bonfire_breadpub.html#handy-commands","title":"Bonfire.Breadpub - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_breadpub.html#copyright-and-license","title":"Bonfire.Breadpub - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: UI components and views for the Bonfire website Showing milestones and issues from github (requres a personal access token in config)","ref":"bonfire_website.html","title":"Bonfire.Website","type":"extras"},{"doc":"","ref":"bonfire_website.html#handy-commands","title":"Bonfire.Website - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_website.html#copyright-and-license","title":"Bonfire.Website - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Tagging posts or other things (i.e. with a Category from Bonfire.Classify or a location from Bonfire.Geolocate) @ mentions (WIP) Hashtags (WIP)","ref":"bonfire_tag.html","title":"Bonfire.Tag","type":"extras"},{"doc":"","ref":"bonfire_tag.html#handy-commands","title":"Bonfire.Tag - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_tag.html#copyright-and-license","title":"Bonfire.Tag - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Defining categories/topics Defining relationships (parent or related) between categories to create taxonomies Use Bonfire.Tag if you want to tag/classify posts or other objects with these categories/topics.","ref":"bonfire_classify.html","title":"Bonfire.Classify","type":"extras"},{"doc":"","ref":"bonfire_classify.html#handy-commands","title":"Bonfire.Classify - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_classify.html#copyright-and-license","title":"Bonfire.Classify - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire to handle: Search indexing Ultra-fast search LiveView search UI You can implement adapters for your prefered search backend. Currently adapters are included for: Meili Search","ref":"bonfire_search.html","title":"Bonfire.Search","type":"extras"},{"doc":"This extension is meant to be used inside of a Bonfire app, so please refer to the main repo at: https://github.com/bonfire-networks/bonfire-app","ref":"bonfire_search.html#development-deployment-documentation","title":"Bonfire.Search - Development &amp; Deployment Documentation","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_search.html#copyright-and-license","title":"Bonfire.Search - Copyright and License","type":"extras"},{"doc":"","ref":"bonfire_data_shared_user.html","title":"Bonfire.Data.SharedUser","type":"extras"},{"doc":"Copyright ( c ) 2020 Bonfire Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"bonfire_data_shared_user.html#copyright-and-license","title":"Bonfire.Data.SharedUser - Copyright and License","type":"extras"},{"doc":"An extension for ValueFlows on Bonfire that handles: Observations with measurements with other phenomena","ref":"bonfire_valueflows_observe.html","title":"Bonfire.ValueFlows.Observe","type":"extras"},{"doc":"","ref":"bonfire_valueflows_observe.html#handy-commands","title":"Bonfire.ValueFlows.Observe - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire and ValueFlows Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_valueflows_observe.html#copyright-and-license","title":"Bonfire.ValueFlows.Observe - Copyright and License","type":"extras"},{"doc":"Elixir library to perform server-side queries on a local Absinthe-based GraphQL API. WIP adaption of Absinthe.Phoenix.Controller to be used with LiveView. Usage: defmodule MyApp.Web.WidgetsLive do use MyApp.Web , :live_view use AbsintheClient , schema : Bonfire.GraphQL.Schema , action : [ mode : :internal ] def mount ( params , session , socket ) do widgets = awesome_widgets ( socket ) IO . inspect ( widgets ) { :ok , socket |&gt; assign ( widgets : widgets ) } end # notice we use snakecase rather than camelcase @graphql &quot;&quot;&quot; { awesome_widgets } &quot;&quot;&quot; def awesome_widgets ( socket ) , do : liveql ( socket , :awesome_widgets ) end","ref":"absinthe_client.html","title":"AbsintheClient","type":"extras"},{"doc":"See LICENSE.md .","ref":"absinthe_client.html#license","title":"AbsintheClient - License","type":"extras"},{"doc":"hexdocs Flexto Configuration-driven Ecto Schemas.","ref":"flexto.html","title":"README","type":"extras"},{"doc":"Example Schema: defmodule My.Schema do use Ecto.Schema import Flexto , only : [ flex_schema : 1 ] schema &quot;my_table&quot; do field :name , :string # just normal schema things flex_schema ( :my_app ) # boom! give me the stuff end end Example configuration config :my_app , My.Schema , belongs_to : [ foo : Foo , # belongs_to :foo, Foo bar : { Bar , type : :integer } , # belongs_to :bar, Bar, type: :integer ] , field : [ foo : :string , # field :foo, :string bar : { :integer , default : 4 } , # field :foo, :integer, default: 4 ] , has_one : [ foo : Foo , # has_one :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_one :bar, Bar, foreign_key: :the_bar_id ] has_many : [ foo : Foo , # has_many :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_many :bar, Bar, foreign_key: :the_bar_id ] many_to_many : [ foo : Foo , # many_to_many :foo, Foo bar : { Bar , join_through : FooBar } , # many_to_many :bar, Bar, :join_through: FooBar ] This one won't work very well because we define foo and bar 5 times each, but I think you get the point. Reading of configuration is done during compile time. The relations will be baked in during compilation, thus: Do not expect this to work in release config. You will need to rebuild all dependencies which use this macro when you change their configuration.","ref":"flexto.html#usage","title":"README - Usage","type":"extras"},{"doc":"Copyright (c) 2020 Flexto Contributors Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"flexto.html#copyright-and-license","title":"README - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Extensible/configurable tools for translating Bonfire data to/from ActivityStreams Bonfire Adapter for the ActivityPub federation library","ref":"bonfire_federate_activitypub.html","title":"Bonfire.Federate.ActivityPub","type":"extras"},{"doc":"If you want to use the map LiveView component, you will need to npm add leaflet --save --prefix assets/ in your app, and import","ref":"bonfire_federate_activitypub.html#usage","title":"Bonfire.Federate.ActivityPub - Usage","type":"extras"},{"doc":"","ref":"bonfire_federate_activitypub.html#handy-commands","title":"Bonfire.Federate.ActivityPub - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"bonfire_federate_activitypub.html#copyright-and-license","title":"Bonfire.Federate.ActivityPub - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Circles Verbs Accesses ACLs Grants Queries with healthy boundaries","ref":"bonfire_boundaries.html","title":"Bonfire.Boundaries","type":"extras"},{"doc":"","ref":"bonfire_boundaries.html#handy-commands","title":"Bonfire.Boundaries - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"bonfire_boundaries.html#copyright-and-license","title":"Bonfire.Boundaries - Copyright and License","type":"extras"},{"doc":"File management for bonfire apps. Bonfire Files wraps waffle a file management library, adding support for media type checking using magic bytes inside of files, along with creating a pointable table for storage of file data.","ref":"bonfire_files.html","title":"Bonfire.Files","type":"extras"},{"doc":"","ref":"bonfire_files.html#configuration","title":"Bonfire.Files - Configuration","type":"extras"},{"doc":"Generate docs More tests","ref":"bonfire_files.html#todo-s","title":"Bonfire.Files - TODO's","type":"extras"},{"doc":"Configuration-driven plug routers. &lt; ! -- ## Installation --&gt; &lt; ! -- If [ available in Hex ] ( https :// hex . pm / docs / publish ) , the package can be installed -- &gt; &lt; ! -- by adding ` voodoo ` to your list of dependencies in ` mix . exs ` : -- &gt; &lt; ! -- ` ` ` elixir -- &gt; &lt; ! -- def deps do -- &gt; &lt; ! -- [ -- &gt; &lt; ! -- { :voodoo , &quot;~&gt; 0.1.0&quot; } -- &gt; &lt; ! -- ] -- &gt; &lt; ! -- end -- &gt; &lt; ! -- ` ` ` -- &gt; &lt; ! -- Documentation can be generated with [ ExDoc ] ( https :// github . com / elixir - lang / ex_doc ) -- &gt; &lt; ! -- and published on [ HexDocs ] ( https :// hexdocs . pm ) . Once published , the docs can -- &gt; &lt; ! -- be found at [ https :// hexdocs . pm / voodoo ] ( https :// hexdocs . pm / voodoo ) . -- &gt;","ref":"voodoo.html","title":"Voodoo","type":"extras"},{"doc":"Helpers to make writing ecto queries more pleasant and the code shorter Usage You can create queries from filter parameters, for example: EctoShorts . filter ( User , %{ id : 5 } ) is the same as: from u in User , where : id == 5 This allows for filters to be constructed from data such as: EctoShorts . filter ( User , %{ favorite_food : &quot;curry&quot; , age : %{ gte : 18 , lte : 50 } , name : %{ ilike : &quot;steven&quot; } , preload : [ :address ] , last : 5 } ) which would be equivalent to: from u in User , preload : [ :address ] , limit : 5 , where : u . favorite_food == &quot;curry&quot; and u . age &gt;= 18 and u . age &lt;= 50 and ilike ( u . name , &quot;%steven%&quot; ) You are also able to filter on any natural field of a schema, as well as use: gte/gt lte/lt like/ilike is_nil/not(is_nil) For example: EctoShorts . filter ( User , %{ name : %{ ilike : &quot;steve&quot; } } ) EctoShorts . filter ( User , %{ name : &quot;Steven&quot; , %{ age : %{ gte : 18 , lte : 30 } } } ) EctoShorts . filter ( User , %{ is_banned : %{ != : nil } } ) EctoShorts . filter ( User , %{ is_banned : %{ == : nil } } ) my_query = EctoShorts . filter ( User , %{ first_name : &quot;Daft&quot; } ) EctoShorts . filter ( my_query , %{ last_name : &quot;Punk&quot; } ) List of common filters preload - Preloads fields onto the query results start_date - Query for items inserted after this date end_date - Query for items inserted before this date before - Get items with IDs before this value after - Get items with IDs after this value ids - Get items with a list of ids first - Gets the first n items last - Gets the last n items limit - Gets the first n items offset - Offsets limit by n items search - Warning: This requires schemas using this to have a &amp;by_search(query, val) function join_preload - WIP: Joins an associations and preloads its fields onto the query results (using only one query)","ref":"ecto_shorts.html","title":"EctoShorts","type":"extras"},{"doc":"MIT Copyright 2020 Mika Kalathil Copyright 2021 Bonfire contributors","ref":"ecto_shorts.html#license","title":"EctoShorts - License","type":"extras"},{"doc":"Some helpers to sparkle on top of Ecto to better join + preload associations. JoinPreload ReusableJoin","ref":"ecto_sparkles.html","title":"Ecto Sparkles","type":"extras"},{"doc":"The join_preload macro tells Ecto to perform a join and preload of (up to 5 nested levels of) associations. By default, Ecto preloads associations using a separate query for each association, which can degrade performance. You could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see examples below). Examples using just Ecto query |&gt; join ( :left , [ o , activity : activity ] , assoc ( :object ) , as : :object ) |&gt; preload ( [ l , activity : activity , object : object ] , activity : { activity , [ object : object ] } ) Ecto requires calling Query.join/4 , Query.assoc/3 and Query.preload/2 . Here's another example: Invoice |&gt; join ( :left , [ i ] , assoc ( i , :customer ) , as : :customer ) |&gt; join ( :left , [ i ] , assoc ( i , :lines ) , as : :lines ) |&gt; preload ( [ lines : v , customers : c ] , lines : v , customer : c ) |&gt; Repo . all ( )","ref":"ecto_sparkles.html#joinpreload-documentation","title":"Ecto Sparkles - JoinPreload Documentation","type":"extras"},{"doc":"With JoinPreload , you can accomplish this with just one line of code. query |&gt; join_preload ( [ :activity , :object ] ) Invoice |&gt; join_preload ( :customer ) |&gt; join_preload ( :lines ) |&gt; Repo . all ( ) As a bonus, join_preload automatically makes use of reusable_join so calling it multiple times for the same association has no ill effects.","ref":"ecto_sparkles.html#example-using-joinpreload","title":"Ecto Sparkles - Example using JoinPreload","type":"extras"},{"doc":"The reusable_join macro is similar to Ecto.Query.join/{4,5} , but can be called multiple times with the same alias. Note that only the first join operation is performed, the subsequent ones that use the same alias are just ignored. Also note that because of this behaviour, its mandatory to specify an alias when using this function. This is helpful when you need to perform a join while building queries one filter at a time, because the same filter could be used multiple times or you could have multiple filters that require the same join, which poses a problem with how the filter/3 callback work, as you need to return a dynamic with the filtering, which means that the join must have an alias, and by default Ecto raises an error when you add multiple joins with the same alias. To solve this, it is recommended to use this macro instead of the default Ecto.Query.join/{4,5} , in which case there will be only one join in the query that can be reused by multiple filters. Creating reusable joins query |&gt; reusable_join ( :left , [ t1 ] , t2 in &quot;other_table&quot; , on : t1 . id == t2 . id , as : :other_a ) |&gt; reusable_join ( :left , [ t1 ] , t2 in &quot;other_table&quot; , on : t1 . id == t2 . id , as : :other_b )","ref":"ecto_sparkles.html#reusablejoin-documentation","title":"Ecto Sparkles - ReusableJoin Documentation","type":"extras"},{"doc":"Copyright (c) 2021 Bonfire Copyright (c) 2020 Up Learn Copyright (c) 2019 Joshua Nussbaum JoinPreload was orginally forked from Ecto.Preloader , licensed under WTFPL) ReusableJoin was originally forked from QueryElf , licensed under Apache License Version 2.0","ref":"ecto_sparkles.html#copyright","title":"Ecto Sparkles - Copyright","type":"extras"},{"doc":"Small lib for converting emoticons and emoji names to emoji characters: Emote . convert_text ( &quot;my emoji game is :fire: ;-)&quot; ) # &gt; &quot;my emoji game is 🔥 😉&quot; There's known limitations: Emojis combined together don't work, ex.: &quot;:woo:pile_of_poo:hoo:&quot; would not convert.","ref":"emote.html","title":"Emote","type":"extras"},{"doc":"WTFPL, as originally forked from https://github.com/danigulyas/smile","ref":"emote.html#license","title":"Emote - License","type":"extras"},{"doc":"Cursor based pagination for Elixir Ecto . Documentation","ref":"paginator.html","title":"Paginator","type":"extras"},{"doc":"There are several ways to implement pagination in a project and they all have pros and cons depending on your situation. Limit-offset This is the easiest method to use and implement: you just have to set LIMIT and OFFSET on your queries and the database will return records based on this two parameters. Unfortunately, it has two major drawbacks: Inconsistent results: if the dataset changes while you are querying, the results in the page will shift and your user might end seeing records they have already seen and missing new ones. Inefficiency: OFFSET N instructs the database to skip the first N results of a query. However, the database must still fetch these rows from disk and order them before it can returns the ones requested. If the dataset you are querying is large this will result in significant slowdowns. Cursor-based (a.k.a keyset pagination) This method relies on opaque cursor to figure out where to start selecting records. It is more performant than LIMIT-OFFSET because it can filter records without traversing all of them. It's also consistent, any insertions/deletions before the current page will leave results unaffected. It has some limitations though: for instance you can't jump directly to a specific page. This may not be an issue for an API or if you use infinite scrolling on your website. Learn more http://use-the-index-luke.com/no-offset http://use-the-index-luke.com/sql/partial-results/fetch-next-page https://www.citusdata.com/blog/2016/03/30/five-ways-to-paginate/ https://developer.twitter.com/en/docs/tweets/timelines/guides/working-with-timelines","ref":"paginator.html#why","title":"Paginator - Why?","type":"extras"},{"doc":"defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app , adapter : Ecto.Adapters.Postgres use Paginator end query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] ) page = MyApp.Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # `page.edges` contains all the entries for this page. # `page.page_info` contains the meta-data associated with this page (cursors, limit, total count)","ref":"paginator.html#getting-started","title":"Paginator - Getting started","type":"extras"},{"doc":"Add paginator to your list of dependencies in mix.exs : def deps do [ { :paginator , &quot;~&gt; 1.0.4&quot; } ] end","ref":"paginator.html#install","title":"Paginator - Install","type":"extras"},{"doc":"Add Paginator to your repo. defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app , adapter : Ecto.Adapters.Postgres use Paginator end Use the paginate function to paginate your queries. query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] ) # return the first 50 posts %{ edges : edges , page_info : page_info } = Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # assign the `after` cursor to a variable cursor_after = page_info . end_cursor # return the next 50 posts %{ edges : edges , page_info : page_info } = Repo . paginate ( query , after : cursor_after , cursor_fields : [ { :inserted_at , :asc } , { :id , :asc } ] , limit : 50 ) # assign the `before` cursor to a variable cursor_before = page_info . start_cursor # return the previous 50 posts (if no post was created in between it should be the same list as in our first call to `paginate`) %{ edges : edges , page_info : page_info } = Repo . paginate ( query , before : cursor_before , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # return total count # NOTE: this will issue a separate `SELECT COUNT(*) FROM table` query to the database. %{ edges : edges , page_info : page_info } = Repo . paginate ( query , include_total_count : true , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) IO . puts &quot;total count: \#{ page_info . total_count } &quot;","ref":"paginator.html#usage","title":"Paginator - Usage","type":"extras"},{"doc":"Repo.paginate/4 will throw an ArgumentError should it detect an executable term in the cursor parameters passed to it ( before , after ). This is done to protect you from potential side-effects of malicious user input, see [paginator_test.exs](https://github.com/duffelhq/paginator/blob/master/test/paginator_test.exs#L820). ## Indexes If you want to reap all the benefits of this method it is better that you create indexes on the columns you are using as cursor fields. ### Example ```elixir # If your cursor fields are: [:inserted_at, :id] # Add the following in a migration create index(&quot;posts&quot;, [:inserted_at, :id]) ``` ## Caveats * This method requires a deterministic sort order. If the columns you are currently using for sorting don't match that definition, just add any unique column and extend your index accordingly. * You need to add order_by clauses yourself before passing your query to paginate/2 . In the future we might do that for you automatically based on the fields specified in :cursor_fields . * There is an outstanding issue where Postgrex fails to properly builds the query if it includes custom PostgreSQL types. * This library has only be tested with PostgreSQL. ## Documentation Documentation is written into the library, you will find it in the source code, accessible from iex` and of course, it all gets published to hexdocs . ## Contributing ### Running tests Clone the repo and fetch its dependencies: $ git clone https://github.com/duffelhq/paginator.git $ cd paginator $ mix deps.get $ mix test ### Building docs $ mix docs ## LICENSE See LICENSE","ref":"paginator.html#security-considerations","title":"Paginator - Security Considerations","type":"extras"},{"doc":"Various assorted database schemas for: Ranked linked items TODO: move schemas from bonfire_classify and bonfire_tag here?","ref":"bonfire_data_assort.html","title":"Bonfire.Data.Assort","type":"extras"},{"doc":"Copyright ( c ) 2020 Bonfire Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"bonfire_data_assort.html#copyright-and-license","title":"Bonfire.Data.Assort - Copyright and License","type":"extras"},{"doc":"This is mostly a prototype, meant to validate a few ideas to have something similar to https://storybook.js.org/ for Surface .","ref":"surface_catalogue.html","title":"Surface Catalogue","type":"extras"},{"doc":"Add surface_catalogue to your list of dependencies in mix.exs : def deps do [ { :surface_catalogue , &quot;~&gt; 0.2.0&quot; } ] end Update your router.ex configuration: # lib/my_app_web/router.ex use MyAppWeb , :router import Surface.Catalogue.Router ... if Mix . env ( ) == :dev do scope &quot;/&quot; do pipe_through :browser surface_catalogue &quot;/catalogue&quot; end end That's all! Run mix phx.server and access &quot;/catalogue&quot; to see the list of all available components in your project.","ref":"surface_catalogue.html#installation","title":"Surface Catalogue - Installation","type":"extras"},{"doc":"If you want to access examples and playgrounds for components, edit your mix.exs file, adding a new entry for elixirc_paths along with a catalogues function listing the catalogues you want to be loaded: ... def catalogues do [ # Local catalogue &quot;priv/catalogue&quot; , # Dependencies catalogues &quot;deps/surface/priv/catalogue&quot; , &quot;deps/surface_bulma/priv/catalogue&quot; , # External catalogues Path . expand ( &quot;../my_componensts/priv/catalogue&quot; ) , &quot;/Users/johndoe/workspace/other_componensts/priv/catalogue&quot; ] end defp elixirc_paths ( :dev ) , do : [ &quot;lib&quot; ] ++ catalogues ( ) ... Then update the endpoint configuration in config/dev.exs to set up live reloading for your catalogue: config :my_app , MyAppWeb.Endpoint , live_reload : [ patterns : [ ~r&quot;priv/catalogue/.*(ex)$&quot; , ... ] ] Note : Without the above configurations, the list of available components is still presented in the catalogue page. However, when selecting a component, only its documentation and API will be shown. No example/playground will be loaded nor tracked by Phoenix's live reloader.","ref":"surface_catalogue.html#loading-examples-and-playgrounds","title":"Surface Catalogue - Loading Examples and Playgrounds","type":"extras"},{"doc":"If you're working on a suite of components that you want to share as a library, you may need to provide additional information about the catalogue. This will be necessary whenever your components require any css or js code that might not be available on the host project. To provide that additional information you must create a module implementing the Surface.Catalogue behaviour in your priv/catalogue/ folder. Example: defmodule MySuite.Catalogue do use Surface.Catalogue @impl true def config ( ) do [ head_css : &quot;&quot;&quot; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bulma/0.8.2/css/bulma.min.css&quot; /&gt; &quot;&quot;&quot; ] end end","ref":"surface_catalogue.html#sharing-catalogues","title":"Surface Catalogue - Sharing catalogues","type":"extras"},{"doc":"In case you're working on a lib that doesn't initialize its own Phoenix endpoint, you can use the built-in server provided by the surface_catalogue following these steps: Create a dev.exs script at the root of your project with the following content: # iex -S mix dev Logger . configure ( level : :debug ) # Start the catalogue server Surface.Catalogue.Server . start ( live_reload : [ patterns : [ ~r&quot;lib/my_lib_web/live/.*(ex)$&quot; ] ] ) Make sure you set the patterns option according to your project. To make things easier, add an alias run the script in your mix.exs : def project do [ ... , aliases : aliases ( ) ] end ... defp aliases do [ dev : &quot;run --no-halt dev.exs&quot; , ... ] end Run the server with: mix dev or using iex : iex - S mix dev You can now access the catalogue at localhost:4000 . If you need, you can also start the server using a different port: PORT = 4444 iex - S mix dev","ref":"surface_catalogue.html#running-the-built-in-catalogue-server","title":"Surface Catalogue - Running the built-in catalogue server","type":"extras"},{"doc":"The Surface.Catalogue.Server implementation was mostly extracted from the dev.exs script from phoenix_live_dashboard . All credits to the Phoenix Core Team.","ref":"surface_catalogue.html#credits","title":"Surface Catalogue - Credits","type":"extras"},{"doc":"Copyright (c) 2021, Marlus Saraiva. Surface source code is licensed under the MIT License .","ref":"surface_catalogue.html#license","title":"Surface Catalogue - License","type":"extras"},{"doc":"An extension for Bonfire that handles: Entering/editing rich text using ckeditor","ref":"bonfire_editor_ck.html","title":"Bonfire.Editor.Ck","type":"extras"},{"doc":"","ref":"bonfire_editor_ck.html#handy-commands","title":"Bonfire.Editor.Ck - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire This program is free software: you can redistribute it and/or modify it under the terms of the MIT License. You should have received a copy of the License along with this program.","ref":"bonfire_editor_ck.html#copyright-and-license","title":"Bonfire.Editor.Ck - Copyright and License","type":"extras"},{"doc":"An Elixir mix task that list the license(s) of all installed packages in your project.","ref":"licensir.html","title":"Licensir","type":"extras"},{"doc":"The package can be installed by adding licensir to your list of dependencies in mix.exs : def deps do [ { :licensir , &quot;~&gt; 0.6&quot; , only : :dev , runtime : false } ] end This mix task in most cases only needs to be run on a development machine and independent from the runtime applications, hence the only: dev, runtime: false options. Install locally If you do not wish to include this tool as part of your dependencies, you may also install it locally by running: $ mix archive . install hex licensir 0.6 . 2 Now you can access this tool from any path on your local machine that has access to mix .","ref":"licensir.html#installation","title":"Licensir - Installation","type":"extras"},{"doc":"Run mix licenses to get the list of packages and their licenses: $ mix licenses Notice: This is not a legal advice. Use the information below at your own risk. | Package | License | Version | Link | |---------------------|---------------------------|---------|---------------------------------------------| | certifi | BSD | | https://hex.pm/packages/certifi | | earmark | Apache 2.0 | 1.3.2 | https://hex.pm/packages/earmark | | ex_doc | Apache 2.0 | 0.20.2 | https://hex.pm/packages/ex_doc | | excoveralls | MIT | | https://hex.pm/packages/excoveralls | | hackney | Apache 2.0 | | https://hex.pm/packages/hackney | | idna | BSD; MIT | | https://hex.pm/packages/idna | | jason | Apache 2.0 | | https://hex.pm/packages/jason | | makeup | BSD; Unrecognized license | 0.8.0 | https://hex.pm/packages/makeup | | makeup_elixir | BSD | 0.13.0 | https://hex.pm/packages/makeup_elixir | | metrics | BSD | | https://hex.pm/packages/metrics | | mimerl | MIT | | https://hex.pm/packages/mimerl | | nimble_parsec | Apache 2.0 | 0.5.0 | https://hex.pm/packages/nimble_parsec | | ssl_verify_fun | MIT | | https://hex.pm/packages/ssl_verify_fun | | unicode_util_compat | Apache 2.0; BSD | | https://hex.pm/packages/unicode_util_compat | |---------------------|---------------------------|---------|---------------------------------------------| Run mix licenses --csv to output in csv format: Package,Version,License certifi,,BSD earmark,1.3.2,Apache 2.0 ex_doc,0.20.2,Apache 2.0 excoveralls,,&quot;Unsure (found: MIT, Unrecognized license file content)&quot; hackney,,Apache 2.0 idna,,&quot;Unsure (found: BSD, MIT)&quot; jason,,Apache 2.0 makeup,0.8.0,&quot;Unsure (found: BSD, Unrecognized license file content)&quot; makeup_elixir,0.13.0,BSD metrics,,BSD mimerl,,MIT nimble_parsec,0.5.0,Apache 2.0 ssl_verify_fun,,MIT unicode_util_compat,,&quot;Unsure (found: Apache 2.0, BSD)&quot; Flags --top-level-only - Only fetch license information from top level dependencies (e.g. packages that are directly listed in your application's mix.exs ). Excludes transitive dependencies.","ref":"licensir.html#usage","title":"Licensir - Usage","type":"extras"},{"doc":"You may call the function Licensir.Scanner.scan() from your Elixir application to get a list of license data per dependency. iex&gt; Licensir.Scanner . scan ( [ ] ) [ % Licensir.License { app : :jason , dep : % Mix.Dep { app : :jason , deps : ... } , file : &quot;Apache 2&quot; , hex_metadata : [ &quot;Apache 2.0&quot; ] , license : &quot;Apache 2.0&quot; , mix : nil , name : &quot;jason&quot; , version : nil } , % Licensir.License { ... } , ... ]","ref":"licensir.html#usage-as-a-library","title":"Licensir - Usage as a library","type":"extras"},{"doc":"Copyright (c) 2017-2019, Unnawut Leepaisalsuwanna. Licensir is released under the MIT License . This project contains 3rd party work as follow: ASCII table rendering: a partial copy of djm/table_rex . CSV rendering: a partial copy of beatrichartz/csv .","ref":"licensir.html#license","title":"Licensir - License","type":"extras"}]